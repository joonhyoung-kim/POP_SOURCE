<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.workOrder.workOrderBadResult">
	<select id="get_workOrderBadResult_list" resultType="camelMap" parameterType="java.util.HashMap">
	   SELECT A.ITEM_STOCK_INOUT_ID AS TO_INOUT_ID
	        , A.ITEM_ID
	        , A.PREV_LOCATION_CD AS FROM_LOCATION_CD
	        , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (A.DIVISION_CD
	                                                     , A.COMPANY_CD
	                                                     , A.PREV_LOCATION_CD)
	             FROM DUAL) AS FROM_LOCATION_NAME
	        , A.LOCATION_CD AS TO_LOCATION_CD
	        , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (A.DIVISION_CD
	                                                     , A.COMPANY_CD
	                                                     , A.LOCATION_CD)
	             FROM DUAL) AS TO_LOCATION_NAME
	        , A.REASON_CD AS BAD_TYPE
	        , A.QTY AS BAD_QTY
	        , TO_CHAR (A.IO_TIME, 'YYYY-MM-DD') AS CONFIRM_DATE
	        , 'Y' AS ADD_FLAG
	        , NVL((SELECT MOM_COMMON_PKG.FN_GET_INOUT_CANCEL_FLAG(A.DIVISION_CD
                                                        , A.COMPANY_CD
                                                        , A.IO_TYPE
                                                        , A.IO_CATEGORY
                                                        , A.ITEM_STOCK_INOUT_ID)
              FROM   DUAL ), 'N') AS CANCEL_FLAG
	        , A.DESCRIPTION
	        , A.PREV_STOCK_INOUT_ID AS FROM_INOUT_ID
	        , '' AS BAD_LOCATION_EDIT_FLAG
	        , A.IO_CATEGORY
	     FROM MOM_ITEM_STOCK_INOUT A
	    WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
          AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
          AND WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR}
          AND IO_TYPE = 'I'
          AND IO_CATEGORY IN ('P003','R005')
          AND ITEM_STOCK_TYPE = 'WD'
          AND NOT EXISTS
                  (SELECT '*'
                     FROM MOM_ITEM_STOCK_INOUT B
                    WHERE A.DIVISION_CD = B.DIVISION_CD
                      AND A.COMPANY_CD = B.COMPANY_CD
                      AND A.ITEM_STOCK_INOUT_ID = B.PREV_STOCK_INOUT_ID
                      AND A.IO_TYPE = B.IO_TYPE)
	   ORDER BY A.ITEM_STOCK_INOUT_ID
	</select>
	
	<select id="get_workOrderDetailItem_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT Z.CODE, Z.NAME, Z.LEV, Z.SEQ
		  FROM (
		        SELECT ITEM_ID AS CODE
		             , ITEM_ID || '(' || (SELECT MOM_COMMON_PKG.FN_GET_ITEM_NAME(DIVISION_CD, COMPANY_CD, ITEM_ID) || ')' FROM DUAL) AS NAME
		             , 1 LEV
		             , WORK_ORDER_ID AS SEQ
		          FROM MOM_WORK_ORDER
		         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		           AND WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR}
		        UNION ALL
		                SELECT ITEM_ID AS CODE
		             , ITEM_ID || '(' || (SELECT MOM_COMMON_PKG.FN_GET_ITEM_NAME(DIVISION_CD, COMPANY_CD, ITEM_ID) || ')' FROM DUAL) AS NAME
		             , 2 LEV
		             , MATERIAL_REQUEST_ID AS SEQ
		          FROM MOM_MATERIAL_REQUEST
		         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		           AND WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR}
		        ) Z
		ORDER BY Z.LEV, Z.SEQ
    </select>
    
    <select id="get_workOrderDetailLocation_list" resultType="camelMap" parameterType="java.util.HashMap">
    	SELECT LOCATION_CD AS CODE
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (
                       DIVISION_CD
                     , COMPANY_CD
                     , LOCATION_CD )
		          FROM DUAL) AS NAME
		  FROM MOM_RESOURCE A
		 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND A.RESOURCE_CD = (SELECT RESOURCE_CD 
		                          FROM MOM_WORK_ORDER 
		                         WHERE DIVISION_CD = A.DIVISION_CD
		                           AND COMPANY_CD = A.COMPANY_CD
		                           AND WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR})
    </select>
	
    <insert id="create_workOrderBadResultConfirm" statementType="CALLABLE">
<!-- 	{ -->
<!--         CALL SP_MOM_WORK_ORDER_PKG.P_ITEM_DEDUCT_BAD   (  -->
<!-- 	        #{p_err_code, mode=OUT, jdbcType=VARCHAR} -->
<!-- 	      , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}         -->
<!-- 	      , #{divisionCd, mode=IN, jdbcType=VARCHAR} -->
<!-- 	      , #{companyCd, mode=IN, jdbcType=VARCHAR}   -->
<!-- 	      , #{workOrderId, mode=IN, jdbcType=VARCHAR} -->
<!-- 	      , #{fromLocationCd, mode=IN, jdbcType=VARCHAR} -->
<!-- 	      , #{toLocationCd, mode=IN, jdbcType=VARCHAR} -->
<!-- 	      , #{itemId, mode=IN, jdbcType=VARCHAR} -->
<!-- 	      , #{confirmDate, mode=IN, jdbcType=VARCHAR} -->
<!-- 	      , #{badQty, mode=IN, jdbcType=VARCHAR} -->
<!-- 	      , #{badType, mode=IN, jdbcType=VARCHAR} -->
<!-- 	      , #{description, mode=IN, jdbcType=VARCHAR} -->
<!-- 	      , #{userId, mode=IN, jdbcType=VARCHAR} -->
<!--         ) -->
<!--     } -->

		{
	        CALL SP_MOM_WORK_ORDER_PKG.P_CREATE_WO_BAD   ( 
	           #{p_err_code, mode=OUT, jdbcType=VARCHAR}
	         , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}        
	         , #{divisionCd, mode=IN, jdbcType=VARCHAR}
	         , #{companyCd, mode=IN, jdbcType=VARCHAR}  
	         , #{workOrderId, mode=IN, jdbcType=VARCHAR}
	         , #{itemId, mode=IN, jdbcType=VARCHAR}
	         , #{fromLocationCd, mode=IN, jdbcType=VARCHAR}
	         , #{toLocationCd, mode=IN, jdbcType=VARCHAR}
	         , TO_DATE(#{confirmDate, mode=IN, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	         , #{badType, mode=IN, jdbcType=VARCHAR}
	         , #{badQty, mode=IN, jdbcType=NUMERIC}
	         , #{description, mode=IN, jdbcType=VARCHAR}
	         , #{userId, mode=IN, jdbcType=VARCHAR}
	        )
	    }
    </insert>
    
    <insert id="create_workOrderBadResultCancelConfirm" statementType="CALLABLE">
    {
    	CALL SP_MOM_WORK_ORDER_PKG.P_ITEM_DEDUCT_BAD_DEL ( 
		    #{p_err_code, mode=OUT, jdbcType=VARCHAR}
	      , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
	      , #{divisionCd, mode=IN, jdbcType=VARCHAR} 
	      , #{companyCd, mode=IN, jdbcType=VARCHAR}
	      , #{fromInoutId, mode=IN, jdbcType=VARCHAR}
	      , #{toInoutId, mode=IN, jdbcType=VARCHAR}
	      , #{userId, mode=IN, jdbcType=VARCHAR}
        )
    }
    </insert>
    
    <select id="get_badLocationList_list" resultType="camelMap" parameterType="java.util.HashMap">
	    SELECT FACILITY_CD AS CODE, FACILITY_NAME AS NAME 
		FROM   MOM_FACILITY F
		WHERE  F.SCRAP_LOCATION_FLAG = 'Y'
		AND    F.FACILITY_CD LIKE SUBSTR(#{resourceCd, jdbcType=VARCHAR}, 0, 1) || '%'
		AND    F.USE_YN = 'Y'
		AND    F.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
        AND    F.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
    </select>
    
    <select id="get_badLocationEditFlag_list" resultType="camelMap" parameterType="java.util.HashMap">
    SELECT NVL(ATTRIBUTE1, 'N') AS BAD_LOCATION_EDIT_YN
	FROM   MOM_CODE 
	WHERE  CODE_CLASS_ID = 'WO_BAD_TYPE' 
	AND    CODE_ID = #{codeId, jdbcType=VARCHAR}
	AND    USE_YN = 'Y'
	AND    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
    AND    COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
    </select>
    
</mapper>