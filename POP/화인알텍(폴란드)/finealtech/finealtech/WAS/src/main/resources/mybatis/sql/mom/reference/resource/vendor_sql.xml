<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.reference.resource.vendor"> 
	<select id="get_vendor_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.DIVISION_CD
			 , A.COMPANY_CD
			 , A.VENDOR_CD
	         , A.VENDOR_NAME
	         , A.VENDOR_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD,A.COMPANY_CD,'VENDOR_TYPE', A.VENDOR_TYPE) FROM DUAL) VENDOR_TYPE_NAME
	         , A.CEO_NAME
	         , A.ADDRESS
	         , A.COUNTRY_CODE
	         , A.BUSINESS_NO
	         , A.BUSINESS_TYPE
	         , A.BUSINESS_STATUS
	         , A.MANAGER_NAME
	         , A.EMAIL
	         , A.HOMEPAGE
	         , A.DEAL_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD  
		                                              , 'USE_FLAG'
		                                              , A.DEAL_FLAG)
		          FROM DUAL) AS DEAL_FLAG_NAME
	         , TO_CHAR(A.DEAL_START_DATE, 'yyyy-mm-dd') AS DEAL_START_DATE
	         , TO_CHAR(A.DEAL_END_DATE, 'yyyy-mm-dd') AS DEAL_END_DATE
	         , A.TEL_NO
	         , A.FAX_NO
	         , A.PRE_BUILD_TERM
	         , A.DEPARTURE_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD  
		                                              , 'USE_FLAG'
		                                              , A.DEPARTURE_FLAG)
		          FROM DUAL) AS DEPARTURE_FLAG_NAME
	         , A.SHIP_IN_USE_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD  
		                                              , 'USE_FLAG'
		                                              , A.SHIP_IN_USE_FLAG)
		          FROM DUAL) AS SHIP_IN_USE_FLAG_NAME
	         , A.USE_YN
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD  
		                                              , 'USE_FLAG'
		                                              , A.USE_YN)
		          FROM DUAL) AS USE_YN_NAME
	         , A.DESCRIPTION
	         , TO_CHAR(A.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
	         , A.UPDATE_BY
	         , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(A.DIVISION_CD, A.COMPANY_CD, A.UPDATE_BY) FROM DUAL) AS UPDATE_BY_NAME
	         , A.SHIP_IN_LOCATION
	      FROM MOM_VENDOR A
	     WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	       AND A.USE_YN = 'Y'
	      <if test = "vendorId != '' and vendorId != null">
	       AND (UPPER(A.VENDOR_CD) LIKE UPPER('%' || #{vendorId, jdbcType=VARCHAR} || '%') )
	      </if>
	      <if test = "vendorName != '' and vendorName != null">
	       AND (UPPER(A.VENDOR_NAME) LIKE UPPER('%' || #{vendorName, jdbcType=VARCHAR} || '%')) 
	      </if>
	      <if test = "vendorType != '' and vendorType != null">
	       AND A.VENDOR_TYPE = #{vendorType, jdbcType=VARCHAR}
	      </if>
	      <if test = "businessNo != '' and businessNo != null">
	       AND A.BUSINESS_NO LIKE UPPER('%' || #{businessNo, jdbcType=VARCHAR} || '%')
	      </if>
	     ORDER BY A.VENDOR_TYPE, A.VENDOR_CD
	</select>
	
	<select id="get_vendor" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT *
		FROM   MOM_VENDOR
		WHERE  DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    COMPANY_CD  = #{companyCd,jdbcType=VARCHAR}
		AND 	 VENDOR_CD = #{vendorCd, jdbcType=VARCHAR}
	</select>
	
	<insert id="create_vendor" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE	  	
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
		INSERT INTO MOM_VENDOR(
			DIVISION_CD,
			COMPANY_CD,
			VENDOR_CD,
			VENDOR_NAME,
			VENDOR_TYPE,
			CEO_NAME,
			ADDRESS,
			COUNTRY_CODE,
			BUSINESS_NO,
			BUSINESS_TYPE,
			BUSINESS_STATUS,
			MANAGER_NAME,
			EMAIL,
			HOMEPAGE,
			DEAL_FLAG,
			DEAL_START_DATE,
			DEAL_END_DATE,
			TEL_NO,
			FAX_NO,
			PRE_BUILD_TERM,
			DEPARTURE_FLAG,
			SHIP_IN_USE_FLAG,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			SHIP_IN_LOCATION
			)
			VALUES(
			#{divisionCd, jdbcType=VARCHAR},
			#{companyCd, jdbcType=VARCHAR},
			UPPER(TRIM(#{vendorCd, jdbcType=VARCHAR})),
			#{vendorName, jdbcType=VARCHAR},
			#{vendorType, jdbcType=VARCHAR},
			#{ceoName, jdbcType=VARCHAR},
			#{address, jdbcType=VARCHAR},
			#{countryCode, jdbcType=VARCHAR},
			#{businessNo, jdbcType=VARCHAR},
			#{businessType, jdbcType=VARCHAR},
			#{businessStatus, jdbcType=VARCHAR},
			#{managerName, jdbcType=VARCHAR},
			#{email, jdbcType=VARCHAR},
			#{homepage, jdbcType=VARCHAR},
			#{dealFlag, jdbcType=VARCHAR},
			TO_DATE(#{dealStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
			TO_DATE(#{dealEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
			#{telNo, jdbcType=VARCHAR},
			#{faxNo, jdbcType=VARCHAR},
			#{preBuildTerm, jdbcType=VARCHAR},
			NVL(#{departureFlag, jdbcType=VARCHAR},'N'),
			NVL(#{shipInUseFlag, jdbcType=VARCHAR},'N'),
			NVL(#{useYn, jdbcType=VARCHAR}, 'Y'),
			#{description, jdbcType=VARCHAR},
			MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			#{createBy, jdbcType=VARCHAR},
			MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			#{updateBy, jdbcType=VARCHAR},
			#{shipInLocation, jdbcType=VARCHAR}
		)
	   ;
	   
	   INSERT INTO MOM_VENDOR_HIST (
		   	LAST_EVENT_SEQ,
			DIVISION_CD,
			COMPANY_CD,
			VENDOR_CD,
			VENDOR_NAME,
			VENDOR_TYPE,
			CEO_NAME,
			ADDRESS,
			COUNTRY_CODE,
			BUSINESS_NO,
			BUSINESS_TYPE,
			BUSINESS_STATUS,
			MANAGER_NAME,
			EMAIL,
			HOMEPAGE,
			DEAL_FLAG,
			DEAL_START_DATE,
			DEAL_END_DATE,
			TEL_NO,
			FAX_NO,
			PRE_BUILD_TERM,
			DEPARTURE_FLAG,
			SHIP_IN_USE_FLAG,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			SHIP_IN_LOCATION
	   )
	   SELECT S_ORDER_SEQ.NEXTVAL,
	   		  DIVISION_CD,
			  COMPANY_CD,
			  VENDOR_CD,
			  VENDOR_NAME,
			  VENDOR_TYPE,
			  CEO_NAME,
			  ADDRESS,
			  COUNTRY_CODE,
			  BUSINESS_NO,
			  BUSINESS_TYPE,
			  BUSINESS_STATUS,
			  MANAGER_NAME,
			  EMAIL,
			  HOMEPAGE,
			  DEAL_FLAG,
			  DEAL_START_DATE,
			  DEAL_END_DATE,
			  TEL_NO,
			  FAX_NO,
			  PRE_BUILD_TERM,
			  DEPARTURE_FLAG,
			  SHIP_IN_USE_FLAG,
			  USE_YN,
			  DESCRIPTION,
			  CREATE_DATE,
			  CREATE_BY,
			  UPDATE_DATE,
			  UPDATE_BY,
			  TID,
			  SHIP_IN_LOCATION
		 FROM MOM_VENDOR
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		  AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		  AND VENDOR_CD = UPPER(TRIM(#{vendorCd, jdbcType=VARCHAR}))
		 ;
		 		 
		SELECT
			CASE 
				WHEN COUNT(VENDOR_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_VENDOR
		WHERE 
			    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
			AND VENDOR_CD = UPPER(TRIM(#{vendorCd, jdbcType=VARCHAR}))
		;
	 END
	}
	</insert>	
	
	<update id="modify_vendor" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE	  	
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
		UPDATE MOM_VENDOR
		SET    VENDOR_NAME     = #{vendorName, jdbcType=VARCHAR},
			   VENDOR_TYPE     = #{vendorType, jdbcType=VARCHAR},
			   CEO_NAME        = #{ceoName, jdbcType=VARCHAR},
			   ADDRESS         = #{address, jdbcType=VARCHAR},
			   COUNTRY_CODE    = #{countryCode, jdbcType=VARCHAR},
			   BUSINESS_NO     = #{businessNo, jdbcType=VARCHAR},
			   BUSINESS_TYPE   = #{businessType, jdbcType=VARCHAR},
		       BUSINESS_STATUS = #{businessStatus, jdbcType=VARCHAR},
			   MANAGER_NAME    = #{managerName, jdbcType=VARCHAR},
		       EMAIL           = #{email, jdbcType=VARCHAR},
			   HOMEPAGE        = #{homepage, jdbcType=VARCHAR},
			   DEAL_FLAG       = #{dealFlag, jdbcType=VARCHAR},
			   DEAL_START_DATE = TO_DATE(#{dealStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
			   DEAL_END_DATE   = TO_DATE(#{dealEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
			   TEL_NO          = #{telNo, jdbcType=VARCHAR},
			   FAX_NO          = #{faxNo, jdbcType=VARCHAR},
			   PRE_BUILD_TERM  = #{prebuildTerm, jdbcType=VARCHAR},
			   DEPARTURE_FLAG  = NVL(#{departureFlag, jdbcType=VARCHAR},'N'),
			   SHIP_IN_USE_FLAG= NVL(#{shipInUseFlag, jdbcType=VARCHAR},'N'),
			   USE_YN	         = NVL(#{useYn, jdbcType=VARCHAR}, 'Y'),
			   UPDATE_DATE 	 = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			   UPDATE_BY 		 = #{updateBy, jdbcType=VARCHAR},
			   DESCRIPTION		 = #{description, jdbcType=VARCHAR}    
		WHERE  DIVISION_CD 	 = #{divisionCd, jdbcType=VARCHAR}     
  		AND    COMPANY_CD 		 = #{companyCd,jdbcType=VARCHAR}       
  		AND    VENDOR_CD		 = UPPER(TRIM(#{vendorCd, jdbcType=VARCHAR}))
  	  ;
  	  
  	  INSERT INTO MOM_VENDOR_HIST (
		   	LAST_EVENT_SEQ,
			DIVISION_CD,
			COMPANY_CD,
			VENDOR_CD,
			VENDOR_NAME,
			VENDOR_TYPE,
			CEO_NAME,
			ADDRESS,
			COUNTRY_CODE,
			BUSINESS_NO,
			BUSINESS_TYPE,
			BUSINESS_STATUS,
			MANAGER_NAME,
			EMAIL,
			HOMEPAGE,
			DEAL_FLAG,
			DEAL_START_DATE,
			DEAL_END_DATE,
			TEL_NO,
			FAX_NO,
			PRE_BUILD_TERM,
			DEPARTURE_FLAG,
			SHIP_IN_USE_FLAG,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			SHIP_IN_LOCATION
	   )
	   SELECT S_ORDER_SEQ.NEXTVAL,
	   		  DIVISION_CD,
			  COMPANY_CD,
			  VENDOR_CD,
			  VENDOR_NAME,
			  VENDOR_TYPE,
			  CEO_NAME,
			  ADDRESS,
			  COUNTRY_CODE,
			  BUSINESS_NO,
			  BUSINESS_TYPE,
			  BUSINESS_STATUS,
			  MANAGER_NAME,
			  EMAIL,
			  HOMEPAGE,
			  DEAL_FLAG,
			  DEAL_START_DATE,
			  DEAL_END_DATE,
			  TEL_NO,
			  FAX_NO,
			  PRE_BUILD_TERM,
			  DEPARTURE_FLAG,
			  SHIP_IN_USE_FLAG,
			  USE_YN,
			  DESCRIPTION,
			  MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			  UPDATE_BY,
			  UPDATE_DATE,
			  UPDATE_BY,
			  TID,
			  SHIP_IN_LOCATION
		 FROM MOM_VENDOR
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		  AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		  AND VENDOR_CD = UPPER(TRIM(#{vendorCd, jdbcType=VARCHAR}))
		 ;
		
		SELECT
			CASE 
				WHEN COUNT(VENDOR_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_VENDOR
		WHERE 
			    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
			AND VENDOR_CD = UPPER(TRIM(#{vendorCd, jdbcType=VARCHAR}))
		;
	 END
	}
	</update>
	
	<delete id="remove_vendor" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
	  UPDATE MOM_VENDOR
	     SET DESCRIPTION = 'Delete Data'
		   , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
	  	   , UPDATE_BY = #{userId, jdbcType=VARCHAR}
	   WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	     AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	     AND VENDOR_CD = UPPER(#{vendorCd, jdbcType=VARCHAR})
	  ;
	   
	  INSERT INTO MOM_VENDOR_HIST (
		   	LAST_EVENT_SEQ,
			DIVISION_CD,
			COMPANY_CD,
			VENDOR_CD,
			VENDOR_NAME,
			VENDOR_TYPE,
			CEO_NAME,
			ADDRESS,
			COUNTRY_CODE,
			BUSINESS_NO,
			BUSINESS_TYPE,
			BUSINESS_STATUS,
			MANAGER_NAME,
			EMAIL,
			HOMEPAGE,
			DEAL_FLAG,
			DEAL_START_DATE,
			DEAL_END_DATE,
			TEL_NO,
			FAX_NO,
			PRE_BUILD_TERM,
			DEPARTURE_FLAG,
			SHIP_IN_USE_FLAG,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			SHIP_IN_LOCATION
	   )
	   SELECT S_ORDER_SEQ.NEXTVAL,
	   		  DIVISION_CD,
			  COMPANY_CD,
			  VENDOR_CD,
			  VENDOR_NAME,
			  VENDOR_TYPE,
			  CEO_NAME,
			  ADDRESS,
			  COUNTRY_CODE,
			  BUSINESS_NO,
			  BUSINESS_TYPE,
			  BUSINESS_STATUS,
			  MANAGER_NAME,
			  EMAIL,
			  HOMEPAGE,
			  DEAL_FLAG,
			  DEAL_START_DATE,
			  DEAL_END_DATE,
			  TEL_NO,
			  FAX_NO,
			  PRE_BUILD_TERM,
			  DEPARTURE_FLAG,
			  SHIP_IN_USE_FLAG,
			  USE_YN,
			  DESCRIPTION,
			  CREATE_DATE,
			  CREATE_BY,
			  UPDATE_DATE,
			  UPDATE_BY,
			  TID,
			  SHIP_IN_LOCATION
		 FROM MOM_VENDOR
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		  AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		  AND VENDOR_CD = UPPER(#{vendorCd, jdbcType=VARCHAR})
	  ;	  
	   	  
		DELETE FROM MOM_VENDOR
		WHERE  DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
  		AND    COMPANY_CD  = #{companyCd,jdbcType=VARCHAR}
  		AND    VENDOR_CD   = UPPER(#{vendorCd, jdbcType=VARCHAR})
  	  ;
  	 	
		SELECT
			CASE 
				WHEN COUNT(VENDOR_CD) = 0 THEN 'S'
				ELSE 'E' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_VENDOR
		WHERE 
			    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
			AND VENDOR_CD = UPPER(#{vendorCd, jdbcType=VARCHAR})
		;
  	 END
  	}
	</delete>
	
	<insert id="create_vendorLocationProc" statementType="CALLABLE">
	{
        CALL MOM_BASIC_INFO_PKG.CREATE_VENDOR_LOCATION_PROC(
        	#{p_err_code , mode=OUT, jdbcType=VARCHAR}
           ,#{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           ,#{divisionCd, mode=IN, jdbcType=VARCHAR}
           ,#{companyCd, mode=IN, jdbcType=VARCHAR}
           ,UPPER(TRIM(#{vendorCd, mode=IN, jdbcType=VARCHAR}))
           ,#{updateBy, mode=IN, jdbcType=VARCHAR}
        )
    }
	</insert>
</mapper>