<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.purchase.purchasing.irregularOrder">
	<select id="get_irregularOrder_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.* 
		FROM (SELECT ''   AS  MATERIAL_ORDER_ID 
		     , ''   AS  ORDER_GROUP_ID
		     , #{deliveryDate, jdbcType=VARCHAR} AS REQUEST_DATE
		     , A.ITEM_ID
		     , B.ITEM_NAME
		     , B.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( B.DIVISION_CD
		                                              , B.COMPANY_CD
		                                              , 'ITEM_TYPE'
		                                              , B.ITEM_TYPE ) 
		        FROM   DUAL ) AS ITEM_TYPE_NAME 
		     , B.SPECIFICATION
		     , B.ITEM_USER_ID
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME( B.DIVISION_CD
		                                              , B.COMPANY_CD
		                                              , B.ITEM_USER_ID ) 
		        FROM   DUAL ) AS ITEM_USER_NAME 
		     , B.UNIT
			 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( B.DIVISION_CD
		                                              , B.COMPANY_CD
		                                              , 'ITEM_UNIT'
		                                              , B.UNIT ) 
		        FROM   DUAL ) AS UNIT_NAME 
		     , A.UNIT_PRICE
		     , A.CURRENCY_CD
		     , A.CURRENCY_NAME
		     , A.MARKET_CD
		     , A.MARKET_NAME
		     , B.TEST_REPORT_FLAG 
		     , NVL(B.IQC_FLAG, 'N') AS IQC_FLAG        
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( B.DIVISION_CD
		                                              , B.COMPANY_CD
		                                              , 'USE_FLAG'
		                                              , NVL(B.IQC_FLAG, 'N') ) 
		        FROM   DUAL ) AS IQC_USE_NAME 
		     , A.VENDOR_CD
		     , A.VENDOR_NAME
<!-- 		     , NVL(B.DEPARTURE_VENDOR_CD, A.VENDOR_CD) AS DEPARTURE_VENDOR_CD -->
			 , DECODE(A.VENDOR_CD, B.VENDOR_CD, B.DEPARTURE_VENDOR_CD, '') AS DEPARTURE_VENDOR_CD
			 , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME( B.DIVISION_CD
		                                                , B.COMPANY_CD
		                                                , NVL(B.DEPARTURE_VENDOR_CD , B.VENDOR_CD) ) 
		        FROM   DUAL ) AS DEPARTURE_VENDOR_NAME
		     , B.IN_LOCATION_ID
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME( B.DIVISION_CD
		                                                  , B.COMPANY_CD
		                                                  , B.IN_LOCATION_ID ) 
		        FROM   DUAL )   AS LOCATION_NAME
		     , 0    AS REQUEST_QTY
		     , B.MOQ  
		     , C.DEPARTURE_FLAG 
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( B.DIVISION_CD
                                                    , B.COMPANY_CD
                                                    , 'USE_FLAG'
                                                    , C.DEPARTURE_FLAG ) 
              FROM   DUAL ) AS DEPARTURE_FLAG_NAME  
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_DECIMAL_POINT_FLAG( B.DIVISION_CD
		                                                            , B.COMPANY_CD
		                                                            , B.UNIT  )
		        FROM   DUAL)    AS UNIT_DP_USE_FLAG  
		     , ''   AS  DESCRIPTION    
		     , (SELECT MOM_COMMON_PKG.FN_GET_CURRENT_STOCK( A.DIVISION_CD
		                                                  , A.COMPANY_CD
		                                                  , A.ITEM_ID
		                                                  , B.IN_LOCATION_ID)
		        FROM   DUAL)    AS CURRENT_QTY 
		     , NVL(B.FREE_OFFER_FLAG , 'N')  AS FREE_OFFER    
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( B.DIVISION_CD
                                                    , B.COMPANY_CD
                                                    , 'FREE_OFFER'
                                                    , NVL(B.FREE_OFFER_FLAG , 'N') ) 
              FROM   DUAL ) AS FREE_OFFER_NAME                                              
		FROM   MOM_ITEM_IN_PRICE_V  A
		    ,  MOM_ITEM_DEFINITION B
		    ,  MOM_VENDOR          C
		WHERE  A.DIVISION_CD  = B.DIVISION_CD 
		AND    A.COMPANY_CD   = B.COMPANY_CD    
		AND    A.ITEM_ID      = B.ITEM_ID
		AND    A.DIVISION_CD  = C.DIVISION_CD
		AND    A.COMPANY_CD   = C.COMPANY_CD
		AND    A.VENDOR_CD    = C.VENDOR_CD
		AND    A.END_DATE > TRUNC(MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}))
		AND    NVL(B.USE_YN, 'Y') = 'Y'
		AND    B.ITEM_TYPE NOT IN ('FP', 'SP')
<!-- 		AND    (B.ITEM_TYPE = 'GI' OR (B.ITEM_TYPE <![CDATA[<>]]> 'GI' AND NVL(B.FREE_OFFER_FLAG, 'N') = 'N')) -->
		AND    A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    A.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		<if test="vendorName != '' and vendorName != null">
		AND    A.VENDOR_CD = #{vendorName, jdbcType=VARCHAR}
		</if>
		<if test="itemName != '' and itemName != null">
		AND	   (B.ITEM_ID LIKE UPPER('%' || #{itemName, jdbcType=VARCHAR} || '%')
		        OR UPPER(B.ITEM_NAME) LIKE UPPER('%' || #{itemName, jdbcType=VARCHAR} || '%')
		        OR UPPER(B.SPECIFICATION) LIKE UPPER('%' || #{itemName, jdbcType=VARCHAR} || '%'))
		</if>
		) A
		<if test="userName != '' and userName != null">
		WHERE  (UPPER(A.ITEM_USER_ID) LIKE UPPER('%' || #{userName, jdbcType=VARCHAR} || '%')
		        OR UPPER(A.ITEM_USER_NAME) LIKE UPPER('%' || #{userName, jdbcType=VARCHAR} || '%'))
		</if>
	</select>
	
	<select id="get_irregularOrder" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT *                                           
		FROM   MOM_MATERIAL_ORDER  A
		WHERE  A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    A.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		AND    A.MATERIAL_ORDER_ID = #{materialOrderId, jdbcType=VARCHAR}
	</select>

</mapper>