<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.close.materialMonthlyClosingHist">
	<select id="get_materialMonthlyClosingHist_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT TO_CHAR(B.END_DATE, 'yyyy-mm') AS END_MONTH
		     , A.MAGAM_SEQ
		     , B.END_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(B.DIVISION_CD, B.COMPANY_CD, 'RESULT_END_FLAG', B.END_TYPE) FROM DUAL) AS END_TYPE_NAME
		     , A.IO_CATEGORY
		     , MC.CODE_NAME  AS IO_CATEGORY_NAME
		     , B.END_FLAG
		     , B.VENDOR_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(B.DIVISION_CD, B.COMPANY_CD, B.VENDOR_CD) FROM DUAL) AS VENDOR_NAME
		     , B.END_GROUP
		     , B.TAX_FLAG
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(B.DIVISION_CD, B.COMPANY_CD, 'MATERIAL_TAX', B.TAX_FLAG) FROM DUAL) AS TAX_FLAG_NAME
		     , A.CURRENCY_CD
		     , TO_CHAR(B.END_DATE, 'yyyy-mm-dd') AS END_DATE
		     , TO_CHAR(B.UPDATE_DATE, 'yyyy-mm-dd') AS END_CREATE_DATE
		     , TO_CHAR(A.IO_TIME, 'yyyy-mm-dd') AS IO_TIME
		     , A.ITEM_INPUT_ID
		     , A.ITEM_ID
		     , D.ITEM_NAME
		     , D.SPECIFICATION
		     , A.QTY
		     , A.CONVERSION_UNIT_QTY
		     , A.EXCHANGE_RATE
		     , DECODE(A.CURRENCY_CD, P.CURRENCY_CD, A.UNIT_PRICE, A.FOREIGN_UNIT_PRICE) AS UNIT_PRICE
		     , DECODE(A.CURRENCY_CD, P.CURRENCY_CD, A.INOUT_PRICE, A.FOREIGN_TOTAL_PRICE) AS FOREIGN_TOTAL_PRICE
		     , A.INOUT_PRICE
		     , A.INOUT_VAT
		     , A.TOTAL_AMOUNT
		     , B.DESCRIPTION AS MASTER_DESC
		     , A.DESCRIPTION AS DETAIL_DESC
		     , D.ITEM_TYPE
		  FROM MOM_ITEM_LAST A
		     , MOM_ITEM_MONTH_END B
		     , MOM_ITEM_DEFINITION D
		     , MOM_PARAMETER P
		     , MOM_CODE MC
		 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND A.DIVISION_CD = B.DIVISION_CD
		   AND A.COMPANY_CD = B.COMPANY_CD
		   AND A.MAGAM_SEQ = B.END_SEQ
		   AND A.DIVISION_CD = D.DIVISION_CD(+)
		   AND A.COMPANY_CD = D.COMPANY_CD(+)
		   AND A.ITEM_ID = D.ITEM_ID(+)
		   AND A.DIVISION_CD = P.DIVISION_CD
		   AND A.COMPANY_CD = P.COMPANY_CD
		   AND A.IO_TYPE = B.INOUT_FLAG
		   AND B.INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR}
		   AND A.DIVISION_CD = MC.DIVISION_CD
           AND A.COMPANY_CD = MC.COMPANY_CD
           AND A.IO_CATEGORY = MC.CODE_ID
           AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
           AND MC.USE_YN = 'Y'
		<if test="dateCombo == 'CLOSED_TIME'">
		  <if test="fromDate != null and fromDate != '' and toDate != null and toDate != ''">    
		   AND B.END_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd')
		  </if>
		</if>
		<if test="dateCombo == 'STATE_TIME'">
		  <if test="fromDate != null and fromDate != '' and toDate != null and toDate != ''">   
		   AND TRUNC(A.IO_TIME) BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd')
		  </if>
		</if>
		<if test="partNo != null and partNo != ''">
		   AND A.ITEM_ID LIKE UPPER('%' || #{partNo, jdbcType=VARCHAR} || '%')
		</if>
		<if test="closeGroup != null and closeGroup != ''">
		   AND B.END_GROUP LIKE ('%' || #{closeGroup, jdbcType=VARCHAR} || '%')
		</if>
		<if test="taxType != null and taxType != ''">
		   AND B.TAX_FLAG = #{taxType, jdbcType=VARCHAR}
		</if>
		<if test="vendorName != null and vendorName != ''">
		   AND B.VENDOR_CD = #{vendorName, jdbcType=VARCHAR}
		</if>
		<if test="currency != null and currency != ''">
		   AND A.CURRENCY_CD = #{currency, jdbcType=VARCHAR}
		</if>
		<if test="closeType != null and closeType != ''">
		   AND B.END_TYPE = #{closeType, jdbcType=VARCHAR}
		</if>
		<if test="closeFlag != null and closeFlag != ''">
		   AND B.END_FLAG = #{closeFlag, jdbcType=VARCHAR}
		</if>
		<if test="itemType != null and itemType != ''">
		   AND D.ITEM_TYPE = #{itemType, jdbcType=VARCHAR}
		</if>
		 ORDER BY B.END_SEQ DESC, MC.UI_SEQUENCE, A.MAGAM_DETAIL_SEQ
	</select>
	
</mapper>