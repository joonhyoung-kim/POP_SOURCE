<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.reference.workinghours.resourceByShiftPlanSchedule">
	<select id="get_resourceByShiftPlanSchedule_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.*, A.WORK_TIME - A.OFF_TIME AS REAL_WORK_TIME
		  FROM ( SELECT MSS.RESOURCE_CD
				      , MR.RESOURCE_NAME
				      , MR.RESOURCE_GROUP_CD
				      , (SELECT MOM_COMMON_PKG.FN_GET_RESOURCE_GROUP_NAME(MSC.DIVISION_CD, MSC.COMPANY_CD, MR.RESOURCE_GROUP_CD)
				           FROM   DUAL)       AS RESOURCE_GROUP_NAME
				      , TO_CHAR(MSS.APPLY_DATE, 'YYYY-MM-DD') AS APPLY_DATE
				      , TO_CHAR(TRUNC(MSS.APPLY_DATE), 'DAY') AS SHIFT_DAY
				      , MSS.SHIFT_CD
				      , MSS.SHIFT_CD	 AS H_SHIFT_CD 
				      , MSC.SHIFT_NAME
				      , MSC.SHIFT_TYPE
				      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MSC.DIVISION_CD, MSC.COMPANY_CD, 'SHIFT_TYPE', MSC.SHIFT_TYPE)
				           FROM   DUAL ) AS SHIFT_TYPE_NM
				      , MSC.START_TIME  
				      , MSC.END_TIME    
				      , MSC.WORK_TIME
				      , MSS.WORK_PERSON_CNT
				      , (SELECT NVL(SUM(SOC.OFF_TIME), 0)
				           FROM MOM_SHIFT_CODE_OFF_MAP MOC
				              , MOM_SHIFT_OFF_CODE SOC
				          WHERE MOC.DIVISION_CD = SOC.DIVISION_CD
				            AND MOC.COMPANY_CD  = SOC.COMPANY_CD
				        	AND MOC.OFF_CD      = SOC.OFF_CD
					        AND MOC.DIVISION_CD = MSS.DIVISION_CD
					        AND MOC.COMPANY_CD  = MSS.COMPANY_CD
					        AND MOC.SHIFT_CD    = MSS.SHIFT_CD
					        AND MOC.USE_YN = 'Y'
					        AND SOC.USE_YN = 'Y' )  AS OFF_TIME
				   FROM MOM_SHIFT_SCHEDULE MSS
				      , MOM_RESOURCE MR
				      , MOM_SHIFT_CODE MSC
				  WHERE MSS.DIVISION_CD = MR.DIVISION_CD
					AND MSS.COMPANY_CD  = MR.COMPANY_CD
					AND MSS.RESOURCE_CD = MR.RESOURCE_CD
					AND MSS.DIVISION_CD = MSC.DIVISION_CD
					AND MSS.COMPANY_CD  = MSC.COMPANY_CD
					AND MSS.SHIFT_CD    = MSC.SHIFT_CD 
					AND MSS.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
					AND MSS.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
					AND MSC.USE_YN = 'Y'
				   <if test="fromDate != null and fromDate != '' and toDate != null and toDate != ''">
					AND MSS.APPLY_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
				   </if>
				   <if test="resourceCd != null and resourceCd != ''">
					AND MSS.RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
				   </if>
				   <if test="applyDate != null and applyDate != ''">
				    AND MSS.APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
				   </if> ) A
		ORDER BY A.APPLY_DATE, A.SHIFT_TYPE
	</select>
	
	<select id="get_shiftTypeName_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT NVL(MOM_COMMON_PKG.FN_GET_CODE_NAME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}, 'SHIFT_TYPE', #{gridShiftType, jdbcType=VARCHAR}), 'NULL') AS SHIFT_TYPE_NAME
		  FROM DUAL
	</select>
	
	<select id="get_shiftTime_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MSC.*
             , (SELECT SUM(SOC.OFF_TIME)
                  FROM MOM_SHIFT_CODE_OFF_MAP MOC
                     , MOM_SHIFT_OFF_CODE SOC
                 WHERE MOC.DIVISION_CD = SOC.DIVISION_CD
                   AND MOC.COMPANY_CD  = SOC.COMPANY_CD
                   AND MOC.OFF_CD      = SOC.OFF_CD
                   AND MOC.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
                   AND MOC.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
                   AND MOC.SHIFT_CD    = #{shiftCd, jdbcType=VARCHAR}
                   AND MOC.USE_YN = 'Y'
                   AND SOC.USE_YN = 'Y' )  AS OFF_TIME
          FROM MOM_SHIFT_CODE MSC
         WHERE MSC.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND MSC.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND MSC.SHIFT_CD = #{shiftCd, jdbcType=VARCHAR}
	</select>
	
	<insert id="create_resourceByShiftPlanSchedule" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
		INSERT INTO MOM_SHIFT_SCHEDULE
	        ( DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
		VALUES
            ( #{divisionCd, jdbcType=VARCHAR}
            , #{companyCd, jdbcType=VARCHAR}
			, #{shiftCd, jdbcType=VARCHAR}
            , UPPER(TRIM(#{resourceCd, jdbcType=VARCHAR}))
            , #{startTime, jdbcType=VARCHAR}
            , #{endTime, jdbcType=VARCHAR}
            , TO_DATE(#{applicationDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
            , #{workPerson, jdbcType=NUMERIC}
            , #{description, jdbcType=VARCHAR}
            , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
            , #{updateBy, jdbcType=VARCHAR}
            , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
            , #{updateBy, jdbcType=VARCHAR}
            , #{tid, jdbcType=VARCHAR}
            )
        ;
        
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'C'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = UPPER(TRIM(#{resourceCd, jdbcType=VARCHAR}))
           AND APPLY_DATE = TO_DATE(#{applicationDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{resourceCd, jdbcType=VARCHAR}))
		   AND APPLY_DATE = TO_DATE(#{applicationDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
	 END
	}
	</insert>
	
	<delete id="remove_resourceByShiftPlanSchedule" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
	  	UPDATE MOM_SHIFT_SCHEDULE
	  	   SET DESCRIPTION = 'Delete Data'
	  	     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY   = #{updateBy, jdbcType=VARCHAR}
	  	 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD    = #{shiftCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
           AND APPLY_DATE  = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'D'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
           AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
	  	
		DELETE FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD	 = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD  	 = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD 	 = #{shiftCd, jdbcType=VARCHAR}
           AND RESOURCE_CD	 = #{resourceCd, jdbcType=VARCHAR}
           AND APPLY_DATE	 = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'S'
				ELSE 'E' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
	 END
	}
	</delete>
	
	<insert id="create_resourceByShiftPlanScheduleModify" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
	  	UPDATE MOM_SHIFT_SCHEDULE
	  	   SET DESCRIPTION = 'Delete And Insert Data'
	  	     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY   = #{updateBy, jdbcType=VARCHAR}
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{hShiftCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{resourceCd, jdbcType=VARCHAR}))
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'D'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{hShiftCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{resourceCd, jdbcType=VARCHAR}))
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
	  	
		DELETE FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{hShiftCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{resourceCd, jdbcType=VARCHAR}))
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
		
		INSERT INTO MOM_SHIFT_SCHEDULE
			( DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
			)
		VALUES
			(
			   #{divisionCd, jdbcType=VARCHAR}
		     , #{companyCd, jdbcType=VARCHAR}
		     , #{shiftCd, jdbcType=VARCHAR}
		     , #{resourceCd, jdbcType=VARCHAR}
		     , #{startTime, jdbcType=VARCHAR}
		     , #{endTime, jdbcType=VARCHAR}
		     , TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		     , #{workPersonCnt, jdbcType=NUMERIC}
		     , ''
		     , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		     , #{updateBy, jdbcType=VARCHAR}
		     , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		     , #{updateBy, jdbcType=VARCHAR}
		     , ''
			)
		;		
	  	
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'C'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
           AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
	 END
	}
	</insert>
	
	<insert id="create_copyResourceByShiftPlanSchedule" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
	  	UPDATE MOM_SHIFT_SCHEDULE
	  	   SET DESCRIPTION = 'Delete And Insert Data'
	  	     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY   = #{updateBy, jdbcType=VARCHAR}
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
           AND APPLY_DATE BETWEEN TO_DATE(#{rStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'D'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
           AND APPLY_DATE BETWEEN TO_DATE(#{rStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
	  	
	  	DELETE FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE BETWEEN TO_DATE(#{rStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
	  	
		INSERT INTO MOM_SHIFT_SCHEDULE
	        (  DIVISION_CD
			 , COMPANY_CD
			 , SHIFT_CD
			 , RESOURCE_CD
			 , START_TIME
			 , END_TIME
			 , APPLY_DATE
			 , WORK_PERSON_CNT
			 , DESCRIPTION
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , TID
	        )
		SELECT
               #{divisionCd, jdbcType=VARCHAR}
             , #{companyCd, jdbcType=VARCHAR}
			 , SHIFT_CD
             , UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
             , START_TIME
             , END_TIME
             , APPLY_DATE
             , WORK_PERSON_CNT
             , DESCRIPTION
             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , #{updateBy,jdbcType=VARCHAR}
             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , #{updateBy,jdbcType=VARCHAR}
             , TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = UPPER(TRIM(#{fromResource, jdbcType=VARCHAR}))
           AND APPLY_DATE BETWEEN TO_DATE(#{rStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'C'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
           AND APPLY_DATE BETWEEN TO_DATE(#{rStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE BETWEEN TO_DATE(#{rStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
	 END
	} 
	</insert>
	
	<insert id="create_copyResourceGroupByShiftPlanSchedule" statementType="CALLABLE"  parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
	  	UPDATE MOM_SHIFT_SCHEDULE
	  	   SET DESCRIPTION = 'Delete And Insert Data'
	  	     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY   = #{updateBy, jdbcType=VARCHAR}
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE BETWEEN TO_DATE(#{rgStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rgEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'D'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE BETWEEN TO_DATE(#{rgStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rgEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
	  	
	  	DELETE FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE BETWEEN TO_DATE(#{rgStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rgEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
		
		INSERT INTO MOM_SHIFT_SCHEDULE
	        (  DIVISION_CD
			 , COMPANY_CD
			 , SHIFT_CD
			 , RESOURCE_CD
			 , START_TIME
			 , END_TIME
			 , APPLY_DATE
			 , WORK_PERSON_CNT
			 , DESCRIPTION
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , TID
	        )
		SELECT
               #{divisionCd, jdbcType=VARCHAR}
             , #{companyCd, jdbcType=VARCHAR}
			 , SHIFT_CD
             , UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
             , START_TIME
             , END_TIME
             , APPLY_DATE
             , WORK_PERSON_CNT
             , DESCRIPTION
             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , #{updateBy,jdbcType=VARCHAR}
             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , #{updateBy,jdbcType=VARCHAR}
             , TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = #{fromResourceGroup, jdbcType=VARCHAR}
           AND APPLY_DATE BETWEEN TO_DATE(#{rgStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rgEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'C'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
           AND APPLY_DATE BETWEEN TO_DATE(#{rgStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rgEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{toResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE BETWEEN TO_DATE(#{rgStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{rgEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
	 END
	}
	</insert>
	
	<delete id="remove_applyingHoliday" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
	  	UPDATE MOM_SHIFT_SCHEDULE
	  	   SET DESCRIPTION = 'Delete Data'
	  	     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY   = #{updateBy, jdbcType=VARCHAR}
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD IN (${hResources})
		   AND APPLY_DATE BETWEEN TO_DATE(#{hStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{hEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'D'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
           AND RESOURCE_CD IN (${hResources})
		   AND APPLY_DATE BETWEEN TO_DATE(#{hStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{hEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
        ;
        
		DELETE FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD IN (${hResources})
		   AND APPLY_DATE BETWEEN TO_DATE(#{hStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{hEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
		
		SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'S'
				ELSE 'E' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD IN (${hResources})
		   AND APPLY_DATE BETWEEN TO_DATE(#{hStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{hEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		;
	 END
	}
	</delete>
	
	<select id="get_Resources_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT RESOURCE_CD
		  FROM MOM_RESOURCE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_GROUP_CD = #{hResourceGroup, jdbcType=VARCHAR}
	</select>
	
	<select id="get_overlapShiftCd_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT SHIFT_CD, COUNT(*) AS CNT
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	 	   AND SHIFT_CD = #{shiftCd, jdbcType=VARCHAR}
		 GROUP BY SHIFT_CD
	</select>
	
	<select id="get_overlapShiftSchedule_list" resultType="camelMap" parameterType="java.util.HashMap">
	    SELECT A.SHIFT_CD
	         , A.START_TIME
	         , A.END_TIME
	         , B.SHIFT_TYPE
	         , COUNT (*) AS CNT
	      FROM MOM_SHIFT_SCHEDULE A
	         , MOM_SHIFT_CODE B
	     WHERE A.DIVISION_CD = B.DIVISION_CD
	       AND A.COMPANY_CD = B.COMPANY_CD
	       AND A.SHIFT_CD = B.SHIFT_CD
	       AND A.RESOURCE_CD = #{pResourceCd, jdbcType=VARCHAR}
	       AND A.APPLY_DATE BETWEEN TO_DATE(#{pStartDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{pEndDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
	      <if test="shiftType != null and shiftType != ''">
	       AND B.SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR}
	      </if>
		 GROUP BY A.SHIFT_CD, A.START_TIME, A.END_TIME, B.SHIFT_TYPE
	</select>
	
	<select id="get_overlapResource_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT RESOURCE_CD, COUNT(*) AS CNT
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = #{pResourceCd, jdbcType=VARCHAR}
		   AND APPLY_DATE = TO_DATE(#{pApplicationDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		   AND START_TIME = #{pStartTime, jdbcType=VARCHAR}
		   AND END_TIME = #{pEndTime, jdbcType=VARCHAR}
		 GROUP BY RESOURCE_CD
	</select>
	
	<select id="get_fromResource_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT RESOURCE_CD, COUNT(*) AS CNT
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = #{fromResourceCd, jdbcType=VARCHAR}
		   AND APPLY_DATE BETWEEN TO_DATE(#{startDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{endDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		GROUP BY RESOURCE_CD
	</select>
	
<!-- 	<select id="get_overlapFromResource_list" resultType="camelMap" parameterType="java.util.HashMap"> -->
<!-- 		SELECT RESOURCE_CD, COUNT(*) AS CNT -->
<!-- 		  FROM MOM_SHIFT_SCHEDULE -->
<!-- 		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} -->
<!-- 		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR} -->
<!-- 		   AND RESOURCE_CD = #{fromResourceCd, jdbcType=VARCHAR} -->
<!-- 		   AND APPLY_DATE BETWEEN TO_DATE(#{startDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{endDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') -->
<!-- 		GROUP BY RESOURCE_CD -->
<!-- 	</select> -->
	
	<select id="get_overlapUpResource_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT B.SHIFT_TYPE, COUNT(*) AS CNT
          FROM MOM_SHIFT_SCHEDULE A
             , MOM_SHIFT_CODE B
         WHERE A.DIVISION_CD = B.DIVISION_CD
           AND A.COMPANY_CD = B.COMPANY_CD
           AND A.SHIFT_CD = B.SHIFT_CD
           AND A.RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
           AND A.APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
           AND B.SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR}
        GROUP BY B.SHIFT_TYPE
	</select>
	
	<select id="get_searchDate_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT TO_CHAR(SOLAR_DATE, 'YYYY-MM-DD') AS SOLAR_DATE
		  FROM MOM_CALENDA
		 WHERE SOLAR_DATE BETWEEN #{fStartDate, jdbcType=VARCHAR} AND #{fEndDate, jdbcType=VARCHAR}
	</select>

	<insert id="create_copyFromResourceByShiftPlanSchedule" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
	  	UPDATE MOM_SHIFT_SCHEDULE
	  	   SET DESCRIPTION = 'Delete And Insert Data'
	  	     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY   = #{updateBy, jdbcType=VARCHAR}
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{copyFromResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		   AND SHIFT_CD IN (SELECT SHIFT_CD
		   					  FROM MOM_SHIFT_CODE
		   					 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   					   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   					   AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR})
        ;
        
        INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'D'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{copyFromResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		   AND SHIFT_CD IN (SELECT SHIFT_CD
		   					  FROM MOM_SHIFT_CODE
		   					 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   					   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   					   AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR})
        ;
	  	
		DELETE FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{copyFromResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		   AND SHIFT_CD IN (SELECT SHIFT_CD
		                      FROM MOM_SHIFT_CODE
		                     WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		                       AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		                       AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR})
		;
	  	
		INSERT INTO MOM_SHIFT_SCHEDULE
			(  DIVISION_CD
			 , COMPANY_CD
			 , SHIFT_CD
			 , RESOURCE_CD
			 , START_TIME
			 , END_TIME
			 , APPLY_DATE
			 , WORK_PERSON_CNT
			 , DESCRIPTION
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , TID
			)
		VALUES
			(
		       #{divisionCd, jdbcType=VARCHAR}
		     , #{companyCd, jdbcType=VARCHAR}
		     , #{shiftCd, jdbcType=VARCHAR}
		     , #{copyFromResource, jdbcType=VARCHAR}
		     , #{startTime, jdbcType=VARCHAR}
		     , #{endTime, jdbcType=VARCHAR}
		     , TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		     , #{fWorkPerson, jdbcType=NUMERIC}
		     , ''
		     , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		     , #{updateBy, jdbcType=VARCHAR}
		     , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		     , #{updateBy, jdbcType=VARCHAR}
		     , ''
		     )
		;
		
		INSERT INTO MOM_SHIFT_SCHEDULE_HIST
        	( LAST_EVENT_SEQ
			, CUD_FLAG
			, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
        	)
        SELECT S_SS_SEQ.NEXTVAL
        	, 'C'
        	, DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, RESOURCE_CD
			, START_TIME
			, END_TIME
			, APPLY_DATE
			, WORK_PERSON_CNT
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_SHIFT_SCHEDULE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{copyFromResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		   AND SHIFT_CD IN (SELECT SHIFT_CD
		   					  FROM MOM_SHIFT_CODE
		   					 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   					   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   					   AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR})
        ;
		
		SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_SCHEDULE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND RESOURCE_CD = UPPER(TRIM(#{copyFromResource, jdbcType=VARCHAR}))
		   AND APPLY_DATE = TO_DATE(#{applyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		   AND SHIFT_CD IN (SELECT SHIFT_CD
		   					  FROM MOM_SHIFT_CODE
		   					 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   					   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   					   AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR})
		;
	 END
	}
   </insert>
   
</mapper>