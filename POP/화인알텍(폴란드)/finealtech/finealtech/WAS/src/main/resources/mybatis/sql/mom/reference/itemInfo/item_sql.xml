<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.reference.itemInfo.item">
	<select id="get_item_list" resultType="camelMap" parameterType="java.util.HashMap">
	 <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
	 WITH TEMP1 AS (	
	 </if>
		SELECT A.DIVISION_CD
	         , A.COMPANY_CD
	         , A.ITEM_ID
	       	 , A.ITEM_NAME
	       	 , A.ITEM_GROUP_CODE
	       	 , A.ITEM_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD
	                                                 , A.COMPANY_CD  
	                                                 , 'ITEM_TYPE'
	                                                 , A.ITEM_TYPE)
	              FROM DUAL) AS ITEM_TYPE_NAME
	         , A.SPECIFICATION
	         , A.VENDOR_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(A.DIVISION_CD
	                                                   , A.COMPANY_CD
	                                                   , A.VENDOR_CD) 
	              FROM DUAL) AS VENDOR_NAME
	         , A.DEPARTURE_VENDOR_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(A.DIVISION_CD
	                                                   , A.COMPANY_CD
	                                                   , A.DEPARTURE_VENDOR_CD) 
	              FROM DUAL) AS DEPARTURE_VENDOR_NAME
	         , A.UNIT_PRICE
	         , A.UNIT
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'ITEM_UNIT'
	                                                  , A.UNIT)
	              FROM DUAL) AS UNIT_NAME 
	         , A.PURCHASE_UNIT
	         , A.UNIT_QTY
	         , A.CONVERSION_UNIT
	         , NVL(A.CONVERSION_UNIT_QTY, 1) AS CONVERSION_UNIT_QTY
	         , A.MOQ
	         , A.MOM
	         , A.SAFETY_STOCK_QTY
	         , A.SAFETY_STOCK_DAY
	         , A.SAFETY_STOCK_DAY_UOM
	         , A.PROD_MIN_LOT_SIZE
	         , A.PROD_MAX_LOT_SIZE
	         , A.PROD_INCREMENT_LOT_SIZE
	         , A.DEMAND_LOT_SIZE
	         , A.ACTIVATION_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'USE_FLAG'
	                                                  , A.ACTIVATION_FLAG)
	              FROM DUAL) AS ACTIVATION_FLAG_NAME          
	         , A.IS_FINITE_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'USE_FLAG'
	                                                  , A.IS_FINITE_FLAG)
	              FROM DUAL) AS IS_FINITE_FLAG_NAME 
	         , A.FINITE_TERM
	         , A.FINITE_TERM_UOM
	         , A.IN_LOCATION_ID
	         , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME( A.DIVISION_CD
	                                                      , A.COMPANY_CD 
	                                                      , A.IN_LOCATION_ID) 
	              FROM DUAL) AS IN_LOCATION_NAME
	         , A.OUT_LOCATION_ID
	         , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME( A.DIVISION_CD
	                                                      , A.COMPANY_CD 
	                                                      , A.OUT_LOCATION_ID) 
	              FROM DUAL) AS OUT_LOCATION_NAME
	         , A.TEST_REPORT_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'USE_FLAG'
	                                                  , A.TEST_REPORT_FLAG)
	              FROM DUAL) AS TEST_REPORT_FLAG_NAME  
	         , A.IQC_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'USE_FLAG'
	                                                  , A.IQC_FLAG)
	              FROM DUAL) AS IQC_FLAG_NAME
	         , A.PQC_FLAG
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
                                                     , A.COMPANY_CD  
                                                     , 'USE_FLAG'
                                                     , A.PQC_FLAG)
                 FROM DUAL) AS PQC_FLAG_NAME
	         , A.OQC_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'USE_FLAG'
	                                                  , A.OQC_FLAG)
	              FROM DUAL) AS OQC_FLAG_NAME
	         , A.RP_ITEM_ID
	         , A.VENDOR_ITEM_ID
	         , A.ALT_ITEM_ID
	         , A.ITEM_CATEGORY
	         , A.PURCHASE_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'USE_FLAG'
	                                                  , A.PURCHASE_TYPE)
	              FROM DUAL) AS PURCHASE_TYPE_NAME
	         , A.ITEM_USER_ID
	         , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , A.ITEM_USER_ID)
	              FROM DUAL) AS ITEM_USER_NAME
	         , A.PACKING_SIZE_WIDTH
             , A.PACKING_SIZE_HEIGHT
	         , A.MATERIAL_WEIGHT
             , A.PALLET_WEIGHT
             , A.UNIT_WEIGHT
	         , A.BOX_WEIGHT
	         , A.ITEM_GROUP_LARGE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'ITEM_GROUP_LARGE'
	                                                  , A.ITEM_GROUP_LARGE)
	              FROM DUAL) AS ITEM_GROUP_LARGE_NAME
	         , A.ITEM_GROUP_MEDIUM
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'ITEM_GROUP_MEDIUM'
	                                                  , A.ITEM_GROUP_MEDIUM)
	              FROM DUAL) AS ITEM_GROUP_MEDIUM_NAME
	         , A.ITEM_GROUP_SMALL
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'ITEM_GROUP_LARGE'
	                                                  , A.ITEM_GROUP_SMALL)
	              FROM DUAL) AS ITEM_GROUP_SMALL_NAME
	         , A.DESCRIPTION
	         , A.PRE_BUILD_TERM
             , A.LEAD_TIME
	         , A.TRACKING_FLAG
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
                                                      , A.COMPANY_CD  
                                                      , 'USE_FLAG'
                                                      , A.TRACKING_FLAG)
	              FROM DUAL) AS TRACKING_FLAG_NAME
<!-- 	         , A.IS_PHANTOM -->
<!-- 	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD -->
<!--                                                       , A.COMPANY_CD   -->
<!--                                                       , 'USE_FLAG' -->
<!--                                                       , A.IS_PHANTOM) -->
<!-- 	              FROM DUAL) AS IS_PHANTOM_NAME -->
	         , A.ORDER_METHOD
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
                                                      , A.COMPANY_CD 
                                                      , 'ORDER_METHOD'
                                                      , A.ORDER_METHOD)
	              FROM DUAL) AS ORDER_METHOD_NAME
	         , A.ITEM_GRADE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD 
	                                                  , 'ITEM_GRADE'
	                                                  , A.ITEM_GRADE)
	              FROM DUAL) AS ITEM_GRADE_NAME
	         , A.BAD_LEVEL
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD 
	                                                  , 'BAD_LEVEL'
	                                                  , A.BAD_LEVEL)
	              FROM DUAL) AS BAD_LEVEL_NAME          
	         , A.STANDARD_OUT_QTY
	         , A.DEFECT_RATE
	         , A.BY_PRODUCT_ITEM_ID
	         , A.USE_YN
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , 'USE_FLAG'
	                                                  , A.USE_YN)
	              FROM DUAL) AS USE_YN_NAME          
	         , TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
	         , A.CREATE_BY
	         , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , A.CREATE_BY)
	              FROM DUAL) AS CREATE_USER_NAME          
	         , TO_CHAR(A.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
	         , A.UPDATE_BY
	         , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME( A.DIVISION_CD
	                                                  , A.COMPANY_CD  
	                                                  , A.UPDATE_BY)
	              FROM DUAL) AS UPDATE_USER_NAME
	         , A.ATTRIBUTE1
	         , A.ATTRIBUTE2
	         , A.ATTRIBUTE3
	         , A.ATTRIBUTE4
	         , A.ATTRIBUTE5
	         , A.ATTRIBUTE6
	         , A.ATTRIBUTE7
	         , A.ATTRIBUTE8
	         , A.ATTRIBUTE9
	         , A.ATTRIBUTE10
	         , A.ATTRIBUTE11
	         , A.ATTRIBUTE12
	         , A.ATTRIBUTE13
	         , A.ATTRIBUTE14
	         , A.ATTRIBUTE15
	         , A.FREE_OFFER_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}, 'FREE_OFFER_FLAG', A.FREE_OFFER_FLAG) 
	              FROM DUAL) AS FREE_OFFER_FLAG_NAME
	         , A.TOOL
	         , A.PRESS_LINE
	         , A.SALES_FREE_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}, 'FREE_OFFER_FLAG', A.SALES_FREE_FLAG) 
	              FROM DUAL) AS SALES_FREE_FLAG_NAME
	         , POP_MAKE_LOT_QTY
			 , POP_INPUT_TYPE
			 , POP_CT_QTY
			 , POP_GT_LABELID
			 , POP_CT_LABELID
			 , POP_PALLET_LABELID
			 , POP_EAN
			 , POP_UPC
			 , POP_DESTINATION
			 , POP_MADEBY
			 , POP_GANBAN_LABELID
			 , LABELDESC
			 , LABELSPEC   
	      FROM  MOM_ITEM_DEFINITION A
	     WHERE  A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND  A.COMPANY_CD  = #{companyCd,jdbcType=VARCHAR}
	      <if test="itemId != null and itemId != ''">
	       AND (A.ITEM_ID LIKE UPPER('%' || #{itemId, jdbcType=VARCHAR} || '%')
	           OR UPPER(A.ITEM_NAME) LIKE UPPER('%' || #{itemId, jdbcType=VARCHAR} || '%'))
	      </if>
	      <if test="specification != null and specification != ''">
	       AND (UPPER(A.SPECIFICATION) LIKE UPPER('%' || #{specification, jdbcType=VARCHAR} || '%')) 
	      </if>
	      <if test="vendorCd != null and vendorCd != ''">
	       AND A.VENDOR_CD = #{vendorCd, jdbcType=VARCHAR}
	      </if>
	      <if test="departureVendorCd != null and departureVendorCd != ''">
	       AND A.DEPARTURE_VENDOR_CD = #{departureVendorCd, jdbcType=VARCHAR}
	      </if>
	      <if test="inLocationId != null and inLocationId != ''">
	       AND A.IN_LOCATION_ID = #{inLocationId, jdbcType=VARCHAR}
	      </if>
	      <if test="outLocationId != null and outLocationId != ''">
	       AND A.OUT_LOCATION_ID = #{outLocationId, jdbcType=VARCHAR}
	      </if>
	      <if test="itemUserId != null and itemUserId != ''">
	       AND A.ITEM_USER_ID = #{itemUserId, jdbcType=VARCHAR}
	      </if>
	      <if test="itemType != null and itemType != ''">
	       AND A.ITEM_TYPE = #{itemType, jdbcType=VARCHAR}
	      </if>
	      <if test="useYn != null and useYn != ''">
	       AND A.USE_YN = #{useYn, jdbcType=VARCHAR}
	      </if>
	     ORDER BY A.ITEM_ID
	 <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
	  )
      SELECT A.*
           , B.ROW_COUNT
      FROM (SELECT A.*
                 , ROWNUM GRIDROW
              FROM TEMP1 A) A
         , (SELECT COUNT(*) ROW_COUNT
              FROM TEMP1) B 
      WHERE GRIDROW BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
     </if>
	</select>
	
	<select id="get_item" resultType="camelMap" parameterType="java.util.HashMap">
	    SELECT *
	      FROM   MOM_ITEM_DEFINITION
	     WHERE  DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND    COMPANY_CD  = #{companyCd,jdbcType=VARCHAR}
	       AND    ITEM_ID = #{itemId,jdbcType=VARCHAR}
	</select>
	
	<insert id="create_item" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	DECLARE
	BEGIN
		#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
		
		INSERT INTO MOM_ITEM_DEFINITION(
			DIVISION_CD,
			COMPANY_CD,
			ITEM_ID,
			ITEM_NAME,
			ITEM_GROUP_CODE,
			ITEM_TYPE,
			SPECIFICATION,
			VENDOR_CD,
			DEPARTURE_VENDOR_CD,
			UNIT_PRICE,
			UNIT,
			PURCHASE_UNIT,
			UNIT_QTY,
			CONVERSION_UNIT,
			CONVERSION_UNIT_QTY,
			MOQ,
			MOM,
			SAFETY_STOCK_QTY,
			SAFETY_STOCK_DAY,
			SAFETY_STOCK_DAY_UOM,
			PROD_MIN_LOT_SIZE,
			PROD_MAX_LOT_SIZE,
			PROD_INCREMENT_LOT_SIZE,
			DEMAND_LOT_SIZE,
<!-- 			IS_PHANTOM, -->
			ACTIVATION_FLAG,
			IS_FINITE_FLAG,
			FINITE_TERM,
			FINITE_TERM_UOM,
			IN_LOCATION_ID,
			OUT_LOCATION_ID,
			TEST_REPORT_FLAG,
			IQC_FLAG,
			PQC_FLAG,
			OQC_FLAG,
			RP_ITEM_ID,
			VENDOR_ITEM_ID,
			ALT_ITEM_ID,
			ITEM_CATEGORY,
			PURCHASE_TYPE,
			ITEM_USER_ID,
			PACKING_SIZE_WIDTH,
			PACKING_SIZE_HEIGHT,
			MATERIAL_WEIGHT,
			PALLET_WEIGHT,
			UNIT_WEIGHT,
			BOX_WEIGHT,
			ITEM_GROUP_LARGE,
			ITEM_GROUP_MEDIUM,
			ITEM_GROUP_SMALL,
			PRE_BUILD_TERM,
			LEAD_TIME,
			TRACKING_FLAG,
			ORDER_METHOD,
			ITEM_GRADE,
			BAD_LEVEL,
			STANDARD_OUT_QTY,
			DEFECT_RATE,
			BY_PRODUCT_ITEM_ID,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			ATTRIBUTE1,
			ATTRIBUTE2,
			ATTRIBUTE3,
			ATTRIBUTE4,
			ATTRIBUTE5,
			ATTRIBUTE6,
			ATTRIBUTE7,
			ATTRIBUTE8,
			ATTRIBUTE9,
			ATTRIBUTE10,
			ATTRIBUTE11,
			ATTRIBUTE12,
			ATTRIBUTE13,
			ATTRIBUTE14,
			ATTRIBUTE15,
			FREE_OFFER_FLAG,
			TOOL,
			PRESS_LINE,
			SALES_FREE_FLAG,
			POP_MAKE_LOT_QTY,
			POP_INPUT_TYPE,
			POP_CT_QTY,
			POP_GT_LABELID,
			POP_CT_LABELID,
			POP_PALLET_LABELID,
			POP_EAN,
			POP_UPC,
			POP_DESTINATION,
			POP_MADEBY,
			POP_GANBAN_LABELID,
			LABELDESC,
			LABELSPEC
		)
		VALUES(
			#{divisionCd, jdbcType=VARCHAR},
			#{companyCd, jdbcType=VARCHAR},
			UPPER(TRIM(#{itemId, jdbcType=VARCHAR})),
			#{itemName, jdbcType=VARCHAR},
			#{itemGroupCode, jdbcType=VARCHAR},
			#{itemType, jdbcType=VARCHAR},
			#{specification, jdbcType=VARCHAR},
			#{vendorCd, jdbcType=VARCHAR},
			#{departureVendorCd, jdbcType=VARCHAR},
			#{unitPrice, jdbcType=INTEGER},
			#{unit, jdbcType=VARCHAR},
			#{purchaseUnit, jdbcType=VARCHAR},
			#{unitQty, jdbcType=INTEGER},
			#{conversionUnit, jdbcType=VARCHAR},
			NVL(#{conversionUnitQty, jdbcType=INTEGER}, 1),
			#{moq, jdbcType=INTEGER},
			#{mom, jdbcType=INTEGER},
			#{safetyStockQty, jdbcType=INTEGER},
			#{safetyStockDay, jdbcType=INTEGER},
			#{safetyStockDayUom, jdbcType=INTEGER},
			#{prodMinLotSize, jdbcType=INTEGER},
			#{prodMaxLotSize, jdbcType=INTEGER},
			#{prodIncrementLotSize, jdbcType=VARCHAR},
			#{demandLotSize, jdbcType=VARCHAR},
<!-- 			#{isPhantom, jdbcType=VARCHAR}, -->
			#{activationFlag, jdbcType=VARCHAR},
			#{isFiniteFlag, jdbcType=VARCHAR},
			#{finiteTerm, jdbcType=INTEGER},
			#{finiteTermUom, jdbcType=VARCHAR},
			#{inLocationId, jdbcType=VARCHAR},
			#{outLocationId, jdbcType=VARCHAR},
			#{testReportFlag, jdbcType=VARCHAR},
			#{iqcFlag, jdbcType=VARCHAR},
			#{pqcFlag, jdbcType=VARCHAR},
			#{oqcFlag, jdbcType=VARCHAR},
			#{rpItemId, jdbcType=VARCHAR},
			#{vendorItemId, jdbcType=VARCHAR},
			#{altItemId, jdbcType=VARCHAR},
			#{itemCategory, jdbcType=VARCHAR},
			#{purchaseType, jdbcType=VARCHAR},
			#{itemUserId, jdbcType=VARCHAR},
			#{packingSizeWidth, jdbcType=INTEGER},
			#{packingSizeHeight, jdbcType=INTEGER},
			#{materialWeight, jdbcType=INTEGER},
			#{palletWeight, jdbcType=INTEGER},
			#{unitWeight, jdbcType=INTEGER},
			#{boxWeight, jdbcType=INTEGER},
			#{itemGroupLarge, jdbcType=VARCHAR},
			#{itemGroupMedium, jdbcType=VARCHAR},
			#{itemGroupSmall, jdbcType=VARCHAR},
			#{preBuildTerm, jdbcType=INTEGER},
			#{leadTime, jdbcType=INTEGER},
			#{trackingFlag, jdbcType=VARCHAR},
			#{orderMethod, jdbcType=VARCHAR},
			#{itemGrade, jdbcType=VARCHAR},
			#{badLevel, jdbcType=VARCHAR},
			#{standardOutQty, jdbcType=INTEGER},
			#{defectRate, jdbcType=INTEGER},
			#{byProductItemId, jdbcType=VARCHAR},
			NVL(#{useYn, jdbcType=VARCHAR}, 'Y'),
			#{description, jdbcType=VARCHAR},
			MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			#{createBy, jdbcType=VARCHAR},
			MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			#{updateBy, jdbcType=VARCHAR},
			#{tid, jdbcType=VARCHAR},
			#{attribute1, jdbcType=VARCHAR},
			#{attribute2, jdbcType=VARCHAR},
			#{attribute3, jdbcType=VARCHAR},
			#{attribute4, jdbcType=VARCHAR},
			#{attribute5, jdbcType=VARCHAR},
			#{attribute6, jdbcType=VARCHAR},
			#{attribute7, jdbcType=VARCHAR},
			#{attribute8, jdbcType=VARCHAR},
			#{attribute9, jdbcType=VARCHAR},
			#{attribute10, jdbcType=VARCHAR},
			#{attribute11, jdbcType=VARCHAR},
			#{attribute12, jdbcType=VARCHAR},
			#{attribute13, jdbcType=VARCHAR},
			#{attribute14, jdbcType=VARCHAR},
			#{attribute15, jdbcType=VARCHAR},
			#{freeOfferFlag, jdbcType=VARCHAR},
			#{tool, jdbcType=VARCHAR},
			#{pressLine, jdbcType=VARCHAR},
			#{salesFreeFlag, jdbcType=VARCHAR},
			#{popMakeLotQty, jdbcType=INTEGER},
			#{popInputType, jdbcType=VARCHAR},
			#{popCtQty, jdbcType=INTEGER},
			#{popGtLabelid, jdbcType=VARCHAR},
			#{popCtLabelid, jdbcType=VARCHAR},
			#{popPalletLabelid, jdbcType=VARCHAR},
			#{popEan, jdbcType=VARCHAR},
			#{popUpc, jdbcType=VARCHAR},
			#{popDestination, jdbcType=VARCHAR},
			#{popMadeby, jdbcType=VARCHAR},
			#{popGanbanLabelid, jdbcType=VARCHAR},
			#{popLabelDesc, jdbcType=VARCHAR},
			#{popLabelSpec, jdbcType=VARCHAR}
		);
		
		INSERT INTO MOM_ITEM_DEFINITION_HIST(
			LAST_EVENT_SEQ,
			DIVISION_CD,
			COMPANY_CD,
			ITEM_ID,
			ITEM_NAME,
			ITEM_GROUP_CODE,
			ITEM_TYPE,
			SPECIFICATION,
			VENDOR_CD,
			DEPARTURE_VENDOR_CD,
			UNIT_PRICE,
			UNIT,
			PURCHASE_UNIT,
			UNIT_QTY,
			CONVERSION_UNIT,
			CONVERSION_UNIT_QTY,
			MOQ,
			MOM,
			SAFETY_STOCK_QTY,
			SAFETY_STOCK_DAY,
			SAFETY_STOCK_DAY_UOM,
			PROD_MIN_LOT_SIZE,
			PROD_MAX_LOT_SIZE,
			PROD_INCREMENT_LOT_SIZE,
			DEMAND_LOT_SIZE,
<!-- 			IS_PHANTOM, -->
			ACTIVATION_FLAG,
			IS_FINITE_FLAG,
			FINITE_TERM,
			FINITE_TERM_UOM,
			IN_LOCATION_ID,
			OUT_LOCATION_ID,
			TEST_REPORT_FLAG,
			IQC_FLAG,
			OQC_FLAG,
			PQC_FLAG,
			RP_ITEM_ID,
			VENDOR_ITEM_ID,
			ALT_ITEM_ID,
			ITEM_CATEGORY,
			PURCHASE_TYPE,
			ITEM_USER_ID,
			PACKING_SIZE_WIDTH,
			PACKING_SIZE_HEIGHT,
			MATERIAL_WEIGHT,
			PALLET_WEIGHT,
			UNIT_WEIGHT,
			BOX_WEIGHT,
			ITEM_GROUP_LARGE,
			ITEM_GROUP_MEDIUM,
			ITEM_GROUP_SMALL,
			PRE_BUILD_TERM,
			LEAD_TIME,
			TRACKING_FLAG,
			ORDER_METHOD,
			ITEM_GRADE,
			BAD_LEVEL,
			STANDARD_OUT_QTY,
			DEFECT_RATE,
			BY_PRODUCT_ITEM_ID,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			ATTRIBUTE1,
			ATTRIBUTE2,
			ATTRIBUTE3,
			ATTRIBUTE4,
			ATTRIBUTE5,
			ATTRIBUTE6,
			ATTRIBUTE7,
			ATTRIBUTE8,
			ATTRIBUTE9,
			ATTRIBUTE10,
			ATTRIBUTE11,
			ATTRIBUTE12,
			ATTRIBUTE13,
			ATTRIBUTE14,
			ATTRIBUTE15,
			FREE_OFFER_FLAG,
			TOOL,
			PRESS_LINE,
			SALES_FREE_FLAG,
			POP_MAKE_LOT_QTY,
			POP_INPUT_TYPE,
			POP_CT_QTY,
			POP_GT_LABELID,
			POP_CT_LABELID,
			POP_PALLET_LABELID,
			POP_EAN,
			POP_UPC,
			POP_DESTINATION,
			POP_MADEBY,
			POP_GANBAN_LABELID,
			LABELDESC,
			LABELSPEC
		)
		SELECT s_order_seq.nextval,
			DIVISION_CD,
			COMPANY_CD,
			ITEM_ID,
			ITEM_NAME,
			ITEM_GROUP_CODE,
			ITEM_TYPE,
			SPECIFICATION,
			VENDOR_CD,
			DEPARTURE_VENDOR_CD,
			UNIT_PRICE,
			UNIT,
			PURCHASE_UNIT,
			UNIT_QTY,
			CONVERSION_UNIT,
			CONVERSION_UNIT_QTY,
			MOQ,
			MOM,
			SAFETY_STOCK_QTY,
			SAFETY_STOCK_DAY,
			SAFETY_STOCK_DAY_UOM,
			PROD_MIN_LOT_SIZE,
			PROD_MAX_LOT_SIZE,
			PROD_INCREMENT_LOT_SIZE,
			DEMAND_LOT_SIZE,
<!-- 			IS_PHANTOM, -->
			ACTIVATION_FLAG,
			IS_FINITE_FLAG,
			FINITE_TERM,
			FINITE_TERM_UOM,
			IN_LOCATION_ID,
			OUT_LOCATION_ID,
			TEST_REPORT_FLAG,
			IQC_FLAG,
			OQC_FLAG,
			PQC_FLAG,
			RP_ITEM_ID,
			VENDOR_ITEM_ID,
			ALT_ITEM_ID,
			ITEM_CATEGORY,
			PURCHASE_TYPE,
			ITEM_USER_ID,
			PACKING_SIZE_WIDTH,
			PACKING_SIZE_HEIGHT,
			MATERIAL_WEIGHT,
			PALLET_WEIGHT,
			UNIT_WEIGHT,
			BOX_WEIGHT,
			ITEM_GROUP_LARGE,
			ITEM_GROUP_MEDIUM,
			ITEM_GROUP_SMALL,
			PRE_BUILD_TERM,
			LEAD_TIME,
			TRACKING_FLAG,
			ORDER_METHOD,
			ITEM_GRADE,
			BAD_LEVEL,
			STANDARD_OUT_QTY,
			DEFECT_RATE,
			BY_PRODUCT_ITEM_ID,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			ATTRIBUTE1,
			ATTRIBUTE2,
			ATTRIBUTE3,
			ATTRIBUTE4,
			ATTRIBUTE5,
			ATTRIBUTE6,
			ATTRIBUTE7,
			ATTRIBUTE8,
			ATTRIBUTE9,
			ATTRIBUTE10,
			ATTRIBUTE11,
			ATTRIBUTE12,
			ATTRIBUTE13,
			ATTRIBUTE14,
			ATTRIBUTE15,
			FREE_OFFER_FLAG,
			TOOL,
			PRESS_LINE,
			SALES_FREE_FLAG,
			POP_MAKE_LOT_QTY,
			POP_INPUT_TYPE,
			POP_CT_QTY,
			POP_GT_LABELID,
			POP_CT_LABELID,
			POP_PALLET_LABELID,
			POP_EAN,
			POP_UPC,
			POP_DESTINATION,
			POP_MADEBY,
			POP_GANBAN_LABELID,
			LABELDESC,
			LABELSPEC
	FROM	MOM_ITEM_DEFINITION
	WHERE   DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
    AND 	COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
    AND 	ITEM_ID = UPPER(TRIM(#{itemId, jdbcType=VARCHAR}))
			;
		
		SELECT
			CASE 
				WHEN COUNT(ITEM_ID) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_ITEM_DEFINITION
		WHERE 
			    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
			AND ITEM_ID = UPPER(TRIM(#{itemId, jdbcType=VARCHAR}))
		;
	END
	}
	</insert>	
	
	<update id="modify_item" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL 
	DECLARE
	BEGIN
		#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
		
		UPDATE MOM_ITEM_DEFINITION
		SET   ITEM_NAME 		      =  #{itemName,jdbcType=VARCHAR}
			, ITEM_GROUP_CODE		  =  #{itemGroupCode,jdbcType=VARCHAR}
			, ITEM_TYPE				  =  #{itemType,jdbcType=VARCHAR}
			, SPECIFICATION 		  =  #{specification,jdbcType=VARCHAR}
			, VENDOR_CD				  =  #{vendorCd,jdbcType=VARCHAR}
			, DEPARTURE_VENDOR_CD	  =  #{departureVendorCd,jdbcType=VARCHAR}
			, UNIT_PRICE 			  =  #{unitPrice,jdbcType=INTEGER}
			, UNIT 					  =  #{unit,jdbcType=VARCHAR}
			, PURCHASE_UNIT 		  =  #{purchaseUnit,jdbcType=VARCHAR}
			, UNIT_QTY 				  =  #{unitQty,jdbcType=INTEGER}
			, CONVERSION_UNIT 		  =  #{conversionUnit,jdbcType=VARCHAR}
			, CONVERSION_UNIT_QTY 	  =  NVL(#{conversionUnitQty,jdbcType=INTEGER}, 1)
			, MOQ                     =  #{moq,jdbcType=INTEGER} 
			, MOM                     =  #{mom,jdbcType=INTEGER} 
			, SAFETY_STOCK_QTY        =  #{safetyStockQty,jdbcType=INTEGER} 
			, SAFETY_STOCK_DAY        =  #{safetyStockDay,jdbcType=INTEGER} 
			, SAFETY_STOCK_DAY_UOM    =  #{safetyStockDayUom,jdbcType=VARCHAR} 
			, PROD_MIN_LOT_SIZE       =  #{prodMinLotSize,jdbcType=INTEGER} 
			, PROD_MAX_LOT_SIZE       =  #{prodMaxLotSize,jdbcType=INTEGER} 
			, PROD_INCREMENT_LOT_SIZE =  #{prodIncrementLotSize,jdbcType=INTEGER} 
			, DEMAND_LOT_SIZE         =  #{demandLotSize,jdbcType=INTEGER} 
<!-- 			, IS_PHANTOM              =  #{isPhantom,jdbcType=VARCHAR}  -->
			, ACTIVATION_FLAG         =  #{activationFlag,jdbcType=VARCHAR} 
			, IS_FINITE_FLAG          =  #{isFiniteFlag,jdbcType=VARCHAR} 
			, FINITE_TERM             =  #{finiteTerm,jdbcType=INTEGER} 
			, FINITE_TERM_UOM         =  #{finiteTermUom,jdbcType=VARCHAR} 
			, IN_LOCATION_ID          =  #{inLocationId,jdbcType=VARCHAR} 
			, OUT_LOCATION_ID         =  #{outLocationId,jdbcType=VARCHAR} 
			, TEST_REPORT_FLAG        =  #{testReportFlag,jdbcType=VARCHAR} 
			, IQC_FLAG                =  #{iqcFlag,jdbcType=VARCHAR}
			, PQC_FLAG                =  #{pqcFlag,jdbcType=VARCHAR} 
			, OQC_FLAG                =  #{oqcFlag,jdbcType=VARCHAR} 
			, RP_ITEM_ID              =  #{rpItemId,jdbcType=VARCHAR} 
			, VENDOR_ITEM_ID          =  #{vendorItemId,jdbcType=VARCHAR} 
			, ALT_ITEM_ID             =  #{altItemId,jdbcType=VARCHAR} 
			, ITEM_CATEGORY           =  #{itemCategory,jdbcType=VARCHAR} 
			, PURCHASE_TYPE           =  #{purchaseType,jdbcType=VARCHAR} 
			, ITEM_USER_ID            =  #{itemUserId,jdbcType=VARCHAR} 
			, PACKING_SIZE_WIDTH      =  #{packingSizeWidth,jdbcType=INTEGER} 
			, PACKING_SIZE_HEIGHT     =  #{packingSizeHeight,jdbcType=INTEGER} 
			, MATERIAL_WEIGHT         =  #{materialWeight,jdbcType=INTEGER} 
			, PALLET_WEIGHT           =  #{palletWeight,jdbcType=INTEGER} 
			, UNIT_WEIGHT             =  #{unitWeight,jdbcType=INTEGER} 
			, BOX_WEIGHT              =  #{boxWeight,jdbcType=INTEGER} 
			, ITEM_GROUP_LARGE        =  #{itemGroupLarge,jdbcType=VARCHAR} 
			, ITEM_GROUP_MEDIUM       =  #{itemGroupMedium,jdbcType=VARCHAR} 
			, ITEM_GROUP_SMALL        =  #{itemGroupSmall,jdbcType=VARCHAR} 
			, PRE_BUILD_TERM          =  #{preBuildTerm,jdbcType=INTEGER} 
			, LEAD_TIME               =  #{leadTime,jdbcType=INTEGER} 
			, TRACKING_FLAG           =  #{trackingFlag,jdbcType=VARCHAR} 
			, ORDER_METHOD            =  #{orderMethod,jdbcType=VARCHAR} 
			, ITEM_GRADE              =  #{itemGrade,jdbcType=VARCHAR} 
			, BAD_LEVEL               =  #{badLevel,jdbcType=VARCHAR} 
			, STANDARD_OUT_QTY        =  #{standardOutQty,jdbcType=INTEGER} 
			, DEFECT_RATE             =  #{defectRate,jdbcType=INTEGER} 
			, BY_PRODUCT_ITEM_ID      =  #{byProductItemId,jdbcType=VARCHAR} 
			, USE_YN			  	  =  NVL(#{useYn,jdbcType=VARCHAR},'Y')
			, DESCRIPTION         	  =  #{description,jdbcType=VARCHAR}
			, UPDATE_DATE         	  =  MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			, UPDATE_BY          	  =  #{updateBy,jdbcType=VARCHAR}
			, FREE_OFFER_FLAG		  =  #{freeOfferFlag, jdbcType=VARCHAR}
			, TOOL		 			  =  #{tool, jdbcType=VARCHAR}
			, PRESS_LINE 			  =  #{pressLine, jdbcType=VARCHAR}
			, SALES_FREE_FLAG		  =  #{salesFreeFlag, jdbcType=VARCHAR}
			, POP_MAKE_LOT_QTY        =  #{popMakeLotQty, jdbcType=INTEGER}
			, POP_INPUT_TYPE          =  #{popInputType, jdbcType=VARCHAR}
			, POP_CT_QTY              =  #{popCtQty, jdbcType=INTEGER}
			, POP_GT_LABELID          =  #{popGtLabelid, jdbcType=VARCHAR}
			, POP_CT_LABELID          =  #{popCtLabelid, jdbcType=VARCHAR}
			, POP_PALLET_LABELID      =  #{popPalletLabelid, jdbcType=VARCHAR}
			, POP_EAN                 =  #{popEan, jdbcType=VARCHAR}
			, POP_UPC                 =  #{popUpc, jdbcType=VARCHAR}
			, POP_DESTINATION         =  #{popDestination, jdbcType=VARCHAR}
			, POP_MADEBY              =  #{popMadeby, jdbcType=VARCHAR}
			, POP_GANBAN_LABELID      =  #{popGanbanLabelid, jdbcType=VARCHAR}
			, LABELDESC               =  #{popLabelDesc, jdbcType=VARCHAR}
			, LABELSPEC      		  =  #{popLabelSpec, jdbcType=VARCHAR}
			
		WHERE DIVISION_CD     		  =  #{divisionCd,jdbcType=VARCHAR}
		AND COMPANY_CD      		  =  #{companyCd,jdbcType=VARCHAR}
		AND ITEM_ID					  =  UPPER(TRIM(#{itemId,jdbcType=VARCHAR}))
		;
		INSERT INTO MOM_ITEM_DEFINITION_HIST(
			LAST_EVENT_SEQ,
			DIVISION_CD,
			COMPANY_CD,
			ITEM_ID,
			ITEM_NAME,
			ITEM_GROUP_CODE,
			ITEM_TYPE,
			SPECIFICATION,
			VENDOR_CD,
			DEPARTURE_VENDOR_CD,
			UNIT_PRICE,
			UNIT,
			PURCHASE_UNIT,
			UNIT_QTY,
			CONVERSION_UNIT,
			CONVERSION_UNIT_QTY,
			MOQ,
			MOM,
			SAFETY_STOCK_QTY,
			SAFETY_STOCK_DAY,
			SAFETY_STOCK_DAY_UOM,
			PROD_MIN_LOT_SIZE,
			PROD_MAX_LOT_SIZE,
			PROD_INCREMENT_LOT_SIZE,
			DEMAND_LOT_SIZE,
<!-- 			IS_PHANTOM, -->
			ACTIVATION_FLAG,
			IS_FINITE_FLAG,
			FINITE_TERM,
			FINITE_TERM_UOM,
			IN_LOCATION_ID,
			OUT_LOCATION_ID,
			TEST_REPORT_FLAG,
			IQC_FLAG,
			OQC_FLAG,
			PQC_FLAG,
			RP_ITEM_ID,
			VENDOR_ITEM_ID,
			ALT_ITEM_ID,
			ITEM_CATEGORY,
			PURCHASE_TYPE,
			ITEM_USER_ID,
			PACKING_SIZE_WIDTH,
			PACKING_SIZE_HEIGHT,
			MATERIAL_WEIGHT,
			PALLET_WEIGHT,
			UNIT_WEIGHT,
			BOX_WEIGHT,
			ITEM_GROUP_LARGE,
			ITEM_GROUP_MEDIUM,
			ITEM_GROUP_SMALL,
			PRE_BUILD_TERM,
			LEAD_TIME,
			TRACKING_FLAG,
			ORDER_METHOD,
			ITEM_GRADE,
			BAD_LEVEL,
			STANDARD_OUT_QTY,
			DEFECT_RATE,
			BY_PRODUCT_ITEM_ID,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			ATTRIBUTE1,
			ATTRIBUTE2,
			ATTRIBUTE3,
			ATTRIBUTE4,
			ATTRIBUTE5,
			ATTRIBUTE6,
			ATTRIBUTE7,
			ATTRIBUTE8,
			ATTRIBUTE9,
			ATTRIBUTE10,
			ATTRIBUTE11,
			ATTRIBUTE12,
			ATTRIBUTE13,
			ATTRIBUTE14,
			ATTRIBUTE15,
			FREE_OFFER_FLAG,
			TOOL,
			PRESS_LINE,
			SALES_FREE_FLAG,
			POP_MAKE_LOT_QTY,
			POP_INPUT_TYPE,
			POP_CT_QTY,
			POP_GT_LABELID,
			POP_CT_LABELID,
			POP_PALLET_LABELID,
			POP_EAN,
			POP_UPC,
			POP_DESTINATION,
			POP_MADEBY,
			POP_GANBAN_LABELID,
			LABELDESC,
			LABELSPEC
		)
		SELECT s_order_seq.nextval,
			DIVISION_CD,
			COMPANY_CD,
			ITEM_ID,
			ITEM_NAME,
			ITEM_GROUP_CODE,
			ITEM_TYPE,
			SPECIFICATION,
			VENDOR_CD,
			DEPARTURE_VENDOR_CD,
			UNIT_PRICE,
			UNIT,
			PURCHASE_UNIT,
			UNIT_QTY,
			CONVERSION_UNIT,
			CONVERSION_UNIT_QTY,
			MOQ,
			MOM,
			SAFETY_STOCK_QTY,
			SAFETY_STOCK_DAY,
			SAFETY_STOCK_DAY_UOM,
			PROD_MIN_LOT_SIZE,
			PROD_MAX_LOT_SIZE,
			PROD_INCREMENT_LOT_SIZE,
			DEMAND_LOT_SIZE,
<!-- 			IS_PHANTOM, -->
			ACTIVATION_FLAG,
			IS_FINITE_FLAG,
			FINITE_TERM,
			FINITE_TERM_UOM,
			IN_LOCATION_ID,
			OUT_LOCATION_ID,
			TEST_REPORT_FLAG,
			IQC_FLAG,
			OQC_FLAG,
			PQC_FLAG,
			RP_ITEM_ID,
			VENDOR_ITEM_ID,
			ALT_ITEM_ID,
			ITEM_CATEGORY,
			PURCHASE_TYPE,
			ITEM_USER_ID,
			PACKING_SIZE_WIDTH,
			PACKING_SIZE_HEIGHT,
			MATERIAL_WEIGHT,
			PALLET_WEIGHT,
			UNIT_WEIGHT,
			BOX_WEIGHT,
			ITEM_GROUP_LARGE,
			ITEM_GROUP_MEDIUM,
			ITEM_GROUP_SMALL,
			PRE_BUILD_TERM,
			LEAD_TIME,
			TRACKING_FLAG,
			ORDER_METHOD,
			ITEM_GRADE,
			BAD_LEVEL,
			STANDARD_OUT_QTY,
			DEFECT_RATE,
			BY_PRODUCT_ITEM_ID,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			ATTRIBUTE1,
			ATTRIBUTE2,
			ATTRIBUTE3,
			ATTRIBUTE4,
			ATTRIBUTE5,
			ATTRIBUTE6,
			ATTRIBUTE7,
			ATTRIBUTE8,
			ATTRIBUTE9,
			ATTRIBUTE10,
			ATTRIBUTE11,
			ATTRIBUTE12,
			ATTRIBUTE13,
			ATTRIBUTE14,
			ATTRIBUTE15,
			FREE_OFFER_FLAG,
			TOOL,
			PRESS_LINE,
			SALES_FREE_FLAG,
			POP_MAKE_LOT_QTY,
			POP_INPUT_TYPE,
			POP_CT_QTY,
			POP_GT_LABELID,
			POP_CT_LABELID,
			POP_PALLET_LABELID,
			POP_EAN,
			POP_UPC,
			POP_DESTINATION,
			POP_MADEBY,
			POP_GANBAN_LABELID,
			LABELDESC,
			LABELSPEC
	FROM	MOM_ITEM_DEFINITION
	WHERE   DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
    AND 	COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
    AND 	ITEM_ID = UPPER(TRIM(#{itemId, jdbcType=VARCHAR}))
            ;
    	
		SELECT
			CASE 
				WHEN COUNT(ITEM_ID) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_ITEM_DEFINITION
		WHERE 
			    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
			AND ITEM_ID = UPPER(TRIM(#{itemId, jdbcType=VARCHAR}))
		;
     END
    }
	</update>
	
	<delete id="remove_item" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	DECLARE
	BEGIN
		#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
		
	UPDATE MOM_ITEM_DEFINITION
		   SET DESCRIPTION = 'Delete Data'
		     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		     , UPDATE_BY = #{userId, jdbcType=VARCHAR}
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND ITEM_ID = UPPER(#{itemId, jdbcType=VARCHAR})
		   ;
	INSERT INTO MOM_ITEM_DEFINITION_HIST(
			LAST_EVENT_SEQ,
			DIVISION_CD,
			COMPANY_CD,
			ITEM_ID,
			ITEM_NAME,
			ITEM_GROUP_CODE,
			ITEM_TYPE,
			SPECIFICATION,
			VENDOR_CD,
			DEPARTURE_VENDOR_CD,
			UNIT_PRICE,
			UNIT,
			PURCHASE_UNIT,
			UNIT_QTY,
			CONVERSION_UNIT,
			CONVERSION_UNIT_QTY,
			MOQ,
			MOM,
			SAFETY_STOCK_QTY,
			SAFETY_STOCK_DAY,
			SAFETY_STOCK_DAY_UOM,
			PROD_MIN_LOT_SIZE,
			PROD_MAX_LOT_SIZE,
			PROD_INCREMENT_LOT_SIZE,
			DEMAND_LOT_SIZE,
<!-- 			IS_PHANTOM, -->
			ACTIVATION_FLAG,
			IS_FINITE_FLAG,
			FINITE_TERM,
			FINITE_TERM_UOM,
			IN_LOCATION_ID,
			OUT_LOCATION_ID,
			TEST_REPORT_FLAG,
			IQC_FLAG,
			OQC_FLAG,
			PQC_FLAG,
			RP_ITEM_ID,
			VENDOR_ITEM_ID,
			ALT_ITEM_ID,
			ITEM_CATEGORY,
			PURCHASE_TYPE,
			ITEM_USER_ID,
			PACKING_SIZE_WIDTH,
			PACKING_SIZE_HEIGHT,
			MATERIAL_WEIGHT,
			PALLET_WEIGHT,
			UNIT_WEIGHT,
			BOX_WEIGHT,
			ITEM_GROUP_LARGE,
			ITEM_GROUP_MEDIUM,
			ITEM_GROUP_SMALL,
			PRE_BUILD_TERM,
			LEAD_TIME,
			TRACKING_FLAG,
			ORDER_METHOD,
			ITEM_GRADE,
			BAD_LEVEL,
			STANDARD_OUT_QTY,
			DEFECT_RATE,
			BY_PRODUCT_ITEM_ID,
			USE_YN,
			DESCRIPTION,
			CREATE_DATE,
			CREATE_BY,
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			ATTRIBUTE1,
			ATTRIBUTE2,
			ATTRIBUTE3,
			ATTRIBUTE4,
			ATTRIBUTE5,
			ATTRIBUTE6,
			ATTRIBUTE7,
			ATTRIBUTE8,
			ATTRIBUTE9,
			ATTRIBUTE10,
			ATTRIBUTE11,
			ATTRIBUTE12,
			ATTRIBUTE13,
			ATTRIBUTE14,
			ATTRIBUTE15,
			FREE_OFFER_FLAG,
			TOOL,
			PRESS_LINE,
			SALES_FREE_FLAG,
			POP_MAKE_LOT_QTY,
			POP_INPUT_TYPE,
			POP_CT_QTY,
			POP_GT_LABELID,
			POP_CT_LABELID,
			POP_PALLET_LABELID,
			POP_EAN,
			POP_UPC,
			POP_DESTINATION,
			POP_MADEBY,
			POP_GANBAN_LABELID,
			LABELDESC,
			LABELSPEC
		)
		SELECT s_order_seq.nextval,
			DIVISION_CD,
			COMPANY_CD,
			ITEM_ID,
			ITEM_NAME,
			ITEM_GROUP_CODE,
			ITEM_TYPE,
			SPECIFICATION,
			VENDOR_CD,
			DEPARTURE_VENDOR_CD,
			UNIT_PRICE,
			UNIT,
			PURCHASE_UNIT,
			UNIT_QTY,
			CONVERSION_UNIT,
			CONVERSION_UNIT_QTY,
			MOQ,
			MOM,
			SAFETY_STOCK_QTY,
			SAFETY_STOCK_DAY,
			SAFETY_STOCK_DAY_UOM,
			PROD_MIN_LOT_SIZE,
			PROD_MAX_LOT_SIZE,
			PROD_INCREMENT_LOT_SIZE,
			DEMAND_LOT_SIZE,
<!-- 			IS_PHANTOM, -->
			ACTIVATION_FLAG,
			IS_FINITE_FLAG,
			FINITE_TERM,
			FINITE_TERM_UOM,
			IN_LOCATION_ID,
			OUT_LOCATION_ID,
			TEST_REPORT_FLAG,
			IQC_FLAG,
			OQC_FLAG,
			PQC_FLAG,
			RP_ITEM_ID,
			VENDOR_ITEM_ID,
			ALT_ITEM_ID,
			ITEM_CATEGORY,
			PURCHASE_TYPE,
			ITEM_USER_ID,
			PACKING_SIZE_WIDTH,
			PACKING_SIZE_HEIGHT,
			MATERIAL_WEIGHT,
			PALLET_WEIGHT,
			UNIT_WEIGHT,
			BOX_WEIGHT,
			ITEM_GROUP_LARGE,
			ITEM_GROUP_MEDIUM,
			ITEM_GROUP_SMALL,
			PRE_BUILD_TERM,
			LEAD_TIME,
			TRACKING_FLAG,
			ORDER_METHOD,
			ITEM_GRADE,
			BAD_LEVEL,
			STANDARD_OUT_QTY,
			DEFECT_RATE,
			BY_PRODUCT_ITEM_ID,
			USE_YN,
			DESCRIPTION,
			MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			#{userId, jdbcType=VARCHAR},
			UPDATE_DATE,
			UPDATE_BY,
			TID,
			ATTRIBUTE1,
			ATTRIBUTE2,
			ATTRIBUTE3,
			ATTRIBUTE4,
			ATTRIBUTE5,
			ATTRIBUTE6,
			ATTRIBUTE7,
			ATTRIBUTE8,
			ATTRIBUTE9,
			ATTRIBUTE10,
			ATTRIBUTE11,
			ATTRIBUTE12,
			ATTRIBUTE13,
			ATTRIBUTE14,
			ATTRIBUTE15,
			FREE_OFFER_FLAG,
			TOOL,
			PRESS_LINE,
			SALES_FREE_FLAG,
			POP_MAKE_LOT_QTY,
			POP_INPUT_TYPE,
			POP_CT_QTY,
			POP_GT_LABELID,
			POP_CT_LABELID,
			POP_PALLET_LABELID,
			POP_EAN,
			POP_UPC,
			POP_DESTINATION,
			POP_MADEBY,
			POP_GANBAN_LABELID,
			LABELDESC,
			LABELSPEC
	FROM	MOM_ITEM_DEFINITION
	WHERE   DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
    AND 	COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
    AND 	ITEM_ID = UPPER(#{itemId, jdbcType=VARCHAR})
            ;
		DELETE FROM MOM_ITEM_DEFINITION
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND ITEM_ID = UPPER(#{itemId, jdbcType=VARCHAR})
		;
		
		SELECT
			CASE 
				WHEN COUNT(ITEM_ID) = 0 THEN 'S'
				ELSE 'E' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_ITEM_DEFINITION
		WHERE 
			    DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
			AND ITEM_ID = UPPER(#{itemId, jdbcType=VARCHAR})
		;
	END
	}
	</delete>
	
	<select id="get_itemPopLabel_list" resultType="camelMap" parameterType="java.util.HashMap">
	 SELECT LABEL_ID AS CODE, 
	 		LABEL_DESC AS NAME 
	 FROM   MOM_POP_LABELLIST
	</select>
</mapper>
