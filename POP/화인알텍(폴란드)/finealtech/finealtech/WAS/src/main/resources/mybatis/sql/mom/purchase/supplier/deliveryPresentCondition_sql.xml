<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.purchase.supplier.deliveryPresentCondition">
	<select id="get_deliveryPresentCondition_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MD.DIVISION_CD
		     , MD.COMPANY_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(MO.DIVISION_CD
		                                               , MO.COMPANY_CD
		                                               , MO.VENDOR_CD) 
		        FROM  DUAL)                              AS VENDOR_NAME  
		     , NVL(MO.DEPARTURE_VENDOR_CD, MO.VENDOR_CD) AS DEPARTURE_VENDOR_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(MO.DIVISION_CD
		                                               , MO.COMPANY_CD
		                                               , NVL(MO.DEPARTURE_VENDOR_CD, MO.VENDOR_CD) )
		        FROM  DUAL)     AS DEPARTURE_VENDOR_NAME           
		     , TO_CHAR(MD.DEPARTURE_DATE, 'YYYY-MM-DD')    AS DEPARTURE_DATE   
		     , TO_CHAR(MO.ORDER_DATE, 'YYYY-MM-DD')    AS ORDER_DATE   
		     , MO.ORDER_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MO.DIVISION_CD
		                                             , MO.COMPANY_CD
		                                             , 'SYSTEM_FLAG'
		                                             , MO.ORDER_TYPE )
		        FROM DUAL)                            AS ORDER_TYPE_NAME  
		     , MO.ORDER_STATE     
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MO.DIVISION_CD
		                                             , MO.COMPANY_CD
		                                             , 'MATERIAL_ORDER_STATE'
		                                             , MO.ORDER_STATE )
		        FROM DUAL)                            AS ORDER_STATE_NAME   
		     , MD.DEPARTURE_STATE    
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MO.DIVISION_CD
		                                             , MO.COMPANY_CD
		                                             , 'MATERIAL_DEPARTURE_STATE'
		                                             , MD.DEPARTURE_STATE  )
		        FROM DUAL)                            AS DEPARTURE_STATE_NAME              
		     , MO.ITEM_ID
		     , MID.ITEM_NAME
		     , MID.SPECIFICATION
		     , MID.UNIT
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( MID.DIVISION_CD
		                                              , MID.COMPANY_CD
		                                              , 'ITEM_UNIT'
		                                              , MID.UNIT )
		        FROM DUAL)                            AS UNIT_NAME  		     
		     , MO.ORDER_QTY
		     , NVL(MO.CANCEL_QTY, 0) AS CANCEL_QTY
		     , MD.DEPARTURE_QTY
		     , MO.ORDER_GROUP_ID
		     , MD.MATERIAL_ORDER_ID
		     , MD.MATERIAL_DEPARTURE_ID
		     , MD.DEPARTURE_GROUP_ID
		     , MD.DEPARTURE_SEQ
		     , MD.DESCRIPTION
		     , MD.VENDOR_LOT
		     , TO_CHAR(MD.CREATE_DATE, 'YYYY-MM-DD')    AS CREATE_DATE  
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MD.DIVISION_CD
		                                             , MD.COMPANY_CD
		                                             , MD.CREATE_BY) 
		        FROM  DUAL)                            AS CREATE_BY_NAME
		     , MO.ORDER_FLAG
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MO.DIVISION_CD
		                                              , MO.COMPANY_CD
		                                              , 'ORDER_FLAG'
		                                              , MO.ORDER_FLAG)
		          FROM DUAL)						   AS ORDER_FLAG_NAME 
		     , NVL(MD.CONVERSION_UNIT_QTY, 1) AS CONVERSION_UNIT_QTY
             , MID.CONVERSION_UNIT
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MO.DIVISION_CD
		                                              , MO.COMPANY_CD
		                                              , 'ITEM_UNIT'
		                                              , MID.CONVERSION_UNIT)
		          FROM DUAL)						   AS CONVERSION_UNIT_NAME
		     , MD.TRANSACTION_SEQ 
		FROM   MOM_MATERIAL_DEPARTURE MD
		     , MOM_MATERIAL_ORDER MO
		     , MOM_ITEM_DEFINITION MID
		WHERE  MD.DIVISION_CD = MO.DIVISION_CD
		AND    MD.COMPANY_CD  = MO.COMPANY_CD
		AND    MD.MATERIAL_ORDER_ID = MO.MATERIAL_ORDER_ID   
		AND    MO.DIVISION_CD = MID.DIVISION_CD
		AND    MO.COMPANY_CD  = MID.COMPANY_CD
		AND    MO.ITEM_ID     = MID.ITEM_ID  
<!-- 		AND    MD.DEPARTURE_STATE != 'CANCEL' -->
		AND    MD.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    MD.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	   <if test="menuCode == 'DEPT'">
		AND    NVL(MO.DEPARTURE_FLAG, 'N') = 'Y'
	   </if>
	   <if test="menuCode == 'WGR'">
		AND    NVL(MO.DEPARTURE_FLAG, 'N') = 'N'
		AND    NVL(MID.IQC_FLAG, 'N') = 'Y'
	   </if>
	   <if test="fromDate != null and fromDate != ''">
		AND    MD.DEPARTURE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') 
	   </if>
	   <if test="vendorName != null and vendorName != ''">
		AND	   MO.VENDOR_CD = #{vendorName, jdbcType=VARCHAR}
	   </if>
	   <if test="departureVendorName != null and departureVendorName != ''">
		AND	  MO.DEPARTURE_VENDOR_CD = #{departureVendorName, jdbcType=VARCHAR}
	   </if>
	   <if test="itemName != null and itemName != ''">
		AND (UPPER(MO.ITEM_ID) LIKE '%' || UPPER(#{itemName, jdbcType=VARCHAR}) || '%' 
		 OR UPPER(MID.ITEM_NAME) LIKE '%' || UPPER(#{itemName, jdbcType=VARCHAR}) || '%')
	   </if>
	   <if test="orderNo != null and orderNo != ''">
		AND  UPPER(MD.MATERIAL_ORDER_ID) LIKE '%' || UPPER(#{orderNo, jdbcType=VARCHAR}) || '%'
	   </if>
	   <if test="departureNo != null and departureNo != ''">
		AND  UPPER(MD.DEPARTURE_GROUP_ID) LIKE '%' || UPPER(#{departureNo, jdbcType=VARCHAR}) || '%'
	   </if>
	   <if test="orderState != null and orderState != ''">
		AND MO.ORDER_STATE = #{orderState, jdbcType=VARCHAR}
	   </if>
	   <if test="orderType != null and orderType != ''">
      	AND  MO.ORDER_FLAG = #{orderType, jdbcType=VARCHAR}
	   </if>
	   <if test="menuCode == 'DEPT'">
	   ORDER BY MD.DEPARTURE_GROUP_ID, MD.TRANSACTION_SEQ
	   </if>
	   <if test="menuCode == 'WGR'">
	   ORDER BY MO.ORDER_GROUP_ID, MO.TRANSACTION_SEQ
	   </if>
	</select>

	<insert id="create_cancelMaterialDelivery" statementType="CALLABLE">
	{
        CALL SP_MOM_MATERIAL_PKG.P_CANCEL_MATERIAL_DEPARTURER (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{menuId, mode=IN, jdbcType=VARCHAR}
           , #{tableId, mode=IN, jdbcType=VARCHAR}
           , #{createBy, mode=IN, jdbcType=VARCHAR}
        )
    }
    </insert>
	
	<select id="get_deliveryPrintStatus_list" resultType="camelMap" parameterType="java.util.HashMap">
	  WITH TEMP1 AS (
		  SELECT NVL (MO.DEPARTURE_VENDOR_CD, MO.VENDOR_CD) AS 업체코드
			   , (SELECT MOM_COMMON_PKG.fn_get_vendor_name(MD.DIVISION_CD, MD.COMPANY_CD,NVL (MO.DEPARTURE_VENDOR_CD, MO.VENDOR_CD)) 
                FROM   DUAL )                         AS 업체명
		       , TO_CHAR (MD.CREATE_DATE, 'YYYY-MM-DD') AS 출발일
		       , MD.DEPARTURE_GROUP_ID                  AS 출발번호
		       , '*' || MD.DEPARTURE_GROUP_ID || '*'    AS 출발번호_BAR128
		       , NVL(V.VENDOR_NAME, '-') AS 상호
		       , NVL(V.MANAGER_NAME, '-')               AS 담당자
		       , NVL(V.TEL_NO, '-')                     AS TEL
		       , NVL(V.FAX_NO, '-')                     AS FAX
		       , NVL(V.BUSINESS_NO, '-')                AS 등록번호
		       , NVL(V.ADDRESS, '-')                    AS 주소
		       , NVL(V.CEO_NAME, '-')                   AS 대표
		       , NVL (MV.TEL_NO, '-') AS 납품업체_TEL
               , NVL (MV.MANAGER_NAME, '-') AS 납품업체_담당자
		       , MO.ITEM_ID                     AS PLIST_ITEM_ID
		       , MID.ITEM_NAME                  AS PLIST_ITEM_NAME
		       , TO_CHAR(MO.ORDER_QTY) AS PLIST_ORDER_QTY
               , TO_CHAR(MD.DEPARTURE_QTY) AS PLIST_DEPARTURE_QTY
               , NVL (TO_CHAR(MD.CONVERSION_UNIT_QTY), 1) AS PLIST_CONVERSION_UNIT_QTY
		       , MID.UNIT                       AS PLIST_UNIT
		       , MD.DESCRIPTION                 AS PLIST_DESCRIPTION
		       , MD.DIVISION_CD
               , MD.COMPANY_CD
               , MD.MATERIAL_DEPARTURE_ID
               , MD.DEPARTURE_GROUP_ID
               , MD.TRANSACTION_SEQ
               , MO.ORDER_GROUP_ID
		    FROM MOM_MATERIAL_DEPARTURE MD
		       , MOM_MATERIAL_ORDER MO
		       , MOM_ITEM_DEFINITION MID
		       , MOM_VENDOR V
		       , MOM_VENDOR MV
		   WHERE MD.DIVISION_CD = MO.DIVISION_CD
		     AND MD.COMPANY_CD = MO.COMPANY_CD
		     AND MD.MATERIAL_ORDER_ID = MO.MATERIAL_ORDER_ID
		     AND MO.DIVISION_CD = MID.DIVISION_CD
		     AND MO.COMPANY_CD = MID.COMPANY_CD
		     AND MO.ITEM_ID = MID.ITEM_ID
		     AND MO.DIVISION_CD = V.DIVISION_CD
		     AND MO.COMPANY_CD = V.COMPANY_CD
<!-- 		     AND NVL(MO.DEPARTURE_VENDOR_CD, MO.VENDOR_CD) = V.VENDOR_CD -->
		     AND MD.DIVISION_CD = V.VENDOR_CD
		     AND MO.DIVISION_CD = MV.DIVISION_CD
             AND MO.COMPANY_CD = MV.COMPANY_CD
             AND MO.DEPARTURE_VENDOR_CD = MV.VENDOR_CD
		     AND MD.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		     AND MD.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		     AND MD.DEPARTURE_STATE != 'CANCEL'
	       <if test="departureGroupIds != null and departureGroupIds != ''">
		     AND MD.DEPARTURE_GROUP_ID IN (${departureGroupIds})
		   </if>
	       <if test="menuCode == 'DEPT'">
	        AND    NVL(MO.DEPARTURE_FLAG, 'N') = 'Y'
	       </if>
	       <if test="menuCode == 'WGR'">
	        AND    NVL(MO.DEPARTURE_FLAG, 'N') = 'N'
	        AND    NVL(MID.IQC_FLAG, 'N') = 'Y'
	       </if>
	   )
	    SELECT A.*
<!--              , B.CNT CNT -->
             , CASE WHEN MOD(PLIST_CELLROW, C.LIST_ALLCOUNT) = 1 THEN (CEIL(PLIST_CELLROW / C.LIST_ALLCOUNT)) || '/' || (CEIL(GROUP_COUNT / C.LIST_ALLCOUNT)) 
                  ELSE '' END AS PLIST_PAGING
          FROM (SELECT A.*, ROW_NUMBER() OVER(PARTITION BY A.DEPARTURE_GROUP_ID 
							          			 <if test="menuCode == 'DEPT'">
							          			  ORDER BY A.DEPARTURE_GROUP_ID, A.TRANSACTION_SEQ
							          			 </if>
							          			 <if test="menuCode == 'WGR'">
							          			  ORDER BY A.ORDER_GROUP_ID, A.TRANSACTION_SEQ
							          			 </if>
							          			 ) AS PLIST_CELLROW
						  , COUNT(*) OVER(PARTITION BY A.DEPARTURE_GROUP_ID) AS GROUP_COUNT 
		          FROM TEMP1 A
		             , MOM_MATERIAL_DEPARTURE B
		         WHERE A.DIVISION_CD = B.DIVISION_CD
		           AND A.COMPANY_CD = B.COMPANY_CD
		           AND A.MATERIAL_DEPARTURE_ID = B.MATERIAL_DEPARTURE_ID) A
<!--              , (SELECT COUNT (*) CNT FROM TEMP1) B -->
             , (SELECT LIST_ALLCOUNT
		          FROM MOM_EXCEL
		         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		           AND EXCEL_ID = #{excelId, jdbcType=VARCHAR}) C
    </select>
    
    <select id="get_deliveryPrintStatusCount_list" resultType="camelMap" parameterType="java.util.HashMap">
    	SELECT COUNT(*) AS ROW_COUNT
    	  FROM MOM_MATERIAL_DEPARTURE
    	 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
    	   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
    	   AND DEPARTURE_GROUP_ID IN (${departureGroupIds})
    	   AND DEPARTURE_STATE != 'CANCEL'
    </select>
	
</mapper>