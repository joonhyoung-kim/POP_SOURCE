<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.plan.plan.materialLedger">
	<select id="get_materialLedger_list" resultType="camelMap" parameterType="java.util.HashMap">
		WITH TEMP1 AS							
			 (SELECT A.*							
			    FROM TH_EXP_PSI_MOM A, TH_EXP_PSI_MOM_DETAIL B							
			   WHERE A.MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
			   <if test="planId != null and planId != ''">
			    	AND A.PLAN_ID = #{planId, jdbcType=VARCHAR}					
			   </if>
			   <if test="itemId != null and itemId != ''">
			   		AND UPPER(A.ITEM_ID) LIKE UPPER('%' || #{itemId, jdbcType=VARCHAR} || '%') 
			   </if>
			   <if test="vendorId != null and vendorId != ''">
			   		AND B.VENDOR_ID = #{vendorId, jdbcType=VARCHAR}
			   </if>							
			     AND A.MASTER_ID = B.MASTER_ID							
			     AND A.PLAN_ID = B.PLAN_ID							
			     AND A.ITEM_ID = B.ITEM_ID							
			     AND A.SEQ = B.SEQ
			     <if test="fromDate != null and fromDate != ''">
			      <![CDATA[AND A.PLAN_DATE >= TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')]]>     		
			     </if>						
			    <if test="toDate != null and toDate != ''">
			     <![CDATA[AND A.PLAN_DATE <= TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')]]>
			    </if>
			    <if test="shortage != null and shortage != ''">
			    	<if test='shortage.equals("Y")'>
			   		<![CDATA[AND A.ITEM_ID IN
			         (SELECT DISTINCT M.ITEM_ID
			            FROM TH_EXP_PSI_MOM M
			           WHERE M.MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
			             AND M.PLAN_ID = #{planId, jdbcType=VARCHAR}
			             AND M.SEQ = 8
			             AND M.PLAN_DATE >= TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			             AND M.PLAN_DATE <= TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + '1'
			             AND NVL(M.QTY, 0) < 0)]]>
			    	</if>
			    </if>
			   	),					
			TEMP2 as							
			 (select FLOOR((ROWNUM - 1) / 6) + 1 RNUM,							
			         ROWNUM JQGRIDROW,							
			         a.*							
			    from (select decode(a.seq, 2,b.part_no,5,b.lead_time,6, b.vendor_nm) as col1,							
			                 decode(a.seq, 2,b.item_name, 5, b.specification,6, (SELECT mom_common_pkg.fn_get_user_name(b.master_id, #{companyCd, jdbcType=VARCHAR}, b.planner) FROM DUAL)) as col2,							
			                 decode(a.seq, 2, b.item_type_nm, 5,b.onhand_qty, 6, b.warehouse) as col3,							
			                 a.*,							
			                 B.VENDOR_ID,							
			                 B.PLANNER							
			            from (select *							
			                    from (select plan_id,							
			                                 item_id,							
			                                 a.seq,							
			                                 max(category) category,							
			                                 TRUNC(plan_date) plan_date,							
			                                 sum(qty) qty							
			                            from temp1 a							
			                           where a.seq in( 2, 5, 6)							
			                           group by a.plan_id, a.item_id, a.seq,  a.plan_date) 
			                           <if test="pivot != null and pivot != ''">
			                             PIVOT(SUM(QTY) FOR PLAN_DATE IN(${pivot}))
			                           </if>
			                           ) a,							
			                 th_exp_psi_mom_detail b							
			           where a.plan_id = b.plan_id							
			             and a.item_id = b.item_id							
			             and b.master_id = #{divisionCd, jdbcType=VARCHAR}						
			             and a.seq = b.seq							
			           order by a.item_id, a.seq) a)							
			SELECT A.*, B.CNT CNT							
			  FROM(							
			SELECT A.*							
			  FROM TEMP2 A) A,(							
			SELECT COUNT(*) CNT							
			  FROM TEMP2) B	
	</select>
	
	<!-- PlanID 조회 -->
	<select id="get_planId_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT PLAN_ID CODE, PLAN_ID NAME
	      FROM TH_MST_PLAN A
	     WHERE MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
	     GROUP BY PLAN_ID
	     ORDER BY A.PLAN_ID DESC
	</select>
   
</mapper>