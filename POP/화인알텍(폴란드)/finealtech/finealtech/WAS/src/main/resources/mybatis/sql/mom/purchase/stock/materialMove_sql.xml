<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.purchase.stock.materialMove">
	<select id="get_materialMove_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT S.ITEM_STOCK_ID
		     , S.ITEM_ID            
		     , D.ITEM_NAME           
		     , D.SPECIFICATION       
		     , ROUND(S.CURRENT_QTY, 4)  AS CURRENT_QTY  
		     , S.PREV_QTY                               
		     , D.UNIT                                   
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(S.DIVISION_CD, S.COMPANY_CD, 'ITEM_UNIT', D.UNIT) 
		        FROM   DUAL ) AS UNIT_NAME              
		     , S.LOCATION_CD
		     , '' AS TO_LOCATION_CD
		     , '' AS MOVE_QTY
		     , '' AS MOVE_DATE                            
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(S.DIVISION_CD, S.COMPANY_CD, S.LOCATION_CD)
		        FROM   DUAL ) AS FROM_LOCATION_NAME                                       
		     , D.ITEM_TYPE                             
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(S.DIVISION_CD, S.COMPANY_CD, 'ITEM_TYPE', D.ITEM_TYPE)
		        FROM   DUAL ) AS ITEM_TYPE_NAME  
		     , NVL(D.FREE_OFFER_FLAG, 'N')  AS FREE_OFFER_FLAG
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(S.DIVISION_CD, S.COMPANY_CD, 'FREE_OFFER', NVL(D.FREE_OFFER_FLAG, 'N')) 
		        FROM   DUAL ) AS FREE_OFFER_NAME            
		     <!-- , S.DESCRIPTION -->
		     , '' AS DESCRIPTION
		FROM   MOM_ITEM_STOCK S
		     , MOM_ITEM_DEFINITION D
		     , MOM_PARAMETER P
		     , MOM_FACILITY F
		WHERE  S.DIVISION_CD = D.DIVISION_CD
		AND    S.COMPANY_CD  = D.COMPANY_CD
		AND    S.ITEM_ID     = D.ITEM_ID
		AND    S.DIVISION_CD = P.DIVISION_CD
        AND    S.COMPANY_CD  = P.COMPANY_CD
        AND    S.DIVISION_CD = F.DIVISION_CD(+)
        AND    S.COMPANY_CD  = F.COMPANY_CD(+)
        AND    S.LOCATION_CD = F.FACILITY_CD(+)
		AND    S.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    S.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	   <if test = "stockType =='MAT'">
<!-- 		AND S.LOCATION_CD IN (SELECT FACILITY_CD FROM MOM_FACILITY -->
<!-- 							  WHERE DIVISION_CD = S.DIVISION_CD -->
<!-- 							  AND COMPANY_CD = S.COMPANY_CD -->
<!-- 							  AND NVL(USE_YN, 'Y') = 'Y' -->
<!-- 							  AND FACILITY_TYPE IN('FAC200')) -->
        AND EXISTS ( SELECT '*'
                      FROM   MOM_CODE MC
                      WHERE  MC.DIVISION_CD = S.DIVISION_CD
                      AND    MC.COMPANY_CD  = S.COMPANY_CD
                      AND    MC.CODE_CLASS_ID = 'ITEM_TYPE'
                      AND    MC.CODE_ID       = D.ITEM_TYPE
                      AND    MC.USE_YN        = 'Y'
                      AND    MC.ATTRIBUTE3    = 'Y')
         AND EXISTS ( SELECT '*'
                      FROM   MOM_CODE MC
                      WHERE  MC.DIVISION_CD = S.DIVISION_CD
                      AND    MC.COMPANY_CD  = S.COMPANY_CD
                      AND    MC.CODE_CLASS_ID = 'FACILITY_TYPE'
                      AND    MC.CODE_ID       = F.FACILITY_TYPE
                      AND    MC.USE_YN        = 'Y'
                      AND    MC.ATTRIBUTE8    = 'Y')        
	   </if>
	   <if test = "stockType =='WO'">
<!--         AND S.LOCATION_CD IN (SELECT FACILITY_CD FROM MOM_FACILITY -->
<!--                               WHERE DIVISION_CD = S.DIVISION_CD -->
<!--                               AND COMPANY_CD = S.COMPANY_CD -->
<!--                               AND NVL(USE_YN, 'Y') = 'Y' -->
<!--                               AND FACILITY_TYPE IN('FAC300', 'FAC500')) -->
         AND EXISTS ( SELECT '*'
                      FROM   MOM_CODE MC
                      WHERE  MC.DIVISION_CD = S.DIVISION_CD
                      AND    MC.COMPANY_CD  = S.COMPANY_CD
                      AND    MC.CODE_CLASS_ID = 'ITEM_TYPE'
                      AND    MC.CODE_ID       = D.ITEM_TYPE
                      AND    MC.USE_YN        = 'Y'
                      AND    MC.ATTRIBUTE4    = 'Y')
         AND EXISTS ( SELECT '*'
                      FROM   MOM_CODE MC
                      WHERE  MC.DIVISION_CD = S.DIVISION_CD
                      AND    MC.COMPANY_CD  = S.COMPANY_CD
                      AND    MC.CODE_CLASS_ID = 'FACILITY_TYPE'
                      AND    MC.CODE_ID       = F.FACILITY_TYPE
                      AND    MC.USE_YN        = 'Y'
                      AND    MC.ATTRIBUTE9    = 'Y')                          
       </if>
       <if test = "stockType =='SO'">
<!--         AND S.LOCATION_CD IN (SELECT FACILITY_CD FROM MOM_FACILITY -->
<!--                               WHERE DIVISION_CD = S.DIVISION_CD -->
<!--                               AND COMPANY_CD = S.COMPANY_CD -->
<!--                               AND NVL(USE_YN, 'Y') = 'Y' -->
<!--                               AND FACILITY_TYPE IN('FAC300')) -->
         AND EXISTS ( SELECT '*'
                      FROM   MOM_CODE MC
                      WHERE  MC.DIVISION_CD = S.DIVISION_CD
                      AND    MC.COMPANY_CD  = S.COMPANY_CD
                      AND    MC.CODE_CLASS_ID = 'ITEM_TYPE'
                      AND    MC.CODE_ID       = D.ITEM_TYPE
                      AND    MC.USE_YN        = 'Y'
                      AND    MC.ATTRIBUTE5    = 'Y')
         AND EXISTS ( SELECT '*'
                      FROM   MOM_CODE MC
                      WHERE  MC.DIVISION_CD = S.DIVISION_CD
                      AND    MC.COMPANY_CD  = S.COMPANY_CD
                      AND    MC.CODE_CLASS_ID = 'FACILITY_TYPE'
                      AND    MC.CODE_ID       = F.FACILITY_TYPE
                      AND    MC.USE_YN        = 'Y'
                      AND    MC.ATTRIBUTE10    = 'Y')                         
       </if>
       <if test = "stockType =='MRTN'">
        AND EXISTS ( SELECT '*'
                      FROM   MOM_CODE MC
                      WHERE  MC.DIVISION_CD = S.DIVISION_CD
                      AND    MC.COMPANY_CD  = S.COMPANY_CD
                      AND    MC.CODE_CLASS_ID = 'ITEM_TYPE'
                      AND    MC.CODE_ID       = D.ITEM_TYPE
                      AND    MC.USE_YN        = 'Y'
                      AND    MC.ATTRIBUTE6    = 'Y')
         AND EXISTS ( SELECT '*'
                      FROM   MOM_CODE MC
                      WHERE  MC.DIVISION_CD = S.DIVISION_CD
                      AND    MC.COMPANY_CD  = S.COMPANY_CD
                      AND    MC.CODE_CLASS_ID = 'FACILITY_TYPE'
                      AND    MC.CODE_ID       = F.FACILITY_TYPE
                      AND    MC.USE_YN        = 'Y'
                      AND    MC.ATTRIBUTE12    = 'Y')        
	   </if>
	   <if test="location != null and location != '' ">
		AND    S.LOCATION_CD = #{location, jdbcType=VARCHAR}  
	   </if>
	   <if test="itemType != null and itemType != '' ">
		AND    D.ITEM_TYPE = #{itemType, jdbcType=VARCHAR}  
	   </if>
	   <if test="itemId != null and itemId != '' ">
	    AND (UPPER(S.ITEM_ID) LIKE UPPER('%' || #{itemId, jdbcType=VARCHAR} || '%') 
		 OR UPPER(D.ITEM_NAME) LIKE UPPER('%' || #{itemId, jdbcType=VARCHAR} || '%'))
	   </if>
	   <if test="zeroFlag != null and zeroFlag != ''">
		   <choose>
			   <when test='zeroFlag == "N"'>
			   AND S.CURRENT_QTY != 0
			   </when>
		   </choose>
	   </if>
	  ORDER BY FROM_LOCATION_NAME, S.ITEM_ID 
	</select>
	
	<select id="get_itemMoveTmp_list" resultType="camelMap" parameterType="java.util.HashMap">
	 SELECT * 
	   FROM MOM_ITEM_MOVE_TMP
	  WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	    AND STOCK_TYPE = #{stockType, jdbcType=VARCHAR}
	</select>
	
	<delete id="remove_itemMoveTmp" parameterType="java.util.HashMap">
        DELETE FROM MOM_ITEM_MOVE_TMP
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
<!--            AND STOCK_TYPE = #{stockType, jdbcType=VARCHAR} -->
    </delete>
    
    <insert id="create_itemMoveTmp" parameterType="java.util.HashMap">
        INSERT INTO MOM_ITEM_MOVE_TMP
            ( DIVISION_CD  
            , COMPANY_CD   
            , ITEM_ID      
            , QTY     
            , IO_TIME      
            , FROM_LOCATION_CD       
            , TO_LOCATION_CD      
            , STOCK_TYPE       
            , DESCRIPTION      
            , CREATE_DATE  
            , CREATE_BY    
            )
        VALUES
            (  #{divisionCd, jdbcType=VARCHAR}
             , #{companyCd, jdbcType=VARCHAR}
             , #{itemId, jdbcType=VARCHAR}
             , #{moveQty, jdbcType=NUMERIC}
             , to_date(#{moveDate, jdbcType=VARCHAR},'yyyy-mm-dd')
             , #{locationCd, jdbcType=VARCHAR}
             , #{toLocationCd, jdbcType=VARCHAR}
             , #{stockType, jdbcType=VARCHAR}
             , #{description, jdbcType=VARCHAR}
             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , #{createBy, jdbcType=VARCHAR}
            )
    </insert>
	
	
	<insert id="create_materialMoveProc" statementType="CALLABLE" parameterType="java.util.HashMap">
	{
        CALL P_ITEM_STOCK_MOVE (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{stockType, mode=IN, jdbcType=VARCHAR}
           , #{createBy, mode=IN, jdbcType=VARCHAR}
        )
    }
	</insert>
	
</mapper>