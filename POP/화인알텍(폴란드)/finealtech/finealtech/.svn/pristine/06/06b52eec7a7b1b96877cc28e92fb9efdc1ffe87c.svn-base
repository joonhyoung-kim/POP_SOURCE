<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.plan.demand.demandPlan">
	<select id="get_demandPlan_list" resultType="camelMap" parameterType="java.util.HashMap">
		<!-- 2019.01.20 hyjeong begin -->
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		WITH TEMP1 AS (
		</if>
		<!-- 2019.01.20 hyjeong end -->
		SELECT A.MASTER_ID
		     , A.PLAN_ID
		     , A.DEMAND_ID
		     , MIN(A.CUSTOMER_ID)  AS CUSTOMER_ID
		     , MIN(A.LINE_CODE)    AS LINE_CODE
		     , MIN((SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(A.MASTER_ID, #{companyCd, jdbcType=VARCHAR} , A.CUSTOMER_ID)
		              FROM   DUAL ))   AS CUSTOMER_NAME
		     , MIN(A.ITEM_ID)    AS ITEM_ID
		     , MIN((SELECT MOM_COMMON_PKG.FN_GET_ITEM_NAME(A.MASTER_ID, #{companyCd, jdbcType=VARCHAR} , A.ITEM_ID)
		              FROM   DUAL ))   AS ITEM_NAME
		     , MIN(TO_CHAR(A.START_TIME, 'YYYY-MM-DD HH24:MI:SS')) AS START_TIME
		     , SUM(A.QTY)    AS QTY
		     , MIN(TO_CHAR(DUE_DATE, 'YYYY-MM-DD')) AS DUE_DATE
		     , A.SALES_ORDER_ID
           	 , A.MODEL_SUFFIX
           	 , MIN (A.MKT) AS MKT
      		 , MIN((SELECT MOM_COMMON_PKG.FN_GET_SALES_PRICE(A.MASTER_ID, #{companyCd, jdbcType=VARCHAR}, A.CUSTOMER_ID, A.ITEM_ID, A.MKT, 'KRW', DUE_DATE) FROM DUAL)) AS KRW_PRICE
       		 , MIN((SELECT MOM_COMMON_PKG.FN_GET_SALES_PRICE(A.MASTER_ID, #{companyCd, jdbcType=VARCHAR}, A.CUSTOMER_ID, A.ITEM_ID, A.MKT, 'USD', DUE_DATE) FROM DUAL)) AS USD_PRICE
		    <if test = "pivot != '' and pivot != null">
		     ${pivot}
		    </if>
		  FROM TH_MST_DEMAND A
		 WHERE A.MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
		  <if test="planId != null and planId != ''">
		   AND A.PLAN_ID   = #{planId, jdbcType=VARCHAR}
		  </if>
		  <if test="vendorCd != null and vendorCd != ''"> 
		   AND A.CUSTOMER_ID = #{vendorCd, jdbcType=VARCHAR}
		  </if>
		  <if test="itemId != null and itemId != ''">
		   AND UPPER(A.ITEM_ID || '@' || MOM_COMMON_PKG.FN_GET_ITEM_NAME(A.MASTER_ID, #{companyCd, jdbcType=VARCHAR} , A.ITEM_ID)) LIKE '%' || UPPER(#{itemId, jdbcType=VARCHAR})|| '%' 
		  </if>
		 GROUP BY A.MASTER_ID
		        , A.PLAN_ID
		        , A.DEMAND_ID
		        , A.SALES_ORDER_ID
                , A.MODEL_SUFFIX
		 ORDER BY LINE_CODE
		        , START_TIME
		        , ITEM_ID
		<!-- 2019.01.20 hyjeong begin -->
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		        ) 
		SELECT 	A.* , 
        		B.ROW_COUNT 
   		FROM (	SELECT 	A.* , 
          				ROWNUM GRIDROW 
           		FROM TEMP1 A) A , 
        	 (	SELECT COUNT(*) ROW_COUNT 
           		FROM TEMP1) B
        WHERE GRIDROW BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
		</if>
		<!-- 2019.01.20 hyjeong end -->
	</select>

	<!-- PlanID 조회 -->
	<select id="get_planId_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT PLAN_ID CODE, PLAN_ID NAME
	      FROM TH_MST_PLAN A
	     WHERE MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
	     AND   PLAN_TYPE NOT IN ('SYNC')
	     GROUP BY PLAN_ID
	     ORDER BY A.PLAN_ID DESC
	</select>

	<!-- 날짜 조회 From , To -->
   <select id="get_planId_date_list" resultType="camelMap" parameterType="java.util.HashMap">
	   SELECT TO_CHAR(SOLAR_DATE, 'YYYYMMDD') PLAN_DATE, DAY
	        , DECODE(DAY, #{MESSAGES30013, jdbcType=VARCHAR}, 'Mon' , #{MESSAGES30002, jdbcType=VARCHAR}, 'Tue' , #{MESSAGES30009, jdbcType=VARCHAR}, 'Wed' , #{MESSAGES30069, jdbcType=VARCHAR}, 'Thu' , #{MESSAGES30070, jdbcType=VARCHAR}, 'Fri' , #{MESSAGES30071, jdbcType=VARCHAR}, 'Sat', #{MESSAGES30072, jdbcType=VARCHAR}, 'Sun') AS EDAY
	     FROM MOM_CALENDA A
	        , (SELECT MIN(PLAN_START_DTTM) START_DATE
	        , MAX(PLAN_START_DTTM) + MAX(DEMAND_HORIZON) END_DATE
	             FROM TH_MST_PLAN A
	            WHERE PLAN_ID = #{planId, jdbcType=VARCHAR}
	      		  AND MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
	       	  ) B
	    WHERE A.SOLAR_DATE >= START_DATE
	      AND A.SOLAR_DATE &lt;= START_DATE+30
	    ORDER BY 1
   </select>
   
   
   <insert id="create_productPlanCreate" statementType="CALLABLE">
	{
        CALL SP_RCCP_PROCESS.MAIN (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{planId, mode=IN, jdbcType=VARCHAR}
           , #{userId, mode=IN, jdbcType=VARCHAR}
        )
    }
	</insert>

</mapper>
