<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.quality.productShippingPlanCheck">
	<select id="get_productShippingPlanCheckUp_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.CUSTOMER_PO_ID   
		     , A.CUSTOMER_PO_NO  
		     , A.SALES_ORDER_ID  
		     , A.OQC_ID         
		     , DECODE( A.OQC_ID, '', #{MESSAGES30048, jdbcType=VARCHAR}, #{MESSAGES30049, jdbcType=VARCHAR}) AS SAVE_FLAG        
		     , A.ITEM_ID
		     , A.ITEM_NAME
		     , A.SPECIFICATION
		     , A.ORDER_QTY    
		     , A.SHIP_QTY      
		     , A.CANCEL_QTY   
		     , A.REMAIN_QTY 
		     , A.VENDOR_CD
		     , A.VENDOR_NAME
		     , A.DUE_DATE
		     , A.MARKET_CD
		     , A.MARKET_NAME
		     , A.CURRENCY_CD
		     , A.CURRENCY_NAME
		     , (SELECT MOM_COMMON_PKG.FN_GET_SALES_PRICE(A.DIVISION_CD, A.COMPANY_CD, A.VENDOR_CD, A.ITEM_ID, A.MARKET_CD, A.CURRENCY_CD, MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{compnayCd, jdbcType=VARCHAR})) FROM DUAL) AS UNIT_PRICE
			 , A.QTY AS PRODUCT_QTY
		FROM ( SELECT MSO.CUSTOMER_PO_ID   
		            , MSO.CUSTOMER_PO_NO   
		            , MSO.SALES_ORDER_ID
		            , ''                   AS OQC_ID 
		            , MSO.ITEM_ID
		            , MID.ITEM_NAME
		            , MID.SPECIFICATION
		            , MSO.ORDER_QTY     
		            , MSO.SHIP_QTY      
		            , MSO.CANCEL_QTY   
		            , MSO.ORDER_QTY - NVL(MSO.SHIP_QTY, 0) - NVL(CANCEL_QTY,0) - MOM_COMMON_PKG.FN_GET_OQC_RESULT_QTY(MSO.DIVISION_CD, MSO.COMPANY_CD, MSO.SALES_ORDER_ID)  AS REMAIN_QTY
		            , MSO.VENDOR_CD
		            , MSO.VENDOR_NAME
		            , TO_CHAR(MSO.DUE_DATE, 'YYYY-MM-DD') AS DUE_DATE
		            , MSO.MARKET_CD
		            , MSO.MARKET_NAME
		            , MSO.CURRENCY_CD
		            , MSO.CURRENCY_NAME
		            , MSO.DIVISION_CD
		            , MSO.COMPANY_CD
		            , NULL AS QTY
		       FROM   MOM_SALES_ORDER_V MSO
		            , MOM_ITEM_DEFINITION MID
		       WHERE  MSO.DIVISION_CD = MID.DIVISION_CD
		       AND    MSO.COMPANY_CD  = MID.COMPANY_CD
		       AND    MSO.ITEM_ID     = MID.ITEM_ID
		       AND    MSO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		       AND    MSO.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		       AND    NVL(MID.OQC_FLAG, 'N') = 'Y'
		       AND   TRUNC(MSO.DUE_DATE) BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR},'YYYY-MM-DD') 
		       UNION ALL
		       SELECT MSO.CUSTOMER_PO_ID   
		            , MSO.CUSTOMER_PO_NO   
		            , MSO.SALES_ORDER_ID
		            , MOR.OQC_ID 
		            , MSO.ITEM_ID
		            , MID.ITEM_NAME
		            , MID.SPECIFICATION
		            , MSO.ORDER_QTY   
		            , MSO.SHIP_QTY    
		            , MSO.CANCEL_QTY  
		            , MOR.QTY        AS REMAIN_QTY 
		            , MSO.VENDOR_CD
		            , MSO.VENDOR_NAME
		            , TO_CHAR(MSO.DUE_DATE, 'YYYY-MM-DD') AS DUE_DATE
		            , MSO.MARKET_CD
		            , MSO.MARKET_NAME
		            , MSO.CURRENCY_CD
		            , MSO.CURRENCY_NAME
		            , MSO.DIVISION_CD
		            , MSO.COMPANY_CD
		            , MOR.QTY 
		       FROM   MOM_SALES_ORDER_V MSO
		            , MOM_ITEM_DEFINITION MID
		            , MOM_OQC_RESULT_MST MOR
		       WHERE  MSO.DIVISION_CD = MID.DIVISION_CD
		       AND    MSO.COMPANY_CD  = MID.COMPANY_CD
		       AND    MSO.ITEM_ID     = MID.ITEM_ID
		       AND    MSO.DIVISION_CD = MOR.DIVISION_CD
		       AND    MSO.COMPANY_CD  = MOR.COMPANY_CD
		       AND    MSO.SALES_ORDER_ID     = MOR.SALES_ORDER_ID
		       AND    MSO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		       AND    MSO.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		       AND    NVL(MID.OQC_FLAG, 'N') = 'Y'
		       AND    MOR.PASS_FLAG    = 'N'   
		       AND   TRUNC(MSO.DUE_DATE) BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR},'YYYY-MM-DD')  ) A
		WHERE  A.REMAIN_QTY > 0       
	    <if test="vendorCd != null and vendorCd != ''">
	     AND A.VENDOR_CD = #{vendorCd, jdbcType=VARCHAR}
	    </if>     
	    <if test="itemId != null and itemId != ''">
	     AND (A.ITEM_ID LIKE '%' || UPPER(#{itemId, jdbcType=VARCHAR}) || '%'
	     OR A.ITEM_NAME LIKE '%' || UPPER(#{itemId, jdbcType=VARCHAR}) || '%' )
	    </if>     
	    <if test="customerPoId != null and customerPoId != ''">
	     AND (A.CUSTOMER_PO_ID LIKE '%' || UPPER(#{customerPoId, jdbcType=VARCHAR}) || '%'
	     OR A.CUSTOMER_PO_NO LIKE '%' || UPPER(#{customerPoId, jdbcType=VARCHAR}) || '%' )
	    </if> 
	</select>
	
	<select id="get_productShippingPlanCheckHistDown_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT A.MEASURE_TYPE
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD,A.COMPANY_CD, 'MEASURE_TYPE', A.MEASURE_TYPE) FROM DUAL) AS MEASURE_TYPE_NAME
	     , A.GAUGE_METHOD  
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'GAUGE_METHOD', A.GAUGE_METHOD) FROM DUAL) AS GAUGE_METHOD_NAME
	     , A.MEASURE_SPEC 
	     , A.CHECK_METHOD  
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'CHECK_METHOD', A.GAUGE_METHOD) FROM DUAL) AS CHECK_METHOD_NAME
	     , A.MEASURE_METHOD  
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'MEASURE_METHOD', A.MEASURE_METHOD) FROM DUAL) AS MEASURE_METHOD_NAME
	     , DECODE(A.MEASURE_METHOD, 'COUNT', '', NVL(A.TARGET_TYPE, 'ALL')) AS    TARGET_TYPE
	     , A.TARGET
	     , A.USL
	     , A.LSL
	     , MR.ITEM_VALUE1
	     , MR.ITEM_VALUE2
	     , MR.ITEM_VALUE3
	     , MR.ITEM_VALUE4
	     , MR.ITEM_VALUE5
	     , A.SAMPLING_BASE
	     , CASE WHEN A.SAMPLE_CNT > A.OQC_QTY THEN A.OQC_QTY
	              ELSE A.SAMPLE_CNT END SAMPLE_CNT
	     , MR.DEFECT_QTY
	     , MR.JUDGMENT_ID
	     , DECODE(MR.JUDGMENT_ID, 'Y', #{MESSAGES30064, jdbcType=VARCHAR}, 'N', #{MESSAGES30063, jdbcType=VARCHAR}) AS JUDGMENT_NAME
	     , MR.PROCESS_DESCRIPTION  
	     , TO_CHAR(NVL(MR.HANDLING_TIME, TRUNC(MOM_COMMON_PKG.FN_GET_LOCAL_TIME(A.DIVISION_CD, A.COMPANY_CD))), 'YYYY-MM-DD')  AS HANDLING_TIME
	     , MR.REASON_CODE    
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'OQC_REASON_CODE', MR.REASON_CODE) FROM DUAL) AS REASON_NAME
	     , MR.DESCRIPTION    
	     , MR.DEFECT_BY       
	     , MR.PROBLEM_REASON  
	     , (SELECT CASE
	            WHEN (SELECT COUNT(*)
	             FROM MOM_FILE
	            WHERE ENTITY_ID = MR.DEFECT_RESULT_ID
	              AND USE_YN = 'Y'
	              AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	              AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}) > 0 THEN 'Y'
	            ELSE 'N'
	          END 
	          FROM DUAL ) AS IS_FILE
	      , MR.DEFECT_RESULT_ID  
	     , A.DIVISION_CD
	     , A.COMPANY_CD
	     , A.ITEM_ID
	     , A.SALES_ORDER_ID
	     , A.OQC_ID
	FROM   (SELECT MS.MEASURE_TYPE
	             , MS.GAUGE_METHOD
	             , MS.MEASURE_SPEC
	             , MS.CHECK_METHOD
	             , MS.MEASURE_METHOD
	             , MS.TARGET_TYPE
	             , MS.TARGET
	             , MS.USL
	             , MS.LSL
	             , MS.SEQ
	             , MS.SAMPLING_BASE
	             , MS.SAMPLE_CNT
	             , MO.DIVISION_CD
	             , MO.COMPANY_CD
	             , MO.ITEM_ID
	             , MO.SALES_ORDER_ID
	             , ''                     AS OQC_ID
	             , ${productQty}                     AS  OQC_QTY
	        FROM   MOM_SALES_ORDER MO
	             , MOM_MEASURE_SPEC MS
	        WHERE  MO.DIVISION_CD     = MS.DIVISION_CD
	        AND    MO.COMPANY_CD      = MS.COMPANY_CD
	        AND    MO.ITEM_ID         = MS.ITEM_ID 
	        AND    MS.MEASURE_TYPE = 'OQC'
	        AND    MO.DIVISION_CD     = #{divisionCd, jdbcType=VARCHAR}
	        AND    MO.COMPANY_CD      = #{companyCd, jdbcType=VARCHAR}
	        AND    MO.SALES_ORDER_ID  = #{salesOrderId, jdbcType=VARCHAR}
	        AND    #{oqcId, jdbcType=VARCHAR} IS NULL
	        UNION ALL 
	        SELECT MS.MEASURE_TYPE
	             , MS.GAUGE_METHOD
	             , MS.MEASURE_SPEC
	             , MS.CHECK_METHOD
	             , MS.MEASURE_METHOD
	             , MS.TARGET_TYPE
	             , MS.TARGET
	             , MS.USL
	             , MS.LSL
	             , MS.SEQ
	             , MS.SAMPLING_BASE
	             , MS.SAMPLE_CNT
	             , MO.DIVISION_CD
	             , MO.COMPANY_CD
	             , MO.ITEM_ID
	             , MO.SALES_ORDER_ID
	             , MT.OQC_ID                     AS OQC_ID
	             , MT.QTY                   AS  OQC_QTY
	        FROM   MOM_SALES_ORDER MO
	             , MOM_OQC_RESULT_MST MT
	             , MOM_MEASURE_SPEC MS
	        WHERE   MO.DIVISION_CD = MT.DIVISION_CD
	        AND    MO.COMPANY_CD      = MT.COMPANY_CD
	        AND    MO.SALES_ORDER_ID  = MT.SALES_ORDER_ID
	        AND    MO.DIVISION_CD     = MS.DIVISION_CD
	        AND    MO.COMPANY_CD      = MS.COMPANY_CD
	        AND    MO.ITEM_ID         = MS.ITEM_ID 
	        AND    MS.MEASURE_TYPE = 'OQC'
	        AND    MO.DIVISION_CD     = #{divisionCd, jdbcType=VARCHAR}
	        AND    MO.COMPANY_CD      = #{companyCd, jdbcType=VARCHAR}
	        AND    MO.SALES_ORDER_ID  = #{salesOrderId, jdbcType=VARCHAR}
	        AND    MT.OQC_ID          = #{oqcId, jdbcType=VARCHAR}) A
	     , MOM_DEFECT_RESULT MR
	WHERE  A.DIVISION_CD = MR.DIVISION_CD(+)
	AND    A.COMPANY_CD  = MR.COMPANY_CD(+)
	AND    A.GAUGE_METHOD = MR.GAUGE_METHOD(+)
	AND    A.MEASURE_TYPE = MR.MEASURE_TYPE(+)
	AND    A.SALES_ORDER_ID = MR.CUSTOMER_PO_ID(+)
	AND    A.OQC_ID         = MR.OQC_ID(+)
	ORDER BY A.SALES_ORDER_ID, A.OQC_ID, A.SEQ 
	</select>
	
	<delete id="remove_productShippingPlanCheckTemp" parameterType="java.util.HashMap">
		DELETE FROM MOM_OQC_UPLOAD
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	</delete>
	
	<insert id="create_productShippingPlanCheckTemp" parameterType="java.util.HashMap">
		INSERT INTO MOM_OQC_UPLOAD(
			DIVISION_CD,
			COMPANY_CD,
			MEASURE_TYPE,
			ITEM_ID,
			SALES_ORDER_ID,
			OQC_ID,
			GAUGE_METHOD,
			ITEM_VALUE1,
			ITEM_VALUE2,
			ITEM_VALUE3,
			ITEM_VALUE4,
			ITEM_VALUE5,
			HANDLING_TIME,
			PROCESS_DESCRIPTION,
			REASON_CODE,
			DESCRIPTION,
			PROBLEM_REASON,
			DEFECT_BY,
			DEFECT_RESULT_ID,
			BUTTON_TYPE,
			OQC_QTY
		)
		VALUES(
			#{divisionCd, jdbcType=VARCHAR},
			#{companyCd, jdbcType=VARCHAR},
			#{measureType, jdbcType=VARCHAR},
			#{itemId, jdbcType=VARCHAR},
			#{salesOrderId, jdbcType=VARCHAR},
			#{oqcId, jdbcType=VARCHAR},
			#{gaugeMethod, jdbcType=VARCHAR},
			#{itemValue1, jdbcType=VARCHAR},
			#{itemValue2, jdbcType=VARCHAR},
			#{itemValue3, jdbcType=VARCHAR},
			#{itemValue4, jdbcType=VARCHAR},
			#{itemValue5, jdbcType=VARCHAR},
			#{handlingTime, jdbcType=VARCHAR},
			#{processDescription, jdbcType=VARCHAR},
			#{reasonCode, jdbcType=VARCHAR},
			#{description, jdbcType=VARCHAR},
			#{problemReason, jdbcType=VARCHAR},
			#{defectBy, jdbcType=VARCHAR},
			#{defectResultId, jdbcType=VARCHAR},
			#{buttonType, jdbcType=VARCHAR},
			#{productQty, jdbcType=INTEGER}
		)
	</insert>
	
	<insert id="create_productShippingPlanCheck" statementType="CALLABLE">
	{
        CALL SP_MOM_QA_PKG.P_UPSERT_OQC (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{createBy, jdbcType=VARCHAR}
        )
    }
	</insert>
</mapper>