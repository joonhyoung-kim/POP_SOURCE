<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.shipping.customerOrderStockStatus">
	<select id="get_customerOrderStockStatus_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MO.DIVISION_CD
		     , MO.COMPANY_CD
		     , MO.ITEM_ID            
		     , MID.ITEM_NAME         
		     , MID.SPECIFICATION     
		     , TO_CHAR(MO.DUE_DATE, 'YYYY-MM-DD') AS DUE_DATE  
		     , MO.REMAIN_QTY                    
		     , MO.FROM_LOCATION  AS FROM_LOCATION_CD  
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MO.DIVISION_CD, MO.COMPANY_CD, MO.FROM_LOCATION)
		        FROM   DUAL )  AS FROM_LOCATION_NAME
		     , MSF.CURRENT_QTY                          
		     , MO.TO_LOCATION     AS TO_LOCATION_CD    
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MO.DIVISION_CD, MO.COMPANY_CD, MO.TO_LOCATION)
		        FROM   DUAL )  AS TO_LOCATION_NAME      
		     , MST.CURRENT_QTY AS CURRENT_QTY_TO                                        
		     , ''   AS DESCRIPTION     
		, ''  AS MOVE_QTY             
		FROM   (SELECT MO.DIVISION_CD
		             , MO.COMPANY_CD 
		             , MO.ITEM_ID
		             , MIN(MO.DUE_DATE) AS DUE_DATE
		             , SUM(MO.ORDER_QTY - NVL(MO.SHIP_QTY,0) - NVL(MO.CANCEL_QTY,0)) AS REMAIN_QTY
		             ,  #{fromLocation, jdbcType=VARCHAR}  AS FROM_LOCATION
		             ,  #{toLocation, jdbcType=VARCHAR}   AS TO_LOCATION     
		        FROM   MOM_SALES_ORDER_V MO
		        WHERE  MO.DIVISION_CD =  #{divisionCd, jdbcType=VARCHAR}
		        AND    MO.COMPANY_CD  =  #{companyCd, jdbcType=VARCHAR}
		        AND    MO.ORDER_STATE = 'N'
		        <if test="fromDate != null and formDate != ''">
		        AND    MO.DUE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		                           AND     TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		        </if>
		        <if test="itemName != null and itemName !=''">
		        AND    (UPPER(MO.ITEM_ID) LIKE UPPER('%' || #{itemName, jdbcType=VARCHAR} || '%') 
		       	 		OR UPPER(MO.ITEM_NAME) LIKE UPPER('%' || #{itemName, jdbcType=VARCHAR} || '%'))                 
		        </if>
		        GROUP BY MO.DIVISION_CD
		               , MO.COMPANY_CD
		               , MO.ITEM_ID  ) MO
		     , MOM_ITEM_DEFINITION MID
		     , MOM_ITEM_STOCK MSF
		     , MOM_ITEM_STOCK MST
		WHERE  MO.DIVISION_CD   = MID.DIVISION_CD(+)
		AND    MO.COMPANY_CD    = MID.COMPANY_CD(+)
		AND    MO.ITEM_ID       = MID.ITEM_ID(+)
		AND    MO.DIVISION_CD   = MSF.DIVISION_CD(+)
		AND    MO.COMPANY_CD    = MSF.COMPANY_CD(+)
		AND    MO.ITEM_ID       = MSF.ITEM_ID(+)   
		AND    MO.FROM_LOCATION = MSF.LOCATION_CD(+)              
		AND    MO.DIVISION_CD   = MST.DIVISION_CD(+)
		AND    MO.COMPANY_CD    = MST.COMPANY_CD(+)
		AND    MO.ITEM_ID       = MST.ITEM_ID(+)   
		AND    MO.TO_LOCATION = MST.LOCATION_CD(+)  
		<if test="fromLocation != null and fromLocation !=''">
        AND 	MO.FROM_LOCATION = #{fromLocation, jdbcType=VARCHAR}
        </if>
	</select>
	
	<!-- 상세조회 -->
	<select id="get_customerOrderStockStatusDetail_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT MSO.SALES_ORDER_ID
	     , MSO.VENDOR_CD
	     , MSO.VENDOR_NAME
	     , MSO.DESTINATION_CD 
	     , MSO.DESTINATION_NAME
	     , MSO.CUSTOMER_PO_ID
	     , MSO.CUSTOMER_PO_NO
	     , MSO.CUSTOMER_LINE_CD
	     ,  MSO.SALES_ITEM_ID     AS MODEL_SUFFIX  
	     , MSO.ITEM_ID
	     , TO_CHAR(MSO.DUE_DATE, 'YYYY-MM-DD') AS DUE_DATE
	     , MSO.ORDER_QTY
	     , NVL (MSO.SHIP_QTY, 0) SHIP_QTY
	     , NVL (MSO.CANCEL_QTY, 0) CANCEL_QTY 
	     , (MSO.ORDER_QTY - NVL (MSO.SHIP_QTY, 0) -  NVL (MSO.CANCEL_QTY, 0) ) REMAIN_QTY
	     , MSO.ORDER_STATE 
	     , MSO.ORDER_STATE_NAME 
	     , MSO.MARKET_CD 
	     , MSO.MARKET_NAME 
	     , MSO.CURRENCY_CD 
	     , MSO.CURRENCY_NAME 
	     , MSO.MIX_GROUP 
	FROM   MOM_SALES_ORDER_V MSO
	WHERE  MSO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	AND    MSO.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	AND    MSO.ORDER_STATE = 'N'
	<if test = "itemId != null and itemId != ''">
	AND    MSO.ITEM_ID = #{itemId, jdbcType=VARCHAR}
	</if>
	AND    MSO.DUE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		                           AND     TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	ORDER BY DUE_DATE
	</select>
	
	<insert id="create_customerOrderStockMove" statementType="CALLABLE">
	{
        CALL SP_MOM_SALES_ORDER_PKG.P_PRODUCT_MOVE( 
        			#{p_err_code, mode=OUT, jdbcType=VARCHAR}
           		   ,#{p_err_msg, mode=OUT, jdbcType=VARCHAR}
                   ,#{divisionCd, mode=IN, jdbcType=VARCHAR}
                   ,#{companyCd, mode=IN, jdbcType=VARCHAR}
                   ,#{moveType, mode=IN, jdbcType=VARCHAR}
                   ,#{itemId, mode=IN, jdbcType=VARCHAR}
                   ,#{fromLocationCd, mode=IN, jdbcType=VARCHAR}
                   ,#{toLocationCd, mode=IN, jdbcType=VARCHAR}
                   ,TO_DATE(SUBSTR(#{ioTime, mode=IN, jdbcType=VARCHAR},0,10), 'YYYY-MM-DD')
                   ,#{moveQty, mode=IN, jdbcType=INTEGER}
                   ,#{description, mode=IN, jdbcType=VARCHAR}
                   ,#{userId, mode=IN, jdbcType=VARCHAR}
                  )
    }
    </insert>
</mapper>