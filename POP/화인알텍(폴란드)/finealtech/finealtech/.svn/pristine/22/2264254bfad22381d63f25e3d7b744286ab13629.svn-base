<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.purchase.materialLedger.materialReleaseStatus">
	<select id="get_materialReleaseStatus_list" resultType="camelMap" parameterType="java.util.HashMap">
		<!--  
		SELECT I.WORK_ORDER_ID
		     , I.ITEM_ID
		     , D.ITEM_NAME
		     , D.SPECIFICATION
		     , D.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (I.DIVISION_CD
		                                              , I.COMPANY_CD
		                                              , 'ITEM_TYPE'
		                                              , D.ITEM_TYPE)
		          FROM DUAL)
		          AS ITEM_TYPE_NAME
		     , I.IO_CATEGORY
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (I.DIVISION_CD
		                                              , I.COMPANY_CD
		                                              , 'IO_CATEGORY'
		                                              , I.IO_CATEGORY)
		          FROM DUAL)
		          AS IO_CATEGORY_NAME
		     , I.PREV_LOCATION_CD AS IN_LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (I.DIVISION_CD
		                                                  , I.COMPANY_CD
		                                                  , I.PREV_LOCATION_CD)
		          FROM DUAL)
		          AS IN_LOCATION_NAME
		     , I.LOCATION_CD AS OUT_LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (I.DIVISION_CD
		                                                  , I.COMPANY_CD
		                                                  , I.LOCATION_CD)
		          FROM DUAL)
		          AS OUT_LOCATION_NAME
		     , (SELECT MOM_COMMON_PKG.FN_GET_CURRENT_STOCK (I.DIVISION_CD
		                                                  , I.COMPANY_CD
		                                                  , I.ITEM_ID
		                                                  , I.PREV_LOCATION_CD)
		          FROM DUAL)
		          AS CURRENT_QTY
		     , I.QTY AS ISSUE_QTY
		     , (IC.QTY * -1)  AS CANCEL_QTY
     		 , TO_CHAR(IC.IO_TIME, 'YYYY-MM-DD') AS CANCEL_DATE
		     , I.DESCRIPTION
		     , TO_CHAR (I.IO_TIME, 'YYYY-MM-DD') AS ISSUE_DATE
		     , D.CONVERSION_UNIT
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (I.DIVISION_CD
		                                              , I.COMPANY_CD
		                                              , 'ITEM_UNIT'
		                                              , D.CONVERSION_UNIT)
		          FROM DUAL)
		          AS CONVERSION_UNIT_NAME
		     , I.CONVERSION_UNIT_QTY
		     , I.ITEM_INPUT_ID AS REQUEST_GROUP_ID
		     , D.ITEM_GROUP_LARGE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (I.DIVISION_CD
		                                              , I.COMPANY_CD
		                                              , 'ITEM_GROUP_LARGE'
		                                              , D.ITEM_GROUP_LARGE)
		          FROM DUAL)
		          AS ITEM_GROUP_LARGE_NAME
		     , D.ITEM_GROUP_MEDIUM
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (I.DIVISION_CD
		                                              , I.COMPANY_CD
		                                              , 'ITEM_GROUP_MEDIUM'
		                                              , D.ITEM_GROUP_MEDIUM)
		          FROM DUAL)
		          AS ITEM_GROUP_MEDIUM_NAME
		     , I.PREV_STOCK_INOUT_ID 		AS FROM_INOUT_ID    
     		 , I.ITEM_STOCK_INOUT_ID 		AS TO_INOUT_ID
		  FROM MOM_ITEM_STOCK_INOUT I
		     , MOM_ITEM_DEFINITION D
		     , MOM_ITEM_STOCK_INOUT IC
		 WHERE I.DIVISION_CD = D.DIVISION_CD
	       AND I.COMPANY_CD = D.COMPANY_CD
	       AND I.ITEM_ID = D.ITEM_ID
	       AND I.DIVISION_CD = IC.DIVISION_CD(+)
		   AND I.COMPANY_CD  = IC.COMPANY_CD(+)
		   AND I.ITEM_STOCK_INOUT_ID = IC.PREV_STOCK_INOUT_ID(+)
	       AND I.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND I.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	       AND I.IO_TYPE = 'I'
	   <if test="stockType != null and stockType != ''">
		   <if test='stockType == "MAT"'>
	       AND EXISTS
	              (SELECT '*'
	                 FROM MOM_CODE MC
	                WHERE MC.DIVISION_CD = I.DIVISION_CD
                      AND MC.COMPANY_CD = I.COMPANY_CD
                      AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
                      AND MC.CODE_ID = I.IO_CATEGORY
                      AND MC.USE_YN = 'Y'
                      AND MC.ATTRIBUTE2 = 'Y')
           </if>
           <if test='stockType == "WO"'>
	       AND EXISTS
	              (SELECT '*'
	                 FROM MOM_CODE MC
	                WHERE MC.DIVISION_CD = I.DIVISION_CD
                      AND MC.COMPANY_CD = I.COMPANY_CD
                      AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
                      AND MC.CODE_ID = I.IO_CATEGORY
                      AND MC.USE_YN = 'Y'
                      AND MC.ATTRIBUTE3 = 'Y')
           </if>
       </if>
	   <if test="category != null and category != ''">
		AND  UPPER(D.ITEM_CATEGORY) LIKE '%' || UPPER(#{category, jdbcType=VARCHAR}) || '%'
	   </if>
	   <if test="itemName != null and itemName != ''">
		AND (UPPER(D.ITEM_ID) LIKE '%' || UPPER(#{itemName, jdbcType=VARCHAR}) || '%' 
		     OR UPPER(D.ITEM_NAME) LIKE '%' || UPPER(#{itemName, jdbcType=VARCHAR}) || '%')
	   </if>
	   <if test="type != null and type != ''">
		AND D.ITEM_TYPE = #{type, jdbcType=VARCHAR}
	   </if>
	   <if test="locationName != null and locationName != ''">
		AND I.PREV_LOCATION_CD = #{locationName, jdbcType=VARCHAR}
	   </if>
	   <if test="workOrder != null and workOrder != ''">
		AND UPPER(I.WORK_ORDER_ID) LIKE '%' || UPPER(#{workOrder, jdbcType=VARCHAR}) || '%'
	   </if>
	   <if test="fromDate != null and fromDate != ''">
		AND I.IO_TIME BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		                  AND (TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.999 / 24)
	   </if>
	   <if test="requestLocation != null and requestLocation != ''">
		AND I.LOCATION_CD = #{requestLocation, jdbcType=VARCHAR}
	   </if>
	   <if test="releaseType != null and releaseType != ''">
		AND I.IO_CATEGORY = #{releaseType, jdbcType=VARCHAR}
	   </if>
		ORDER BY I.IO_TIME DESC, I.WORK_ORDER_ID, I.ITEM_ID
		-->
		
      <!-- 불출없이 요청마감 한 데이터 조회 가능하도록 변경 190424-->
	  SELECT MR.WORK_ORDER_ID
	       , MR.ITEM_ID
	       , TO_CHAR(MR.REQUEST_DATE, 'yyyy-mm-dd') AS REQUEST_DATE
	       , D.ITEM_NAME
	       , D.SPECIFICATION
	       , D.ITEM_TYPE
	       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (D.DIVISION_CD
	                                                , D.COMPANY_CD
	                                                , 'ITEM_TYPE'
	                                                , D.ITEM_TYPE)
	            FROM DUAL)
	            AS ITEM_TYPE_NAME
	       , D.CONVERSION_UNIT
	       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (D.DIVISION_CD
	                                                , D.COMPANY_CD
	                                                , 'ITEM_UNIT'
	                                                , D.CONVERSION_UNIT)
	            FROM DUAL)
	            AS CONVERSION_UNIT_NAME
	       , D.ITEM_GROUP_LARGE
	       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (D.DIVISION_CD
	                                                , D.COMPANY_CD
	                                                , 'ITEM_GROUP_LARGE'
	                                                , D.ITEM_GROUP_LARGE)
	            FROM DUAL)
	            AS ITEM_GROUP_LARGE_NAME
	       , D.ITEM_GROUP_MEDIUM
	       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (D.DIVISION_CD
	                                                , D.COMPANY_CD
	                                                , 'ITEM_GROUP_MEDIUM'
	                                                , D.ITEM_GROUP_MEDIUM)
	            FROM DUAL)
	            AS ITEM_GROUP_MEDIUM_NAME
	       , MI.IO_CATEGORY
	       , MI.IO_CATEGORY_NAME
	       , NVL(MI.IN_LOCATION_CD, MR.IN_LOCATION_CD) AS IN_LOCATION_CD
           , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME( MR.DIVISION_CD
                                                        , MR.COMPANY_CD
                                                        , NVL(MI.IN_LOCATION_CD, MR.IN_LOCATION_CD)) 
                FROM DUAL) AS IN_LOCATION_NAME
           , NVL(MI.OUT_LOCATION_CD, MR.OUT_LOCATION_CD) AS OUT_LOCATION_CD
           , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME( MR.DIVISION_CD
                                                        , MR.COMPANY_CD
                                                        , NVL(MI.OUT_LOCATION_CD, MR.OUT_LOCATION_CD)) 
                FROM DUAL) AS OUT_LOCATION_NAME
	       , MI.CURRENT_QTY
	       , MR.REQUEST_QTY
	       , MI.ISSUE_QTY
	       , TO_CHAR (MI.IO_TIME, 'YYYY-MM-DD') AS ISSUE_DATE
	       , MI.CANCEL_QTY
	       , MI.CANCEL_DATE
	       , NVL(MI.DESCRIPTION, MR.DESCRIPTION) AS DESCRIPTION
	       , MI.CONVERSION_UNIT_QTY
	       , MI.REQUEST_GROUP_ID
	       , MI.FROM_INOUT_ID
	       , MI.TO_INOUT_ID
	       , NVL(MI.UPDATE_BY, MR.UPDATE_BY) AS UPDATE_BY
           , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME( MR.DIVISION_CD
                                                    , MR.COMPANY_CD
                                                    , NVL(MI.UPDATE_BY, MR.UPDATE_BY)
                                                    ) 
                FROM DUAL) AS UPDATE_USER_NAME
	    FROM MOM_MATERIAL_REQUEST MR 
	       , (SELECT I.WORK_ORDER_ID
	               , I.ITEM_ORDER_ID
	               , I.ITEM_ID
	               , I.IO_CATEGORY
	               , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (I.DIVISION_CD
	                                                        , I.COMPANY_CD
	                                                        , 'IO_CATEGORY'
	                                                        , I.IO_CATEGORY)
	                    FROM DUAL)
	                    AS IO_CATEGORY_NAME
	               , I.PREV_LOCATION_CD AS IN_LOCATION_CD
	               , I.LOCATION_CD AS OUT_LOCATION_CD
	               , (SELECT MOM_COMMON_PKG.FN_GET_CURRENT_STOCK (I.DIVISION_CD
	                                                            , I.COMPANY_CD
	                                                            , I.ITEM_ID
	                                                            , I.PREV_LOCATION_CD)
	                    FROM DUAL)
	                    AS CURRENT_QTY
	               , I.QTY AS ISSUE_QTY
	               , (IC.QTY * -1) AS CANCEL_QTY
	               , TO_CHAR (IC.IO_TIME, 'YYYY-MM-DD') AS CANCEL_DATE
	               , I.DESCRIPTION
	               , I.IO_TIME
	               , I.CONVERSION_UNIT_QTY
	               , I.ITEM_INPUT_ID AS REQUEST_GROUP_ID
	               , I.PREV_STOCK_INOUT_ID AS FROM_INOUT_ID
	               , I.ITEM_STOCK_INOUT_ID AS TO_INOUT_ID
	               , NVL(IC.UPDATE_BY, I.UPDATE_BY) AS UPDATE_BY
	            FROM MOM_ITEM_STOCK_INOUT I
	               , MOM_ITEM_STOCK_INOUT IC
	           WHERE I.DIVISION_CD = IC.DIVISION_CD(+)
	             AND I.COMPANY_CD = IC.COMPANY_CD(+)
	             AND I.ITEM_STOCK_INOUT_ID = IC.PREV_STOCK_INOUT_ID(+)
	             AND I.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	             AND I.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	             AND I.IO_TYPE = 'I'
		       <if test="stockType != null and stockType != ''">
		           <if test="stockType == 'MAT'">
		           AND EXISTS
		                  (SELECT '*'
		                     FROM MOM_CODE MC
		                    WHERE MC.DIVISION_CD = I.DIVISION_CD
		                      AND MC.COMPANY_CD = I.COMPANY_CD
		                      AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
		                      AND MC.CODE_ID = I.IO_CATEGORY
		                      AND MC.USE_YN = 'Y'
		                      AND MC.ATTRIBUTE2 = 'Y')
		           </if>
		           <if test="stockType == 'WO'">
		           AND EXISTS
		                  (SELECT '*'
		                     FROM MOM_CODE MC
		                    WHERE MC.DIVISION_CD = I.DIVISION_CD
		                      AND MC.COMPANY_CD = I.COMPANY_CD
		                      AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
		                      AND MC.CODE_ID = I.IO_CATEGORY
		                      AND MC.USE_YN = 'Y'
		                      AND MC.ATTRIBUTE3 = 'Y')
		           </if>
		       </if>
	       ) MI
	     , MOM_ITEM_DEFINITION D
	 WHERE MR.WORK_ORDER_ID = MI.WORK_ORDER_ID(+)
	   AND MR.ITEM_ID = MI.ITEM_ID(+)
	   AND MR.MATERIAL_REQUEST_ID = MI.ITEM_ORDER_ID(+)
	   AND MR.DIVISION_CD = D.DIVISION_CD
	   AND MR.COMPANY_CD = D.COMPANY_CD
	   AND MR.ITEM_ID = D.ITEM_ID
	   AND D.USE_YN = 'Y'
	   <if test="stockType != null and stockType != ''">
            <if test="stockType == 'MAT'">
            AND D.ITEM_TYPE IN (SELECT CODE_ID FROM MOM_CODE 
                                 WHERE DIVISION_CD = D.DIVISION_CD 
                                   AND COMPANY_CD = D.COMPANY_CD 
                                   AND CODE_CLASS_ID = 'ITEM_TYPE' 
                                   AND ATTRIBUTE1 = 'Y' 
                                   AND USE_YN = 'Y')
            </if>
            <if test="stockType == 'WO'">
            AND D.ITEM_TYPE IN (SELECT CODE_ID FROM MOM_CODE 
                                 WHERE DIVISION_CD = D.DIVISION_CD 
                                   AND COMPANY_CD = D.COMPANY_CD 
                                   AND CODE_CLASS_ID = 'ITEM_TYPE' 
                                   AND ATTRIBUTE2 = 'Y' 
                                   AND USE_YN = 'Y')
            </if>
       </if>
	   AND (MR.REQUEST_STATE = 'R' OR MI.FROM_INOUT_ID IS NOT NULL)
       <if test="itemName != null and itemName != ''">
        AND (D.ITEM_ID LIKE '%' || UPPER(#{itemName, jdbcType=VARCHAR}) || '%' 
             OR UPPER(D.ITEM_NAME) LIKE '%' || UPPER(#{itemName, jdbcType=VARCHAR}) || '%')
       </if>
       <if test="type != null and type != ''">
        AND D.ITEM_TYPE = #{type, jdbcType=VARCHAR}
       </if>
       <if test="locationName != null and locationName != ''">
        AND MI.IN_LOCATION_CD = #{locationName, jdbcType=VARCHAR}
       </if>
       <if test="workOrder != null and workOrder != ''">
        AND MR.WORK_ORDER_ID LIKE '%' || UPPER(#{workOrder, jdbcType=VARCHAR}) || '%'
       </if>
       <if test="requestLocation != null and requestLocation != ''">
        AND MI.OUT_LOCATION_CD = #{requestLocation, jdbcType=VARCHAR}
       </if>
       <if test="releaseType != null and releaseType != ''">
        AND MI.IO_CATEGORY = #{releaseType, jdbcType=VARCHAR}
       </if>
       <if test="searchDate != null and searchDate != ''">
	       <choose>
		       <when test="searchDate == 'REQUEST_TIME'">
		        AND TRUNC(MR.REQUEST_DATE) BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		                                       AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		    ORDER BY MR.REQUEST_DATE DESC, MR.WORK_ORDER_ID, MR.ITEM_ID
		       </when>
		       <otherwise>
		        AND TRUNC(MI.IO_TIME) BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		                                  AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		    ORDER BY MI.IO_TIME DESC, MR.WORK_ORDER_ID, MR.ITEM_ID
		       </otherwise>
		   </choose>
	   </if>
	</select>
	
	<select id="get_materialReleasePrintStatus_list" resultType="camelMap" parameterType="java.util.HashMap">
		WITH TEMP1 AS (
			SELECT TO_CHAR(MI.IO_TIME, 'YYYY-MM-DD') AS 출고일자
			     , TO_CHAR(MI.IO_TIME, 'YYYY-MM-DD') AS 출고일자하단
			     , MI.ITEM_INPUT_ID AS 출고번호
			     , MI.UPDATE_BY  AS USER_ID
			     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MI.DIVISION_CD, MI.COMPANY_CD, MI.LOCATION_CD) FROM DUAL) AS 거래선 
			     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD, MI.COMPANY_CD, 'DEPT_CD', TU.DEPT_CD) 
			        FROM   TU_USER TU
			        WHERE  TU.DIVISION_CD = MI.DIVISION_CD
			        AND    TU.COMPANY_CD = MI.COMPANY_CD
			        AND    TU.EMP_NO     = MI.UPDATE_BY )  AS 소속
			     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MI.DIVISION_CD, MI.COMPANY_CD, MI.UPDATE_BY) FROM DUAL) AS 성명
			     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MI.DIVISION_CD, MI.COMPANY_CD, 'IO_CATEGORY', MI.IO_CATEGORY) FROM DUAL) AS 출고구분
			     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD, MI.COMPANY_CD, 'ITEM_TYPE', MD.ITEM_TYPE) FROM DUAL) AS 종류
			     , '*' || MI.ITEM_INPUT_ID || '*' AS 바코드
			     , MI.ITEM_ID || '/' || MD.ITEM_NAME AS PLIST_ITEM
			     , TO_CHAR(MI.QTY)    AS PLIST_QTY
			     , ''                 AS PLIST_UNIT_PRICE
			     , ''                 AS PLIST_DESCRIPTION
			     , (SELECT MV.VENDOR_NAME
                      FROM MOM_VENDOR MV
                     WHERE MV.VENDOR_CD = MI.DIVISION_CD
                       AND MV.COMPANY_CD = MI.COMPANY_CD) AS COMPANY_NAME
			     , MI.DIVISION_CD
                 , MI.COMPANY_CD
                 , MI.ITEM_STOCK_INOUT_ID
                 , MI.ITEM_INPUT_ID
                 , MI.IO_TIME
                 , MI.WORK_ORDER_ID
                 , MI.ITEM_ID
			FROM   MOM_ITEM_STOCK_INOUT MI
			     , MOM_ITEM_DEFINITION MD
			WHERE  MI.DIVISION_CD = MD.DIVISION_CD
			AND    MI.COMPANY_CD  = MD.COMPANY_CD
			AND    MI.ITEM_ID     = MD.ITEM_ID
			AND    MI.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			AND    MI.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
			AND    MI.ITEM_INPUT_ID IN (${requestGroupIds})
			AND    MI.IO_TYPE = 'I'
			<if test="stockType != null and stockType != ''">
			    <if test="stockType == 'MAT'">
		        AND EXISTS
		              (SELECT '*'
		                 FROM MOM_CODE MC
		                WHERE MC.DIVISION_CD = MI.DIVISION_CD
	                      AND MC.COMPANY_CD = MI.COMPANY_CD
	                      AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
	                      AND MC.CODE_ID = MI.IO_CATEGORY
	                      AND MC.USE_YN = 'Y'
	                      AND MC.ATTRIBUTE2 = 'Y')
	            </if>
	            <if test="stockType == 'WO'">
		        AND EXISTS
		              (SELECT '*'
		                 FROM MOM_CODE MC
		                WHERE MC.DIVISION_CD = MI.DIVISION_CD
	                      AND MC.COMPANY_CD = MI.COMPANY_CD
	                      AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
	                      AND MC.CODE_ID = MI.IO_CATEGORY
	                      AND MC.USE_YN = 'Y'
	                      AND MC.ATTRIBUTE3 = 'Y')
	            </if>
            </if>
			AND    NOT EXISTS (SELECT '*'
			                   FROM   MOM_ITEM_STOCK_INOUT B
			                   WHERE  B.DIVISION_CD = MI.DIVISION_CD
			                   AND    B.COMPANY_CD  = MI.COMPANY_CD
			                   AND	  B.IO_TYPE = 'I'
			                   AND    B.PREV_STOCK_INOUT_ID = MI.ITEM_STOCK_INOUT_ID)
			)
		SELECT A.*
		     , CASE WHEN MOD(PLIST_CELLROW, C.LIST_ALLCOUNT) = 1 THEN (CEIL(PLIST_CELLROW / C.LIST_ALLCOUNT)) || '/' || (CEIL(GROUP_COUNT / C.LIST_ALLCOUNT)) 
       		   ELSE '' END AS PLIST_PAGING
		  FROM (SELECT A.*, ROW_NUMBER() OVER(PARTITION BY A.ITEM_INPUT_ID ORDER BY A.IO_TIME, A.WORK_ORDER_ID, A.ITEM_ID) AS PLIST_CELLROW
		  			 , COUNT(*) OVER(PARTITION BY A.ITEM_INPUT_ID) AS GROUP_COUNT
		          FROM TEMP1 A
		             , MOM_ITEM_STOCK_INOUT B
		         WHERE A.DIVISION_CD = B.DIVISION_CD
		           AND A.COMPANY_CD = B.COMPANY_CD
		           AND A.ITEM_STOCK_INOUT_ID = B.ITEM_STOCK_INOUT_ID) A
		     , (SELECT LIST_ALLCOUNT
		          FROM MOM_EXCEL
		         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		           AND EXCEL_ID = #{excelId, jdbcType=VARCHAR}) C
	</select>
	
	<select id="get_materialReleasePrintStatusCount_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT COUNT(*) AS ROW_COUNT
		  FROM MOM_ITEM_STOCK_INOUT A
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND A.ITEM_INPUT_ID IN (${requestGroupIds})
		   <if test="stockType != null and stockType != ''">
			    <if test="stockType == 'MAT'">
		        AND EXISTS
		              (SELECT '*'
		                 FROM MOM_CODE C
		                WHERE C.DIVISION_CD = A.DIVISION_CD
	                      AND C.COMPANY_CD = A.COMPANY_CD
	                      AND C.CODE_CLASS_ID = 'IO_CATEGORY'
	                      AND C.CODE_ID = A.IO_CATEGORY
	                      AND C.USE_YN = 'Y'
	                      AND C.ATTRIBUTE2 = 'Y')
	            </if>
	            <if test="stockType == 'WO'">
		        AND EXISTS
		              (SELECT '*'
		                 FROM MOM_CODE C
		                WHERE C.DIVISION_CD = A.DIVISION_CD
	                      AND C.COMPANY_CD = A.COMPANY_CD
	                      AND C.CODE_CLASS_ID = 'IO_CATEGORY'
	                      AND C.CODE_ID = A.IO_CATEGORY
	                      AND C.USE_YN = 'Y'
	                      AND C.ATTRIBUTE3 = 'Y')
	            </if>
           </if>
		   AND NOT EXISTS (SELECT '*'
		   					 FROM MOM_ITEM_STOCK_INOUT IC
		   					WHERE IC.DIVISION_CD = A.DIVISION_CD
		   					  AND IC.COMPANY_CD = A.COMPANY_CD
		   					  AND IC.IO_TYPE = 'I'
		   					  AND IC.PREV_STOCK_INOUT_ID = A.ITEM_STOCK_INOUT_ID)
	</select>
	
</mapper>