<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.plan.order.B2BIifpo">
	<select id="get_b2biIfPo_list" resultType="camelMap" parameterType="java.util.HashMap">
	WITH TEMP1 AS (
	    SELECT SEND_SEQ
			 , WORK_DATE
			 , ORGANIZATION_ID
			 , ORGANIZATION_CODE
			 , VENDOR_SITE_ID
			 , VENDOR_SITE_CODE
			 , VENDOR_NAME
			 , NEED_BY_DATE
			 , ORDER_DATE
			 , ORDER_TYPE
			 , ORDER_TYPE_DESC
			 , DELIVERY_TYPE_CODE
			 , REMAINED_QTY_STATUS_CODE
			 , REMAINED_QTY
			 , CANCEL_FLAG
			 , SUBINVENTORY_CODE
			 , SUBINVENTORY_NAME
			 , ARRIVAL_VENDOR_SITE_ID
			 , ARRIVAL_VENDOR_SITE_CODE
			 , ARRIVAL_VENDOR_SITE_NAME
			 , WIP_ENTITY_ID
			 , WIP_ENTITY_NAME
			 , LINE_CODE
			 , PART_NO
			 , PO_NO
			 , LINE_LOCATION_ID
			 , ORDER_QTY
			 , DEPARTURE_QTY
			 , RECEIVING_QTY
			 , CANCEL_QTY
			 , MARKET_CODE
			 , ITEM_TYPE
			 , ITEM_DESC
			 , ITEM_SPEC
			 , UOM_CODE
			 , CURRENCY_CODE
			 , UNIT_PRICE
			 , FIXED_LOT_MULTIPLIER
			 , REQUIRED_QTY
			 , PER_ASSEMBLY_QTY
			 , ISSUE_QTY
			 , ASSEMBLY_ITEM_ID
			 , ASSEMBLY_PART_NO
			 , REQUESTOR_ID
			 , REQUESTOR_NAME
			 , REQUEST_DEPARTMENT_CODE
			 , MIX_INFO
			 , VMI_FLAG
			 , INVENTORY_ITEM_ID
			 , MODEL_SUFFIX_CODE
			 , CANCEL_REQUEST
			 , CANCEL_REQUEST_DATE
			 , CANCEL_REPLY
			 , ENTRY_REASON
			 , BASIC_AMOUNT
			 , HSMS_STATUS_FLAG
			 , ECO_NO
			 , IF_ATTRIBUTE1
			 , IF_ATTRIBUTE2
			 , IF_ATTRIBUTE3
			 , IF_ATTRIBUTE4
			 , IF_ATTRIBUTE5
			 , IF_ATTRIBUTE6
			 , IF_ATTRIBUTE7
			 , IF_ATTRIBUTE8
			 , IF_ATTRIBUTE9
			 , IF_ATTRIBUTE10
			 , IF_ATTRIBUTE11
			 , IF_ATTRIBUTE12
			 , IF_ATTRIBUTE13
			 , IF_ATTRIBUTE14
			 , IF_ATTRIBUTE15
			 , IF_ATTRIBUTE16
			 , IF_ATTRIBUTE17
			 , IF_ATTRIBUTE18
			 , IF_ATTRIBUTE19
			 , IF_ATTRIBUTE20
			 , TRANSFER_FLAG
			 , TRANSFER_DATE
          FROM tu_eai.if_lge_sup_domestic_open_po
         WHERE 1=1
        <if test="orderSeq == 'CREATE_DATE'">
		   AND WORK_DATE BETWEEN TO_NUMBER(REPLACE(#{fromDate, jdbcType=VARCHAR}, '-')) AND TO_NUMBER(REPLACE(#{toDate, jdbcType=VARCHAR}, '-'))
        </if>
        <if test="orderSeq == 'DUE_DATE'">
           AND NEED_BY_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND (TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')+ 23.999 / 24)
        </if>   
        <if test="orderSeq == 'ORDER_DATE'">
           AND ORDER_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND (TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')+ 23.999 / 24)
        </if>       
        <if test="workOrderName != null and workOrderName != ''">
           AND UPPER(WIP_ENTITY_NAME) LIKE UPPER('%' || #{workOrderName, jdbcType=VARCHAR} || '%')
        </if>                       
        <if test="purchaseOrderNum != null and purchaseOrderNum != ''">
           AND PO_NO LIKE '%' ||#{purchaseOrderNum, jdbcType=VARCHAR} || '%'
        </if>
        <if test="manufacturingLineCode != null and manufacturingLineCode != ''">
           AND UPPER(LINE_CODE) LIKE UPPER('%' || #{manufacturingLineCode, jdbcType=VARCHAR} || '%')
        </if>
        <if test="partName != null and partName != ''">
           AND UPPER(PART_NO) LIKE UPPER('%' || #{partName, jdbcType=VARCHAR} || '%')
        </if>
        <if test="organizationCode != null and organizationCode != ''">
	       AND ORGANIZATION_CODE = #{organizationCode, jdbcType=VARCHAR}
	    </if>
           AND VENDOR_SITE_CODE = (SELECT P.B2BI_VENDOR_CD 
                                   FROM   MOM_PARAMETER P
                                   WHERE  P.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR})
         ORDER BY SEND_SEQ DESC, VENDOR_SITE_CODE, WIP_ENTITY_ID)
      SELECT A.*
           , B.ROW_COUNT
        FROM (SELECT A.*
                 , ROWNUM GRIDROW
              FROM TEMP1 A) A
         , (SELECT COUNT(*) ROW_COUNT
              FROM TEMP1) B 
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		 WHERE GRIDROW BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
	    </if>        
	</select>
	
	<select id="get_b2biIfPoCount_list" resultType="camelMap" parameterType="java.util.HashMap">
	    SELECT count(*) AS ROW_COUNT
          FROM tu_eai.if_lge_sup_domestic_open_po
         WHERE 1=1
        <if test="orderSeq == 'CREATE_DATE'">
           AND WORK_DATE BETWEEN TO_NUMBER(REPLACE(#{fromDate, jdbcType=VARCHAR}, '-')) AND TO_NUMBER(REPLACE(#{toDate, jdbcType=VARCHAR}, '-'))
        </if>
        <if test="orderSeq == 'DUE_DATE'">
           AND NEED_BY_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND (TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')+ 23.999 / 24)
        </if>   
        <if test="orderSeq == 'ORDER_DATE'">
           AND ORDER_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND (TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')+ 23.999 / 24)
        </if>       
        <if test="workOrderName != null and workOrderName != ''">
           AND UPPER(WIP_ENTITY_NAME) LIKE UPPER('%' || #{workOrderName, jdbcType=VARCHAR} || '%')
        </if>                       
        <if test="purchaseOrderNum != null and purchaseOrderNum != ''">
           AND PO_NO LIKE '%' ||#{purchaseOrderNum, jdbcType=VARCHAR} || '%'
        </if>
        <if test="manufacturingLineCode != null and manufacturingLineCode != ''">
           AND UPPER(LINE_CODE) LIKE UPPER('%' || #{manufacturingLineCode, jdbcType=VARCHAR} || '%')
        </if>
        <if test="partName != null and partName != ''">
           AND UPPER(PART_NO) LIKE UPPER('%' || #{partName, jdbcType=VARCHAR} || '%')
        </if>
        <if test="organizationCode != null and organizationCode != ''">
	       AND ORGANIZATION_CODE = #{organizationCode, jdbcType=VARCHAR}
	    </if>
	       AND VENDOR_SITE_CODE = (SELECT P.B2BI_VENDOR_CD
	                                 FROM MOM_PARAMETER P
	                                WHERE P.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR})
	</select>
	
	<insert id="create_b2biIfPo" statementType="CALLABLE">
	{
        CALL MOM_B2BI.CREATE_B2BI_PO (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{userId, mode=IN, jdbcType=VARCHAR}
        )
    }
    </insert>

</mapper>