<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.plan.order.B2BIifvrf">
	<select id="get_b2biIfVrf_list" resultType="camelMap" parameterType="java.util.HashMap">
		WITH C_PLAN AS 
               (SELECT A.WORK_ORDER_NAME  AS WIP_ENTITY_NAME
                     , A.PART_NO          AS MODEL_SUFFIX 
                     , TO_CHAR(A.PRODUCTION_START_DATE, 'YYYY-MM-DD') AS PRODUCTION_START_DATE
                     , A.TOTAL_QTY 
                     , A.PLAN_QTY
                     , A.REMAINED_QTY     AS PRODUCTION_REMAINED_QTY
                     , B.PO_NO
                     , B.PART_NO
                     , B.ORDER_QTY
                     , B.CANCEL_FLAG
                     , A.DIVISION_CD
                FROM   MOM_LGE_B2B_PRODUCT_PLAN A
                     , MOM_LGE_B2B_PO_INFO B
                WHERE  A.DIVISION_CD = B.DIVISION_CD(+)
                AND    A.WORK_ORDER_NAME  = B.WIP_ENTITY_NAME(+)
                AND    A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
               <if test="fromDate != null and fromDate != ''">
                AND    A.PRODUCTION_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR},'YYYY-MM-DD')
               </if>
               <if test="modelSuffix != null and modelSuffix != ''">
		        AND   UPPER(A.PART_NO) LIKE '%'|| UPPER(#{modelSuffix, jdbcType=VARCHAR}) ||'%'
		       </if>  
               <if test="PoNo != null and PoNo != ''">
		        AND   UPPER(B.PO_NO) LIKE '%'|| UPPER(#{PoNo, jdbcType=VARCHAR}) ||'%'
		       </if>
		       <if test="itemId != null and itemId != ''">
		        AND   UPPER(B.PART_NO) LIKE '%'|| UPPER(#{itemId, jdbcType=VARCHAR}) ||'%'
		       </if>  
		       <if test="customerPoId != null and customerPoId != ''">
		        AND   UPPER(A.WORK_ORDER_NAME) LIKE '%'|| UPPER(#{customerPoId, jdbcType=VARCHAR}) ||'%'
		       </if>
               ),
       TEMP1 AS (
            SELECT A.WIP_ENTITY_NAME
                 , A.MODEL_SUFFIX
                 , A.PRODUCTION_START_DATE
                 , A.PLAN_QTY
                 , A.PRODUCTION_REMAINED_QTY
                 , A.PO_NO
                 , A.PART_NO
                 , A.CANCEL_FLAG
                 , A.DEPARTURE_NUMBER
                 , A.DEPARTURE_STATUS
                 , A.DEPARTURE_QTY
                 , R.RECEIVING_DATE
                 , R.RECEIVING_QUANTITY
                 , R.RECEVING_STATS
                 , NVL((SELECT 'Y'
	                    FROM   MOM_PRODUCT_CLASS_REL P
	                    WHERE  P.DIVISION_CD = A.DIVISION_CD
	                    AND    P.PRODUCT_CLASS_ID = A.MODEL_SUFFIX
	                    AND    ROWNUM = 1), 'N')  AS MODEL_EXISTS_FLAG
                 , NVL((SELECT 'Y'
	                    FROM   MOM_ITEM_DEFINITION D
	                    WHERE  D.DIVISION_CD = A.DIVISION_CD
	                    AND    D.ITEM_ID = A.PART_NO
	                    AND    ROWNUM = 1), 'N')  AS ITEM_EXISTS_FLAG
                 , CASE WHEN S.SALES_ORDER_ID IS NOT NULL THEN 'Y' ELSE 'N' END AS AAA
            FROM   (SELECT C.*
                         , D.DEPARTURE_NUMBER
                         , D.DEPARTURE_STATUS
                         , D.DEPARTURE_QTY
                    FROM   C_PLAN C
                         , MOM_LGE_B2B_DEPARTURE D
                    WHERE C.DIVISION_CD = D.DIVISION_CD(+)
                    AND   C.PO_NO   = D.PO_NO (+)
                    ) A
                 ,  MOM_B2BI_RECEIVING_V R
                 ,  MOM_SALES_ORDER S
            WHERE  A.DIVISION_CD = R.DIVISION_CD(+)
            AND    A.PO_NO   = R.PURCHASE_ORDER_NO(+)
            AND    A.DEPARTURE_NUMBER = R.DEPARTURE_NUMBER(+)
            AND    A.DIVISION_CD = S.DIVISION_CD(+)
            AND    A.PO_NO = S.CUSTOMER_PO_NO(+)
            AND NOT EXISTS (SELECT '*'
	                                FROM MOM_PRODUCT_CLASS_REL_EXPT PE
	                               WHERE A.DIVISION_CD = PE.DIVISION_CD
	                                 AND A.MODEL_SUFFIX = PE.PRODUCT_CLASS_ID 
	                                 AND PE.USE_YN = 'Y')
           <if test="departureNum != null and departureNum != ''">
	        AND   UPPER(A.DEPARTURE_NUMBER) LIKE '%'|| UPPER(#{departureNum, jdbcType=VARCHAR}) ||'%'
	       </if>
            ORDER BY A.WIP_ENTITY_NAME, A.PO_NO, A.DEPARTURE_NUMBER)
      SELECT A.*
           , B.ROW_COUNT
      FROM (SELECT A.*
                 , ROWNUM GRIDROW
              FROM TEMP1 A) A
         , (SELECT COUNT(*) ROW_COUNT
              FROM TEMP1) B 
        <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
         WHERE GRIDROW BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
        </if>
	</select>
	
	
	<select id="get_b2biIfVrfCount_list" resultType="camelMap" parameterType="java.util.HashMap">
        WITH C_PLAN AS 
               (SELECT A.WORK_ORDER_NAME  AS WIP_ENTITY_NAME
                     , A.PART_NO          AS MODEL_SUFFIX 
                     , TO_CHAR(A.PRODUCTION_START_DATE, 'YYYY-MM-DD') AS PRODUCTION_START_DATE
                     , A.TOTAL_QTY 
                     , A.PLAN_QTY
                     , A.REMAINED_QTY     AS PRODUCTION_REMAINED_QTY
                     , B.PO_NO
                     , B.PART_NO
                     , B.ORDER_QTY
                     , B.CANCEL_FLAG
                     , A.DIVISION_CD
                FROM   MOM_LGE_B2B_PRODUCT_PLAN A
                     , MOM_LGE_B2B_PO_INFO B
                WHERE  A.DIVISION_CD = B.DIVISION_CD(+)
                AND    A.WORK_ORDER_NAME  = B.WIP_ENTITY_NAME(+)
                AND    A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
               <if test="fromDate != null and fromDate != ''">
                AND    A.PRODUCTION_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR},'YYYY-MM-DD')
               </if>
               <if test="modelSuffix != null and modelSuffix != ''">
                AND   UPPER(A.PART_NO) LIKE '%'|| UPPER(#{modelSuffix, jdbcType=VARCHAR}) ||'%'
               </if>  
               <if test="PoNo != null and PoNo != ''">
                AND   UPPER(B.PO_NO) LIKE '%'|| UPPER(#{PoNo, jdbcType=VARCHAR}) ||'%'
               </if>
               <if test="itemId != null and itemId != ''">
                AND   UPPER(B.PART_NO) LIKE '%'|| UPPER(#{itemId, jdbcType=VARCHAR}) ||'%'
               </if>  
               <if test="customerPoId != null and customerPoId != ''">
                AND   UPPER(A.WORK_ORDER_NAME) LIKE '%'|| UPPER(#{customerPoId, jdbcType=VARCHAR}) ||'%'
               </if>
               )
            SELECT count(*) AS ROW_COUNT
            FROM   (SELECT C.*
                         , D.DEPARTURE_NUMBER
                         , D.DEPARTURE_STATUS
                         , D.DEPARTURE_QTY
                    FROM   C_PLAN C
                         , MOM_LGE_B2B_DEPARTURE D
                    WHERE C.DIVISION_CD = D.DIVISION_CD(+)
                    AND   C.PO_NO   = D.PO_NO (+)
                    ) A
                 ,  MOM_B2BI_RECEIVING_V R
                 ,  MOM_SALES_ORDER S
            WHERE  A.DIVISION_CD = R.DIVISION_CD(+)
            AND    A.PO_NO   = R.PURCHASE_ORDER_NO(+)
            AND    A.DEPARTURE_NUMBER = R.DEPARTURE_NUMBER(+)
            AND    A.DIVISION_CD = S.DIVISION_CD(+)
            AND    A.PO_NO = S.CUSTOMER_PO_NO(+)
           <if test="departureNum != null and departureNum != ''">
            AND   UPPER(A.DEPARTURE_NUMBER) LIKE '%'|| UPPER(#{departureNum, jdbcType=VARCHAR}) ||'%'
           </if>
    </select>
	
	<select id="get_b2biIfVrfGrid_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT COL_ID,
		       COL_NAME,
		       SUBSTR(COL_VALUE, INSTR(COL_VALUE, 'width:') + 6, INSTR(SUBSTR(COL_VALUE, INSTR(COL_VALUE, 'width:') + 6), ',') -1) WIDTH 
		FROM MOM_MENU_HEADER
		WHERE MENU_ID = #{menuId, jdbcType=VARCHAR}
		  AND GRID_ID = #{gridId, jdbcType=VARCHAR}    
		  AND IS_USABLE = 'Y'
		ORDER BY COL_SEQ 
	</select>

</mapper>