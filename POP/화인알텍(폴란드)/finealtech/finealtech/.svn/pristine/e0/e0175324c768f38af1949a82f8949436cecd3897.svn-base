<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.workOrder.workOrderBadResultHist">
	<select id="get_workOrderBadResultHist_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MI.DIVISION_CD
		     , MI.COMPANY_CD
		     , MI.WORK_ORDER_ID
		     , (SELECT MOM_COMMON_PKG.FN_GET_ITEM_NAME (MI.DIVISION_CD, MI.COMPANY_CD, MI.ITEM_ID) FROM DUAL) AS ITEM_NAME
		     , MI.ITEM_ID
		     , MO.RESOURCE_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_RESOURCE_NAME (MO.DIVISION_CD, MO.COMPANY_CD, MO.RESOURCE_CD) FROM DUAL) AS RESOURCE_NAME
		     , MI.PREV_LOCATION_CD   AS FROM_LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MI.DIVISION_CD, MI.COMPANY_CD, MI.PREV_LOCATION_CD)
		        FROM   DUAL)         AS FROM_LOCATION_NAME 
		     , MI.LOCATION_CD        AS TO_LOCATION_CD  
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MI.DIVISION_CD, MI.COMPANY_CD, MI.LOCATION_CD)
		        FROM   DUAL)         AS TO_LOCATION_NAME   
		     , TO_CHAR(MI.IO_TIME, 'YYYY-MM-DD')            AS BAD_DATE
		     , MI.REASON_CD          AS BAD_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD, MI.COMPANY_CD, 'WO_BAD_TYPE', MI.REASON_CD)
		        FROM   DUAL)         AS BAD_TYPE_NAME                                    
		     , MI.QTY                AS BAD_QTY
		     , MI.DESCRIPTION
		     , MIC.QTY               AS CANCEL_QTY
		     , TO_CHAR(MIC.IO_TIME, 'YYYY-MM-DD')          AS CANCEL_DATE
		     , TO_CHAR(MI.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE
		     , MI.UPDATE_BY
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MI.DIVISION_CD, MI.COMPANY_CD, MI.UPDATE_BY)
		        FROM   DUAL )  AS USER_NAME
		     , MI.ITEM_STOCK_INOUT_ID   AS TO_INOUT_ID
    		 , MI.PREV_STOCK_INOUT_ID   AS FROM_INOUT_ID
    		 , MIC.DESCRIPTION AS CANCEL_REASON
		FROM   MOM_ITEM_STOCK_INOUT MI
		     , MOM_ITEM_STOCK_INOUT MIC
		     , MOM_WORK_ORDER MO
		WHERE  MI.DIVISION_CD = MIC.DIVISION_CD(+)
		AND    MI.COMPANY_CD  = MIC.COMPANY_CD(+)
		AND    MI.DIVISION_CD = MO.DIVISION_CD(+)
		AND    MI.COMPANY_CD  = MO.COMPANY_CD(+)
		AND    MI.WORK_ORDER_ID = MO.WORK_ORDER_ID
		AND    MI.ITEM_STOCK_INOUT_ID = MIC.PREV_STOCK_INOUT_ID(+)
		AND    MI.DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}
		AND    MI.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
		AND    MI.IO_TYPE       = 'I'
		AND    MI.IO_CATEGORY IN ('P003', 'R005')
        AND    MI.ITEM_STOCK_TYPE = 'WD'
		<if test = "fromDate != null and fromDate != ''">
		AND TRUNC(MI.IO_TIME) BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		</if>
		<if test = "itemName != null and itemName != ''">
        AND MI.ITEM_ID LIKE '%' || UPPER(#{itemName, jdbcType=VARCHAR}) || '%'
        </if>
        <if test = "workOrder != null and workOrder != ''">
        AND MI.WORK_ORDER_ID LIKE '%' || UPPER(#{workOrder, jdbcType=VARCHAR}) || '%'
        </if>
        <if test = "badType != null and badType != ''">
        AND MI.REASON_CD = #{badType, jdbcType=VARCHAR}
        </if>
        <if test = "resource != null and resource != ''">
        AND MO.RESOURCE_CD = #{resource, jdbcType=VARCHAR}
        </if>
		ORDER BY MI.WORK_ORDER_ID, MI.ITEM_ID
	</select>
	
	  <insert id="create_workOrderBadResultHistCancel" statementType="CALLABLE">
    {
    	CALL SP_MOM_WORK_ORDER_PKG.P_CANCEL_WO_BAD ( 
		    #{p_err_code, mode=OUT, jdbcType=VARCHAR}
	      , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
	      , #{divisionCd, mode=IN, jdbcType=VARCHAR} 
	      , #{companyCd, mode=IN, jdbcType=VARCHAR}
	      , #{fromInoutId, mode=IN, jdbcType=VARCHAR}
	      , #{toInoutId, mode=IN, jdbcType=VARCHAR}
	      , #{cancelReason, mode=IN, jdbcType=VARCHAR}
	      , #{userId, mode=IN, jdbcType=VARCHAR}
        )
    }
    </insert>
    
</mapper>