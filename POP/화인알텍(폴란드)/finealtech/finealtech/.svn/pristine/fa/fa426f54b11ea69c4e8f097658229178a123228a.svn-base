<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.addition.dailySalesHist">
	<select id="get_dailySalesHist_list" resultType="camelMap" parameterType="java.util.HashMap">
		WITH TEMP1
	     AS (  SELECT NVL (ITEM_GROUP_MEDIUM, '9000') ITEM_GROUP_MEDIUM
	                , NVL (ITEM_GROUP_LARGE, 'FA9000') ITEM_GROUP_LARGE
<!-- 	                , TRUNC (SYSDATE) AS IO_TIME -->
	                , SUM (QTY) SUM_QTY
	                , SUM (INOUT_PRICE) SUM_AMT
	                , A.DIVISION_CD
	                , A.COMPANY_CD
	             FROM MOM_ITEM_STOCK_INOUT A, MOM_ITEM_DEFINITION MD
	            WHERE A.DIVISION_CD = MD.DIVISION_CD
	              AND A.COMPANY_CD = MD.COMPANY_CD
	              AND A.ITEM_ID = MD.ITEM_ID
	              AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	              AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	              AND A.IO_TYPE = 'I'
	              <if test = "toDate != null and toDate != ''">
	              AND IO_TIME BETWEEN TRUNC(TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'), 'MON')  
					  					AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	              </if>
	              AND A.IO_CATEGORY IN (SELECT MC.CODE_ID
	                                      FROM MOM_CODE MC
	                                     WHERE MC.DIVISION_CD = A.DIVISION_CD 
	                                       AND MC.COMPANY_CD = A.COMPANY_CD 
	                                       AND MC.CODE_CLASS_ID = 'IO_CATEGORY' 
	                                       AND MC.USE_YN = 'Y' 
	                                       AND MC.ATTRIBUTE13 = 'Y')
	              AND NOT EXISTS
	                     (SELECT '*'
	                        FROM MOM_ITEM_STOCK_INOUT IC
	                       WHERE IC.DIVISION_CD = A.DIVISION_CD 
	                         AND IC.COMPANY_CD = A.COMPANY_CD 
	                         AND IC.IO_TYPE = A.IO_TYPE 
	                         AND IC.PREV_STOCK_INOUT_ID = A.ITEM_STOCK_INOUT_ID)
	              <if test = "itemType != null and itemType != ''"> 
	              AND MD.ITEM_TYPE IN(${itemType})
	              </if>
	         GROUP BY NVL (ITEM_GROUP_MEDIUM, '9000'), NVL (ITEM_GROUP_LARGE, 'FA9000'), A.DIVISION_CD, A.COMPANY_CD)
	   , TEMP2
	     AS (  SELECT NVL (ITEM_GROUP_MEDIUM, '9000') ITEM_GROUP_MEDIUM
	                , NVL (ITEM_GROUP_LARGE, 'FA9000') ITEM_GROUP_LARGE
	                , SUM (A.QTY) AS QTY
	                , SUM (A.INOUT_PRICE) AS AMT
	                , MAX (A.IO_TIME) AS IO_TIME
	             FROM MOM_ITEM_STOCK_INOUT A, MOM_ITEM_DEFINITION MD
	            WHERE A.DIVISION_CD = MD.DIVISION_CD
	              AND A.COMPANY_CD = MD.COMPANY_CD
	              AND A.ITEM_ID = MD.ITEM_ID
	              AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	              AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	              AND A.IO_TYPE = 'I'
	              <if test = "fromDate != null and fromDate != ''">
	              AND TRUNC (A.IO_TIME) BETWEEN TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE (#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	              </if>
	              AND A.IO_CATEGORY IN (SELECT MC.CODE_ID
	                                      FROM MOM_CODE MC
	                                     WHERE MC.DIVISION_CD = A.DIVISION_CD 
	                                       AND MC.COMPANY_CD = A.COMPANY_CD 
	                                       AND MC.CODE_CLASS_ID = 'IO_CATEGORY' 
	                                       AND MC.USE_YN = 'Y' 
	                                       AND MC.ATTRIBUTE13 = 'Y')
	              AND NOT EXISTS
	                     (SELECT '*'
	                        FROM MOM_ITEM_STOCK_INOUT IC
	                       WHERE IC.DIVISION_CD = A.DIVISION_CD 
	                         AND IC.COMPANY_CD = A.COMPANY_CD 
	                         AND IC.IO_TYPE = A.IO_TYPE 
	                         AND IC.PREV_STOCK_INOUT_ID = A.ITEM_STOCK_INOUT_ID)
	              <if test = "itemType != null and itemType != ''"> 
	              AND MD.ITEM_TYPE IN(${itemType})
	              </if>
	         GROUP BY NVL (ITEM_GROUP_MEDIUM, '9000'), NVL (ITEM_GROUP_LARGE, 'FA9000'))
	  SELECT Z1.ITEM_GROUP_MEDIUM
	       , Z1.ITEM_GROUP_LARGE
	       , MOM_COMMON_PKG.FN_GET_CODE_NAME (Z1.DIVISION_CD, Z1.COMPANY_CD, 'ITEM_GROUP_MEDIUM', Z1.ITEM_GROUP_MEDIUM) AS ITEM_GROUP_MEDIUM_NM
	       , MOM_COMMON_PKG.FN_GET_CODE_NAME (Z1.DIVISION_CD, Z1.COMPANY_CD, 'ITEM_GROUP_LARGE', Z1.ITEM_GROUP_LARGE) AS ITEM_GROUP_LARGE_NM
	       , NVL (Z2.QTY, 0) QTY
	       , NVL (Z2.AMT, 0) AMT
	       , TO_CHAR(NVL (Z2.IO_TIME, TRUNC (MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}))), 'YYYY-MM-DD') IO_TIME
	       , Z1.SUM_QTY
	       , Z1.SUM_AMT
	    FROM TEMP1 Z1
	       , TEMP2 Z2
	   WHERE Z1.ITEM_GROUP_MEDIUM = Z2.ITEM_GROUP_MEDIUM(+) 
	     AND Z1.ITEM_GROUP_LARGE = Z2.ITEM_GROUP_LARGE(+) 
<!-- 	     AND Z1.IO_TIME = Z2.IO_TIME(+) -->
	ORDER BY Z1.ITEM_GROUP_MEDIUM, Z1.ITEM_GROUP_LARGE
	</select>
	
</mapper>