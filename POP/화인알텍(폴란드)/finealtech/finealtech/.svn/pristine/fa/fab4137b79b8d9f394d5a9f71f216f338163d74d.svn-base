<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.purchase.supplier.materialDelivery">
	<select id="get_materialDelivery_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.MATERIAL_ORDER_ID
		     , A.ORDER_GROUP_ID
		     , A.VENDOR_CD
		     , A.VENDOR_NAME
		     , A.DEPARTURE_VENDOR_CD
		     , A.DEPARTURE_VENDOR_NAME  
		     , A.ITEM_ID
		     , A.ITEM_NAME
		     , A.SPECIFICATION
		     , A.UNIT
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , 'ITEM_UNIT'
		                                              , A.UNIT ) 
		          FROM DUAL ) AS UNIT_NAME 
		     , A.ORDER_TYPE
		     , A.ORDER_TYPE_NAME  
		     , A.ORDER_QTY
		     , A.DEPARTURE_QTY        
		     , A.ORDER_DATE
		     , A.DEPARTURE_DATE     
		     , A.DESCRIPTION
		     , A.CHECK_FLAG
		 	 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , 'USE_FLAG'
		                                              , A.CHECK_FLAG ) 
		          FROM DUAL ) AS IQC_USE_NAME   
		     , A.ORDER_SEQ
		     , A.MARKET_CD
		     , A.MARKET_NAME
		     , A.CURRENCY_CD   
		     , A.CURRENCY_NAME
		     , A.CREATE_DATE 
		     , A.CREATE_BY
		     , A.CREATE_BY_NAME  
		     , A.UPDATE_DATE        
		     , A.UPDATE_BY 
		     , A.UPDATE_BY_NAME 
		     , A.UNIT_DP_USE_FLAG
		     , A.ORDER_QTY - A.DEPARTURE_QTY  - NVL(A.CANCEL_QTY, 0) AS REMAIN_QTY
		     , A.ORDER_FLAG
		     , A.ORDER_FLAG_NAME 
		     ,(A.CONVERSION_UNIT_QTY * A.ORDER_QTY) AS CONVERSION_UNIT_QTY
		     , NVL(A.CONVERSION_UNIT_QTY, 1) AS ORIGIN_CONVERSION_UNIT_QTY
             , A.CONVERSION_UNIT
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD
                                                     , A.COMPANY_CD
                                                     , 'ITEM_UNIT'
                                                 	 , A.CONVERSION_UNIT )
		        FROM DUAL)      AS CONVERSION_UNIT_NAME
		     , A.TRANSACTION_SEQ  
		FROM (SELECT MR.MATERIAL_ORDER_ID
		           , MR.ORDER_GROUP_ID
		           , MR.VENDOR_CD
		           , MV.VENDOR_NAME
		           , MR.COMPANY_CD
		           , MR.DIVISION_CD
		           , NVL(MR.DEPARTURE_VENDOR_CD, MR.VENDOR_CD) AS DEPARTURE_VENDOR_CD
		           , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(MR.DIVISION_CD
		                                                     , MR.COMPANY_CD
		                                                     , NVL(MR.DEPARTURE_VENDOR_CD, MR.VENDOR_CD) )
		              FROM  DUAL)     AS DEPARTURE_VENDOR_NAME  
		           , MR.ITEM_ID
		           , MID.ITEM_NAME
		           , MID.SPECIFICATION
		           , MID.UNIT
		           , MR.ORDER_TYPE
		           , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MR.DIVISION_CD
		                                                   , MR.COMPANY_CD
		                                                   , 'SYSTEM_FLAG'
		                                                   , MR.ORDER_TYPE )
		              FROM DUAL)      AS ORDER_TYPE_NAME  
		           , MR.ORDER_QTY
		           , (SELECT MOM_COMMON_PKG.FN_GET_MATERIAL_DEPARTURE_QTY(MR.DIVISION_CD
		                                                             	, MR.COMPANY_CD
		                                                             	, MR.MATERIAL_ORDER_ID) 
		             FROM   DUAL )    AS DEPARTURE_QTY        
		           , TO_CHAR(MR.ORDER_DATE, 'YYYY-MM-DD')  AS ORDER_DATE   
		           , MID.DESCRIPTION
		           , NVL(MID.IQC_FLAG, 'N')   AS CHECK_FLAG  
		           , MR.ORDER_SEQ
		           , TO_CHAR(MR.CREATE_DATE  , 'YYYY-MM-DD')  AS CREATE_DATE 
		           , MR.CREATE_BY
		           , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MR.DIVISION_CD
		                                                   , MR.COMPANY_CD
		                                                   , MR.CREATE_BY) 
		              FROM  DUAL)   AS CREATE_BY_NAME  
		           , TO_CHAR(MR.UPDATE_DATE, 'YYYY-MM-DD')  AS UPDATE_DATE        
		           , MR.UPDATE_BY 
		           , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MR.DIVISION_CD
		                                                   , MR.COMPANY_CD
		                                                   , MR.UPDATE_BY) 
		              FROM  DUAL)   AS UPDATE_BY_NAME    
		           , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_DECIMAL_POINT_FLAG(MR.DIVISION_CD
		                                                                 , MR.COMPANY_CD
		                                                                 , MID.UNIT)
		              FROM DUAL)    AS UNIT_DP_USE_FLAG      
		              , MR.CANCEL_QTY 
		              , MR.DEPARTURE_DATE
		              , MR.MARKET_CD
		              , MR.CURRENCY_CD  
		              , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MR.DIVISION_CD
		                                                      , MR.COMPANY_CD
		                                                      , 'MARKET_CODE'
		                                                      , MR.MARKET_CD )
		              FROM DUAL)    AS MARKET_NAME 
		              , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MR.DIVISION_CD
		                                                      , MR.COMPANY_CD
		                                                      , 'CURRENCY_CODE'
		                                                      , MR.CURRENCY_CD )
		              FROM DUAL)    AS CURRENCY_NAME
		              , MR.ORDER_FLAG
	                  , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MR.DIVISION_CD
	                                                           , MR.COMPANY_CD
	                                                           , 'ORDER_FLAG'
	                                                           , MR.ORDER_FLAG)
	                    FROM DUAL)	AS ORDER_FLAG_NAME
	                  , NVL(MID.CONVERSION_UNIT_QTY, 1) AS CONVERSION_UNIT_QTY
                      , MID.CONVERSION_UNIT
                      , MR.TRANSACTION_SEQ
		      FROM   MOM_MATERIAL_ORDER MR
		           , MOM_ITEM_DEFINITION MID
		           , MOM_VENDOR MV
		      WHERE  1 = 1 
		      AND    MR.DIVISION_CD  = MID.DIVISION_CD
		      AND    MR.COMPANY_CD   = MID.COMPANY_CD
		      AND    MR.ITEM_ID      = MID.ITEM_ID
		      AND    MR.DIVISION_CD  = MV.DIVISION_CD
		      AND    MR.COMPANY_CD   = MV.COMPANY_CD
		      AND    MR.VENDOR_CD    = MV.VENDOR_CD
		      AND    MR.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}
		      AND    MR.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
		      AND    MR.ORDER_STATE  = 'ORDER'
		     <if test="menuCode == 'DEPT'">
			  AND    NVL(MR.DEPARTURE_FLAG, 'N') = 'Y'
		     </if>
		     <if test="menuCode == 'WGR'">
			  AND    NVL(MR.DEPARTURE_FLAG, 'N') = 'N'
		      AND    NVL(MID.IQC_FLAG, 'N') = 'Y'
		     </if>
		     <if test="vendorName != null and vendorName != ''">
		      AND	MR.VENDOR_CD = #{vendorName, jdbcType=VARCHAR}
		     </if>
		     <if test="departureVendorName != null and departureVendorName != ''">
		      AND	MR.DEPARTURE_VENDOR_CD = #{departureVendorName, jdbcType=VARCHAR}
		     </if>
		     <if test="fromDate != null and fromDate != ''">
		      AND    MR.ORDER_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		      AND     					   TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		     </if>
		     <if test="itemName != null and itemName != ''">
		      AND (UPPER(MR.ITEM_ID) LIKE '%' || UPPER(#{itemName, jdbcType=VARCHAR}) || '%' 
		       OR UPPER(MID.ITEM_NAME) LIKE '%' || UPPER(#{itemName, jdbcType=VARCHAR}) || '%')
		     </if>
		     <if test="orderNumber != null and orderNumber != ''">
		      AND  UPPER(MR.MATERIAL_ORDER_ID) LIKE '%' || UPPER(#{orderNumber, jdbcType=VARCHAR}) || '%'
		     </if>
		     <if test="orderType != null and orderType != ''">
		      AND  MR.ORDER_FLAG = #{orderType, jdbcType=VARCHAR}
		     </if>
		       ) A
		ORDER BY A.MATERIAL_ORDER_ID, A.TRANSACTION_SEQ
	</select>
	
	<delete id="remove_materialDeliveryTemp" parameterType="java.util.HashMap">
		DELETE 
		  FROM MOM_MATERIAL_DEPARTURE_UPLOAD
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND DEPARTURE_TYPE = #{departureType, jdbcType=VARCHAR}
	</delete>
	
	<insert id="create_materialDeliveryTemp" parameterType="java.util.HashMap">
		INSERT INTO MOM_MATERIAL_DEPARTURE_UPLOAD (
			DIVISION_CD
		  , COMPANY_CD
		  , MATERIAL_ORDER_ID
		  , DEPARTURE_QTY
		  , DEPARTURE_DATE
		  , DESCRIPTION
		  , DEPARTURE_TYPE
		  , VENDOR_LOT
		  , IQC_FLAG
		  , CONVERSION_UNIT_QTY
		  , SEQ
		)
		VALUES (
			#{divisionCd, jdbcType=VARCHAR}
		  , #{companyCd, jdbcType=VARCHAR}
		  , #{materialOrderId, jdbcType=VARCHAR}
		  , #{departureQty, jdbcType=NUMERIC}
		  , TO_DATE(#{departureDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		  , #{description, jdbcType=VARCHAR}
		  , #{departureType, jdbcType=VARCHAR}
		  , #{vendorLot, jdbcType=VARCHAR}
		  , #{checkFlag, jdbcType=VARCHAR}
		  , #{conversionUnitQty, jdbcType=NUMERIC}
		  , #{seq, jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="modify_materialDeliveryTemp" parameterType="java.util.HashMap">
		UPDATE MOM_MATERIAL_DEPARTURE_UPLOAD
		SET DEPARTURE_QTY = #{departureQty, jdbcType=NUMERIC}
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND MATERIAL_ORDER_ID = #{materialOrderId, jdbcType=VARCHAR}
		AND DEPARTURE_DATE = TO_DATE(#{departureDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		AND DEPARTURE_TYPE = #{departureType, jdbcType=VARCHAR}
	</update>
	
	<insert id="create_materialDelivery" statementType="CALLABLE">
	{
        CALL SP_MOM_MATERIAL_PKG.P_CREATE_MATERIAL_DEPARTURE (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{departureType, mode=IN, jdbcType=VARCHAR}
           , #{userId, mode=IN, jdbcType=VARCHAR}
        )
    }
	</insert>

</mapper>