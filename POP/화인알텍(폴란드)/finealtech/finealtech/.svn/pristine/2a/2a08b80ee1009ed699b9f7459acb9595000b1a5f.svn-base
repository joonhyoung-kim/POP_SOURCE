<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.reference.workinghours.shiftCode">
	<select id="get_shiftCodeClass_list" resultType="camelMap" parameterType="java.util.HashMap">
	      SELECT A.DIVISION_CD
			   , A.COMPANY_CD
			   , A.SHIFT_CD
			   , A.SHIFT_NAME
			   , A.SHIFT_CD AS CODE
			   , A.SHIFT_CD || '(' || A.SHIFT_NAME || ')' AS NAME
			   , A.SHIFT_TYPE
			   , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (A.DIVISION_CD, A.COMPANY_CD, 'SHIFT_TYPE', A.SHIFT_TYPE) FROM DUAL) AS SHIFT_TYPE_NAME
			   , A.START_TIME
			   , A.END_TIME
			   , A.WORK_TIME
			   , A.USE_YN
			   , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'USE_FLAG', A.USE_YN) FROM DUAL) AS USE_YN_NAME
			   , TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
			   , A.CREATE_BY
			   , TO_CHAR(A.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE
			   , A.UPDATE_BY
			   , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(A.DIVISION_CD, A.COMPANY_CD, A.UPDATE_BY) FROM DUAL) AS UPDATE_USER_NAME
			   , A.UI_SEQUENCE
			   , A.DESCRIPTION
		FROM MOM_SHIFT_CODE A
	   WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	 	 AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		<if test = "shiftCodeId != '' and shiftCodeId != null">
		 AND (UPPER(A.SHIFT_CD) LIKE '%'||UPPER(#{shiftCodeId, jdbcType=VARCHAR})||'%'
		  OR  UPPER(A.SHIFT_NAME) LIKE '%'||UPPER(#{shiftCodeId, jdbcType=VARCHAR})||'%')
		</if>
	   ORDER BY A.UI_SEQUENCE, A.SHIFT_CD
	</select>

	<select id="get_shiftCodeDetail_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.DIVISION_CD
			 , A.COMPANY_CD
			 , A.SHIFT_CD
			 , A.OFF_CD
			 , B.OFF_NAME
			 , B.START_TIME
			 , B.END_TIME
			 , A.USE_YN
			 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'USE_FLAG', A.USE_YN) FROM DUAL) AS USE_YN_NAME
			 , TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
			 , A.CREATE_BY
			 , TO_CHAR(A.UPDATE_DATE,'YYYY-MM-DD') AS UPDATE_DATE
			 , A.UPDATE_BY
			 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(A.DIVISION_CD, A.COMPANY_CD, A.UPDATE_BY) FROM DUAL) AS UPDATE_USER_NAME
			 , A.UI_SEQUENCE
			 , A.DESCRIPTION
		  FROM MOM_SHIFT_CODE_OFF_MAP A
		     , MOM_SHIFT_OFF_CODE B
		 WHERE A.DIVISION_CD = B.DIVISION_CD
		   AND A.COMPANY_CD = B.COMPANY_CD
		   AND A.OFF_CD = B.OFF_CD
		   AND A.SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
		 ORDER BY A.UI_SEQUENCE, A.SHIFT_CD
	</select>
	
	<select id="get_shiftCodeDetailCount_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT COUNT(*) AS ROW_COUNT
		  FROM MOM_SHIFT_CODE_OFF_MAP A
		 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND A.SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
		   AND A.OFF_CD = #{offCodeId, jdbcType=VARCHAR}
	</select>

    <insert id="create_shiftCodeClass" statementType="CALLABLE" parameterType="java.util.HashMap">
    { CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
        
        INSERT INTO MOM_SHIFT_CODE
	        (   DIVISION_CD
			  , COMPANY_CD
			  , SHIFT_CD
			  , SHIFT_NAME
			  , SHIFT_TYPE
			  , START_TIME
			  , END_TIME
			  , WORK_TIME
			  , USE_YN
			  , CREATE_DATE
			  , CREATE_BY
			  , UPDATE_DATE
			  , UPDATE_BY
			  , UI_SEQUENCE
			  , DESCRIPTION
	        )
		VALUES
            ( #{divisionCd, jdbcType=VARCHAR}
            , #{companyCd, jdbcType=VARCHAR}
            , UPPER(TRIM(#{shiftCodeId, jdbcType=VARCHAR}))
            , #{shiftCodeName, jdbcType=VARCHAR}
            , UPPER(TRIM(#{shiftType, jdbcType=VARCHAR}))
            , #{startTime, jdbcType=VARCHAR}
            , #{endTime, jdbcType=VARCHAR}
            , (SELECT TO_NUMBER(((TO_DATE(#{endTime, jdbcType=VARCHAR}, 'HH24:MI') + #{addDate, jdbcType=NUMERIC}) - TO_DATE(#{startTime, jdbcType=VARCHAR}, 'HH24:MI')) * 60 * 24)
		 	     FROM DUAL)
            , NVL(#{useYn, jdbcType=VARCHAR}, 'Y')
            , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
            , #{updateBy,jdbcType=VARCHAR}
            , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
            , #{updateBy,jdbcType=VARCHAR}
            , #{uiSequence, jdbcType=NUMERIC}
            , #{description, jdbcType=VARCHAR}
            )
        ;
        
        INSERT INTO MOM_SHIFT_CODE_HIST
        	(   LAST_EVENT_SEQ
			  , DIVISION_CD
			  , COMPANY_CD
			  , CUD_FLAG
			  , SHIFT_CD
			  , SHIFT_NAME
			  , SHIFT_TYPE
			  , START_TIME
			  , END_TIME
			  , WORK_TIME
			  , USE_YN
			  , CREATE_DATE
			  , CREATE_BY
			  , UPDATE_DATE
			  , UPDATE_BY
			  , UI_SEQUENCE
			  , DESCRIPTION
        	)
        SELECT  S_SH_SEQ.NEXTVAL
       		  , DIVISION_CD    
			  , COMPANY_CD
			  , 'C'     
			  , SHIFT_CD  
			  , SHIFT_NAME
			  , SHIFT_TYPE
			  , START_TIME     
			  , END_TIME     
			  , WORK_TIME  
			  , USE_YN         
			  , CREATE_DATE    
			  , CREATE_BY      
			  , UPDATE_DATE    
			  , UPDATE_BY      
			  , UI_SEQUENCE
			  , DESCRIPTION
          FROM MOM_SHIFT_CODE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = UPPER(TRIM(#{shiftCodeId, jdbcType=VARCHAR}))
           AND SHIFT_TYPE = UPPER(TRIM(#{shiftType, jdbcType=VARCHAR}))
           AND START_TIME = #{startTime, jdbcType=VARCHAR}
           AND END_TIME = #{endTime, jdbcType=VARCHAR}
        ;
        
        SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_CODE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = UPPER(TRIM(#{shiftCodeId, jdbcType=VARCHAR}))
           AND SHIFT_TYPE = UPPER(TRIM(#{shiftType, jdbcType=VARCHAR}))
		   AND START_TIME = #{startTime, jdbcType=VARCHAR}
		   AND END_TIME = #{endTime, jdbcType=VARCHAR}
		;
	 END
	}
    </insert>
    
    <update id="modify_shiftCodeClass" statementType="CALLABLE" parameterType="java.util.HashMap">
    { CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
        UPDATE MOM_SHIFT_CODE
		   SET SHIFT_NAME  		= #{shiftCodeName, jdbcType=VARCHAR}
		     , USE_YN           = NVL(#{useYn, jdbcType=VARCHAR}, 'Y')
		     , UI_SEQUENCE		= #{uiSequence, jdbcType=NUMERIC}
		     , DESCRIPTION		= #{description, jdbcType=VARCHAR}
		     , UPDATE_DATE      = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		     , UPDATE_BY        = #{updateBy, jdbcType=VARCHAR}
		 WHERE DIVISION_CD      = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD 		= #{shiftCodeId, jdbcType=VARCHAR}
           AND SHIFT_TYPE 		= #{shiftType, jdbcType=VARCHAR}
		   AND START_TIME		= #{startTime, jdbcType=VARCHAR}
		   AND END_TIME			= #{endTime, jdbcType=VARCHAR}
		;
		
	    INSERT INTO MOM_SHIFT_CODE_HIST
        	(   LAST_EVENT_SEQ
			  , DIVISION_CD
			  , COMPANY_CD
			  , CUD_FLAG
			  , SHIFT_CD
			  , SHIFT_NAME
			  , SHIFT_TYPE
			  , START_TIME
			  , END_TIME
			  , WORK_TIME
			  , USE_YN
			  , CREATE_DATE
			  , CREATE_BY
			  , UPDATE_DATE
			  , UPDATE_BY
			  , UI_SEQUENCE
			  , DESCRIPTION 
        	)
        SELECT  S_SH_SEQ.NEXTVAL
       		  , DIVISION_CD    
			  , COMPANY_CD
			  , 'U'     
			  , SHIFT_CD  
			  , SHIFT_NAME
			  , SHIFT_TYPE
			  , START_TIME     
			  , END_TIME
			  , WORK_TIME       
			  , USE_YN         
			  , CREATE_DATE    
			  , CREATE_BY      
			  , UPDATE_DATE    
			  , UPDATE_BY      
			  , UI_SEQUENCE
			  , DESCRIPTION
          FROM MOM_SHIFT_CODE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
           AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR}
           AND START_TIME = #{startTime, jdbcType=VARCHAR}
           AND END_TIME = #{endTime, jdbcType=VARCHAR}
        ;
        
        SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_CODE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
           AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR}
		   AND START_TIME = #{startTime, jdbcType=VARCHAR}
		   AND END_TIME = #{endTime, jdbcType=VARCHAR}
		;
	 END
	}
    </update>
    
    <delete id="remove_shiftCodeClass" statementType="CALLABLE" parameterType="java.util.HashMap">
    { CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
	  UPDATE MOM_SHIFT_CODE
	     SET DESCRIPTION = 'Delete Data'
	       , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
	  	   , UPDATE_BY = #{updateBy, jdbcType=VARCHAR}
	   WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	     AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	     AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
         AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR}
		 AND START_TIME = #{startTime, jdbcType=VARCHAR}
		 AND END_TIME = #{endTime, jdbcType=VARCHAR}
	  ;
	  
	  INSERT INTO MOM_SHIFT_CODE_HIST
        	(   LAST_EVENT_SEQ
			  , DIVISION_CD
			  , COMPANY_CD
			  , CUD_FLAG
			  , SHIFT_CD
			  , SHIFT_NAME
			  , SHIFT_TYPE
			  , START_TIME
			  , END_TIME
			  , WORK_TIME
			  , USE_YN
			  , CREATE_DATE
			  , CREATE_BY
			  , UPDATE_DATE
			  , UPDATE_BY
			  , UI_SEQUENCE
			  , DESCRIPTION 
        	)
        SELECT  S_SH_SEQ.NEXTVAL
       		  , DIVISION_CD    
			  , COMPANY_CD
			  , 'D'     
			  , SHIFT_CD  
			  , SHIFT_NAME
			  , SHIFT_TYPE
			  , START_TIME     
			  , END_TIME
			  , WORK_TIME       
			  , USE_YN         
			  , CREATE_DATE    
			  , CREATE_BY      
			  , UPDATE_DATE    
			  , UPDATE_BY      
			  , UI_SEQUENCE
			  , DESCRIPTION
          FROM MOM_SHIFT_CODE
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
           AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR}
           AND START_TIME = #{startTime, jdbcType=VARCHAR}
           AND END_TIME = #{endTime, jdbcType=VARCHAR}
        ;
	  	
        DELETE 
          FROM MOM_SHIFT_CODE
         WHERE DIVISION_CD	 = #{divisionCd,jdbcType=VARCHAR}
           AND COMPANY_CD  	 = #{companyCd,jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
           AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR}
           AND START_TIME	 = #{startTime, jdbcType=VARCHAR}
		   AND END_TIME		 = #{endTime, jdbcType=VARCHAR}
		;
		
		UPDATE MOM_SHIFT_CODE_OFF_MAP
	       SET DESCRIPTION = 'Delete Data'
	         , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
	  	     , UPDATE_BY = #{updateBy, jdbcType=VARCHAR}
	     WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	       AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
	       AND OFF_CD = #{offCodeId, jdbcType=VARCHAR}
	    ;
		
		INSERT INTO MOM_SHIFT_CODE_OFF_MAP_HIST
        	(   LAST_EVENT_SEQ
			  , DIVISION_CD
			  , COMPANY_CD
			  , CUD_FLAG
			  , SHIFT_CD
			  , OFF_CD
			  , USE_YN
			  , CREATE_DATE
			  , CREATE_BY
			  , UPDATE_DATE
			  , UPDATE_BY
			  , UI_SEQUENCE
			  , DESCRIPTION 
        	)
        SELECT  S_SHM_SEQ.NEXTVAL
			  , DIVISION_CD
			  , COMPANY_CD
			  , 'D'
			  , SHIFT_CD
			  , OFF_CD
			  , USE_YN
			  , CREATE_DATE
			  , CREATE_BY
			  , UPDATE_DATE
			  , UPDATE_BY
			  , UI_SEQUENCE
			  , DESCRIPTION
          FROM MOM_SHIFT_CODE_OFF_MAP
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
           AND OFF_CD = #{offCodeId, jdbcType=VARCHAR}
        ;
		
		DELETE
		  FROM MOM_SHIFT_CODE_OFF_MAP
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
		   AND OFF_CD = #{offCodeId, jdbcType=VARCHAR}
		;
		
		SELECT
			CASE 
				WHEN COUNT(SHIFT_CD) = 0 THEN 'S'
				ELSE 'E' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_CODE
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
           AND SHIFT_TYPE = #{shiftType, jdbcType=VARCHAR}
		   AND START_TIME = #{startTime, jdbcType=VARCHAR}
		   AND END_TIME = #{endTime, jdbcType=VARCHAR}
		;
	 END
	}
    </delete>
    
    <insert id="create_shiftCodeDetail" statementType="CALLABLE" parameterType="java.util.HashMap">
    { CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
        INSERT INTO MOM_SHIFT_CODE_OFF_MAP
			( DIVISION_CD
			, COMPANY_CD
			, SHIFT_CD
			, OFF_CD
			, USE_YN
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, UI_SEQUENCE
			, DESCRIPTION
			)
        VALUES
            (  #{divisionCd, jdbcType=VARCHAR}
             , #{companyCd, jdbcType=VARCHAR}
             , #{shiftCodeId, jdbcType=VARCHAR}
             , UPPER(TRIM(#{offCodeId, jdbcType=VARCHAR}))
             , NVL(#{useYn, jdbcType=VARCHAR}, 'Y')
             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , #{updateBy,jdbcType=VARCHAR}
             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , #{updateBy,jdbcType=VARCHAR}
             , #{uiSequence, jdbcType=NUMERIC}
             , #{description, jdbcType=VARCHAR}
            )
        ;
        
        INSERT INTO MOM_SHIFT_CODE_OFF_MAP_HIST
        	(  LAST_EVENT_SEQ
			 , DIVISION_CD
			 , COMPANY_CD
			 , CUD_FLAG
			 , SHIFT_CD
			 , OFF_CD
			 , USE_YN
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , UI_SEQUENCE
			 , DESCRIPTION
        	)
        SELECT S_SHM_SEQ.NEXTVAL
       		 , DIVISION_CD
			 , COMPANY_CD
			 , 'C'
			 , SHIFT_CD
			 , OFF_CD
			 , USE_YN
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , UI_SEQUENCE
			 , DESCRIPTION    
          FROM MOM_SHIFT_CODE_OFF_MAP
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
           AND OFF_CD = UPPER(TRIM(#{offCodeId, jdbcType=VARCHAR}))
        ;
        
        SELECT
			CASE 
				WHEN COUNT(OFF_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_CODE_OFF_MAP
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
		   AND OFF_CD = UPPER(TRIM(#{offCodeId, jdbcType=VARCHAR}))
		;
	 END
	}
    </insert>
    
    <update id="modify_shiftCodeDetail" statementType="CALLABLE" parameterType="java.util.HashMap">
    { CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
        UPDATE MOM_SHIFT_CODE_OFF_MAP
           SET USE_YN 			= #{useYn, jdbcType=VARCHAR}
             , UPDATE_DATE      = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY        = #{updateBy, jdbcType=VARCHAR}
			 , UI_SEQUENCE		= #{uiSequence, jdbcType=NUMERIC}
			 , DESCRIPTION		= #{description, jdbcType=VARCHAR}
         WHERE DIVISION_CD      = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD    = #{shiftCodeId, jdbcType=VARCHAR}
           AND OFF_CD      = #{offCodeId, jdbcType=VARCHAR}
		;
		
		INSERT INTO MOM_SHIFT_CODE_OFF_MAP_HIST
        	(  LAST_EVENT_SEQ
			 , DIVISION_CD
			 , COMPANY_CD
			 , CUD_FLAG
			 , SHIFT_CD
			 , OFF_CD
			 , USE_YN
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , UI_SEQUENCE
			 , DESCRIPTION  
        	)
        SELECT S_SHM_SEQ.NEXTVAL
       		 , DIVISION_CD
			 , COMPANY_CD
			 , 'U'
			 , SHIFT_CD
			 , OFF_CD
			 , USE_YN
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , UI_SEQUENCE
			 , DESCRIPTION    
          FROM MOM_SHIFT_CODE_OFF_MAP
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
           AND OFF_CD = #{offCodeId, jdbcType=VARCHAR}
        ;
        
        SELECT
			CASE 
				WHEN COUNT(OFF_CD) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_CODE_OFF_MAP
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
		   AND OFF_CD = #{offCodeId, jdbcType=VARCHAR}
		;
	 END
	}
    </update>
    
    <delete id="remove_shiftCodeDetail" statementType="CALLABLE" parameterType="java.util.HashMap">
    { CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
        UPDATE MOM_SHIFT_CODE_OFF_MAP
           SET DESCRIPTION 		= 'Delete Data'
             , UPDATE_DATE      = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY        = #{updateBy, jdbcType=VARCHAR}
         WHERE DIVISION_CD      = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD    		= #{shiftCodeId, jdbcType=VARCHAR}
           AND OFF_CD      		= #{offCodeId, jdbcType=VARCHAR}
		;
		
		INSERT INTO MOM_SHIFT_CODE_OFF_MAP_HIST
        	(  LAST_EVENT_SEQ
			 , DIVISION_CD
			 , COMPANY_CD
			 , CUD_FLAG
			 , SHIFT_CD
			 , OFF_CD
			 , USE_YN
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , UI_SEQUENCE
			 , DESCRIPTION    
        	)
        SELECT S_SHM_SEQ.NEXTVAL
       		 , DIVISION_CD
			 , COMPANY_CD
			 , 'D'
			 , SHIFT_CD
			 , OFF_CD
			 , USE_YN
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , UI_SEQUENCE
			 , DESCRIPTION    
          FROM MOM_SHIFT_CODE_OFF_MAP
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
           AND OFF_CD = #{offCodeId, jdbcType=VARCHAR}
        ;
        
        DELETE
          FROM MOM_SHIFT_CODE_OFF_MAP
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
		   AND OFF_CD = #{offCodeId, jdbcType=VARCHAR}
		;
        
        SELECT
			CASE 
				WHEN COUNT(OFF_CD) = 0 THEN 'S'
				ELSE 'E' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_CODE_OFF_MAP
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
		   AND OFF_CD = #{offCodeId, jdbcType=VARCHAR}
		;
	 END
	}
    </delete>
    
    <select id="get_shiftCodeClassId_list" resultType="camelMap" parameterType="java.util.HashMap">
	  SELECT TO_NUMBER(SUBSTR(MAX(A.SHIFT_CD), 3, 4)) AS CODE_SEQ
		FROM MOM_SHIFT_CODE A
	   WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	 	 AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	</select>
	
	<update id="modify_shiftCodeDetailUseFlag" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
        UPDATE MOM_SHIFT_CODE_OFF_MAP
           SET USE_YN 			= #{useYn, jdbcType=VARCHAR}
             , UPDATE_DATE      = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY        = #{updateBy, jdbcType=VARCHAR}
         WHERE DIVISION_CD      = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD    		= #{shiftCodeId, jdbcType=VARCHAR}
        ;   
          
        INSERT INTO MOM_SHIFT_CODE_OFF_MAP_HIST
        	(  LAST_EVENT_SEQ
			 , DIVISION_CD
			 , COMPANY_CD
			 , CUD_FLAG
			 , SHIFT_CD
			 , OFF_CD
			 , USE_YN
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , UI_SEQUENCE
			 , DESCRIPTION  
        	)
        SELECT S_SHM_SEQ.NEXTVAL
       		 , DIVISION_CD
			 , COMPANY_CD
			 , 'U'
			 , SHIFT_CD
			 , OFF_CD
			 , USE_YN
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
			 , UI_SEQUENCE
			 , DESCRIPTION    
          FROM MOM_SHIFT_CODE_OFF_MAP
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
        ;
        
        SELECT
			CASE 
				WHEN COUNT(OFF_CD) > 0 THEN 'S'
				ELSE 'E' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_SHIFT_CODE_OFF_MAP
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND SHIFT_CD = #{shiftCodeId, jdbcType=VARCHAR}
		   AND USE_YN = 'N'
		;
	 END
	}
    </update>
	
</mapper>