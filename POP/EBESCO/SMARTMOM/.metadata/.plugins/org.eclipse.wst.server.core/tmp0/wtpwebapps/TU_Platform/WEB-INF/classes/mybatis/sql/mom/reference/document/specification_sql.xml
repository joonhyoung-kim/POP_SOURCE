<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.reference.document.specification">
	<select id="get_specification_list" resultType="camelMap" parameterType="java.util.HashMap">
    WITH TEMP1 AS (
		SELECT A.DIVISION_CD
			 , A.COMPANY_CD
			 , A.SPEC_ID
			 , A.SPEC_TITLE
			 , A.SPEC_TYPE
			 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'SPECIFICATION_TYPE', A.SPEC_TYPE)
			      FROM DUAL) AS SPEC_TYPE_NAME
			 , A.ITEM_ID
			 , A.STATE
			 , A.VENDOR_CD
			 , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(A.DIVISION_CD, A.COMPANY_CD, A.VENDOR_CD)
			      FROM DUAL) AS VENDOR_NAME
			 , TO_CHAR(A.CONFIRM_DATE, 'YYYY-MM-DD') AS CONFIRM_DATE
			 , TO_CHAR(A.BOM_SUPPLY_DATE, 'YYYY-MM-DD') AS BOM_SUPPLY_DATE
			 , A.QA_CONFIRM
			 , TO_CHAR(A.MATERIAL_CONFIRM_DATE, 'YYYY-MM-DD') AS MATERIAL_CONFIRM_DATE
			 , TO_CHAR(A.SALES_CONFIRM_DATE, 'YYYY-MM-DD') AS SALES_CONFIRM_DATE
			 , TO_CHAR(A.PRODUCT_CONFIRM_DATE, 'YYYY-MM-DD') AS PRODUCT_CONFIRM_DATE
			 , A.SPEC_PASSWORD
			 , A.USE_YN
			 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'USE_FLAG', A.USE_YN)
			      FROM DUAL) AS USE_YN_NAME
			 , A.DESCRIPTION
			 , TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
			 , A.CREATE_BY
			 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(A.DIVISION_CD, A.COMPANY_CD, A.CREATE_BY)
			      FROM DUAL) AS CREATE_USER_NAME
			 , TO_CHAR(A.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE
			 , A.UPDATE_BY
			 , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(A.DIVISION_CD, A.COMPANY_CD, A.UPDATE_BY)
			      FROM DUAL) AS UPDATE_USER_NAME
			 , '' AS ATTACH_FILE
			 , A.ECO_NO
			 , DECODE(A.MATERIAL_CONFIRM_DATE, '', 'N', DECODE(A.PRODUCT_CONFIRM_DATE, '', 'N', DECODE(A.SALES_CONFIRM_DATE, '', 'N', 'Y'))) AS QA_CONFIRM_FLAG
		FROM MOM_SPECIFICATION A
		WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	   <if test="fromDate != null and fromDate != '' and toDate != null and todate !=''">
	    AND A.CREATE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'YYYY-MM-DD') 
	                          AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997/24
	   </if>
	   <if test="modelId != null and modelId != ''">
		AND A.ITEM_ID LIKE '%' || TRIM(UPPER(#{modelId, jdbcType=VARCHAR})) ||'%'
	   </if>
	   <if test="repModelId != null and repModelId != ''">
		AND A.ITEM_ID LIKE '%' || TRIM(UPPER(#{repModelId, jdbcType=VARCHAR})) || '%'
	   </if>
	   <if test="ecoNo != null and ecoNo != ''">
		AND A.ECO_NO LIKE '%' || TRIM(UPPER(#{ecoNo, jdbcType=VARCHAR})) || '%'
	   </if>
	   <if test="specTitle != null and specTitle !=''">
		AND UPPER(A.SPEC_TITLE) LIKE '%' || TRIM(UPPER(#{specTitle, jdbcType=VARCHAR})) || '%'
	   </if>
	   <if test="qaConfirm != null and qaConfirm != ''">
	    AND A.QA_CONFIRM = #{qaConfirm, jdbcType=VARCHAR}
	   </if>
		ORDER BY A.SPEC_ID, A.CREATE_DATE)
         SELECT A.*
              , B.ROW_COUNT
         FROM (SELECT A.*
                    , ROWNUM GRIDROW
                 FROM TEMP1 A) A
            , (SELECT COUNT(*) ROW_COUNT
                 FROM TEMP1) B 
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
         WHERE GRIDROW BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
    </if>
	</select>

	<insert id="create_specification" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
		DECLARE
		BEGIN
			#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
			
		INSERT INTO MOM_SPECIFICATION (
				DIVISION_CD,
				COMPANY_CD,
				SPEC_ID,
				SPEC_TYPE,
				SPEC_TITLE,
				ITEM_ID,
				STATE,
				VENDOR_CD,
				BOM_SUPPLY_DATE,
				QA_CONFIRM,
				MATERIAL_CONFIRM_DATE,
				SALES_CONFIRM_DATE,
				PRODUCT_CONFIRM_DATE,
				SPEC_PASSWORD,
				USE_YN,
				DESCRIPTION,
				CREATE_DATE,
				CREATE_BY,
				UPDATE_DATE,
				UPDATE_BY,
				ECO_NO
				)
		VALUES (
				#{divisionCd, jdbcType=VARCHAR},
				#{companyCd, jdbcType=VARCHAR},
				#{specId, jdbcType=VARCHAR},
				#{specType, jdbcType=VARCHAR},
				#{specTitle, jdbcType=VARCHAR},
				UPPER(TRIM(#{itemId, jdbcType=VARCHAR})),
				#{state, jdbcType=VARCHAR},
				UPPER(TRIM(#{vendorCd, jdbcType=VARCHAR})),
				TO_DATE(#{bomSupplyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
				#{qaConfirm, jdbcType=VARCHAR},
				TO_DATE(#{materialConfirmDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
				TO_DATE(#{salesConfirmDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
				TO_DATE(#{productConfirmDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
				#{specPassword, jdbcType=VARCHAR},
				NVL(UPPER(TRIM(#{useYn, jdbcType=VARCHAR})), 'Y'),
				#{description, jdbcType=VARCHAR},
				DECODE(#{createDate, jdbcType=VARCHAR}, '', MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}), TO_DATE(#{createDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')),
				#{userId, jdbcType=VARCHAR},
				MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
				#{userId, jdbcType=VARCHAR},
				#{ecoNo, jdbcType=VARCHAR}
		);
				
		INSERT INTO MOM_SPECIFICATION_HIST (
				LAST_EVENT_SEQ,
				DIVISION_CD,
				COMPANY_CD,
				SPEC_ID,
				SPEC_TYPE,
				SPEC_TITLE,
				ITEM_ID,
				STATE,
				VENDOR_CD,
				BOM_SUPPLY_DATE,
				QA_CONFIRM,
				MATERIAL_CONFIRM_DATE,
				SALES_CONFIRM_DATE,
				PRODUCT_CONFIRM_DATE,
				SPEC_PASSWORD,
				USE_YN,
				DESCRIPTION,
				CREATE_DATE,
				CREATE_BY,
				UPDATE_DATE,
				UPDATE_BY,
				ECO_NO
				)
		SELECT  s_order_seq.nextval,
				DIVISION_CD,
				COMPANY_CD,
				SPEC_ID,
				SPEC_TYPE,
				SPEC_TITLE,
				ITEM_ID,
				STATE,
				VENDOR_CD,
				BOM_SUPPLY_DATE,
				QA_CONFIRM,
				MATERIAL_CONFIRM_DATE,
				SALES_CONFIRM_DATE,
				PRODUCT_CONFIRM_DATE,
				SPEC_PASSWORD,
				USE_YN,
				DESCRIPTION,
				CREATE_DATE,
				CREATE_BY,
				UPDATE_DATE,
				UPDATE_BY,
				ECO_NO
		FROM  MOM_SPECIFICATION
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND SPEC_ID = #{specId, jdbcType=VARCHAR};
		
		SELECT
			CASE 
				WHEN COUNT(SPEC_ID) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_SPECIFICATION
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		AND SPEC_ID = #{specId, jdbcType=VARCHAR}
		;
		END
	}
	</insert>

	<update id="modify_specification" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
		DECLARE
		BEGIN
			#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
			
		UPDATE MOM_SPECIFICATION
		  SET SPEC_TYPE = #{specType, jdbcType=VARCHAR}
			, SPEC_TITLE = #{specTitle, jdbcType=VARCHAR}
			, ITEM_ID = UPPER(TRIM(#{itemId, jdbcType=VARCHAR}))
			, STATE = #{state, jdbcType=VARCHAR}
			, VENDOR_CD = UPPER(TRIM(#{vendorCd, jdbcType=VARCHAR}))
			, BOM_SUPPLY_DATE = TO_DATE(#{bomSupplyDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			, QA_CONFIRM = DECODE(#{confirmDate, jdbcType=VARCHAR}, NULL, 'N', 'Y')
			, MATERIAL_CONFIRM_DATE = TO_DATE(#{materialConfirmDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			, PRODUCT_CONFIRM_DATE = TO_DATE(#{productConfirmDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			, SALES_CONFIRM_DATE = TO_DATE(#{salesConfirmDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			, CONFIRM_DATE = TO_DATE(#{confirmDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			, DESCRIPTION = #{description, jdbcType=VARCHAR}
			, UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			, UPDATE_BY = #{userId, jdbcType=VARCHAR}
			, ECO_NO = #{ecoNo, jdbcType=VARCHAR}
			, USE_YN = NVL(UPPER(TRIM(#{useYn, jdbcType=VARCHAR})), 'Y')
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND SPEC_ID = #{specId, jdbcType=VARCHAR}
		;
		
		INSERT INTO MOM_SPECIFICATION_HIST (
				LAST_EVENT_SEQ,
				DIVISION_CD,
				COMPANY_CD,
				SPEC_ID,
				SPEC_TYPE,
				SPEC_TITLE,
				ITEM_ID,
				STATE,
				VENDOR_CD,
				BOM_SUPPLY_DATE,
				QA_CONFIRM,
				MATERIAL_CONFIRM_DATE,
				SALES_CONFIRM_DATE,
				PRODUCT_CONFIRM_DATE,
				CONFIRM_DATE,
				SPEC_PASSWORD,
				USE_YN,
				DESCRIPTION,
				CREATE_DATE,
				CREATE_BY,
				UPDATE_DATE,
				UPDATE_BY,
				ECO_NO
				)
		SELECT  s_order_seq.nextval,
				DIVISION_CD,
				COMPANY_CD,
				SPEC_ID,
				SPEC_TYPE,
				SPEC_TITLE,
				ITEM_ID,
				STATE,
				VENDOR_CD,
				BOM_SUPPLY_DATE,
				QA_CONFIRM,
				MATERIAL_CONFIRM_DATE,
				SALES_CONFIRM_DATE,
				PRODUCT_CONFIRM_DATE,
				CONFIRM_DATE,
				SPEC_PASSWORD,
				USE_YN,
				DESCRIPTION,
				MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
				#{userId, jdbcType=VARCHAR},
				MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
				#{userId, jdbcType=VARCHAR},
				ECO_NO
		FROM  MOM_SPECIFICATION
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND SPEC_ID = #{specId, jdbcType=VARCHAR}
		;
		
		SELECT
			CASE 
				WHEN COUNT(SPEC_ID) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_SPECIFICATION
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		AND SPEC_ID = #{specId, jdbcType=VARCHAR}
		;		
		END
		}
	</update>

	<update id="modify_changePassword" parameterType="java.util.HashMap">
		UPDATE MOM_SPECIFICATION
		SET SPEC_PASSWORD = #{specPassword,jdbcType=VARCHAR}
		  , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		  , UPDATE_BY = #{userId, jdbcType=VARCHAR}
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND SPEC_ID = #{specId, jdbcType=VARCHAR}
	</update>


	<delete id="remove_specification" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
		DECLARE
		BEGIN
		#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
			
		INSERT INTO MOM_SPECIFICATION_HIST (
				LAST_EVENT_SEQ,
				DIVISION_CD,
				COMPANY_CD,
				SPEC_ID,
				SPEC_TYPE,
				SPEC_TITLE,
				ITEM_ID,
				STATE,
				VENDOR_CD,
				BOM_SUPPLY_DATE,
				QA_CONFIRM,
				MATERIAL_CONFIRM_DATE,
				SALES_CONFIRM_DATE,
				PRODUCT_CONFIRM_DATE,
				CONFIRM_DATE,
				SPEC_PASSWORD,
				USE_YN,
				DESCRIPTION,
				CREATE_DATE,
				CREATE_BY,
				UPDATE_DATE,
				UPDATE_BY,
				ECO_NO
				)
		SELECT  s_order_seq.nextval,
				DIVISION_CD,
				COMPANY_CD,
				SPEC_ID,
				SPEC_TYPE,
				SPEC_TITLE,
				ITEM_ID,
				'DELETE',
				VENDOR_CD,
				BOM_SUPPLY_DATE,
				QA_CONFIRM,
				MATERIAL_CONFIRM_DATE,
				SALES_CONFIRM_DATE,
				PRODUCT_CONFIRM_DATE,
				CONFIRM_DATE,
				SPEC_PASSWORD,
				USE_YN,
				'Delete Data',
				MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
				#{userId, jdbcType=VARCHAR},
				MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
				#{userId, jdbcType=VARCHAR},
				ECO_NO
		FROM  MOM_SPECIFICATION
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND SPEC_ID = #{specId, jdbcType=VARCHAR}
		;
		
		DELETE FROM MOM_SPECIFICATION
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND SPEC_ID = #{specId, jdbcType=VARCHAR}
		;
		
		SELECT
			CASE 
				WHEN COUNT(SPEC_ID) = 0 THEN 'S'
				ELSE 'E' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_SPECIFICATION
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		AND SPEC_ID = #{specId, jdbcType=VARCHAR}
		;
		END
		}
	</delete>

	<select id="get_rpItemId_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT DISTINCT RP_ITEM_ID AS CODE
					  , RP_ITEM_ID AS NAME
		FROM MOM_ITEM_DEFINITION
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	   <if test="key != null and key != ''">
		AND UPPER(RP_ITEM_ID) LIKE '%' || TRIM(UPPER(#{key, jdbcType=VARCHAR})) || '%'
	   </if>
		AND RP_ITEM_ID IS NOT NULL
		ORDER BY RP_ITEM_ID
	</select>
	
	<select id="get_deptCd_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT NVL(C.CODE_VALUES, 'N') AS DEPT_CD
		  FROM MOM_CODE C
		     , TU_USER T
		 WHERE C.DIVISION_CD = T.DIVISION_CD
		   AND C.COMPANY_CD = T.COMPANY_CD
		   AND C.CODE_ID = T.DEPT_CD
		   AND C.CODE_CLASS_ID = 'DEPT_CD'
		   AND C.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND C.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND T.USER_ID = #{userId, jdbcType=VARCHAR}
		   AND T.USE_YN = 'Y'
		   AND T.MANAGER_YN = 'Y'
	</select>

</mapper>