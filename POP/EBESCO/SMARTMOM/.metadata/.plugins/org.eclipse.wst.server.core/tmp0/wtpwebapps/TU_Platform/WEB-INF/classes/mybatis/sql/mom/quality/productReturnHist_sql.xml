<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.quality.productReturnHist">
	
	<!-- modify_hists 
    * XMOMA11 / 20191106 / gyp / SQL 정리, TRIM 추가
     -->
	<select id="get_productReturnHist_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.* 
		     , DECODE(A.CANCEL_QTY, NULL, A.AMOUNT, 0) AS INOUT_PRICE
             , DECODE(A.CANCEL_QTY, NULL, A.EX_AMOUNT, 0) AS TOTAL_PRICE
             , DECODE(A.CANCEL_FLAG, 'N', A.C_UNIT_QTY, 0) AS CONVERSION_UNIT_QTY
		  FROM ( SELECT MI.IO_CATEGORY
					  , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD, MI.COMPANY_CD, 'IO_CATEGORY', MI.IO_CATEGORY  )
						 FROM   DUAL ) AS IO_CATEGORY_NAME
					  , MI.RETURN_TYPE
				      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD, MI.COMPANY_CD, 'PRODUCT_RETURN_TYPE', MI.RETURN_TYPE  )
				         FROM   DUAL ) AS RETURN_TYPE_NAME
				      , MI.ITEM_ID
				      , MD.ITEM_NAME
				      , MD.SPECIFICATION
				      , TO_CHAR(MI.IO_TIME, 'YYYY-MM-DD') AS IO_TIME
				      , MI.MARKET_CD
				      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD, MI.COMPANY_CD, 'MARKET_CODE', MI.MARKET_CD  )
				         FROM   DUAL ) AS MARKET_NAME
				      , MI.CURRENCY_CD
				      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD, MI.COMPANY_CD, 'CURRENCY_CODE', MI.CURRENCY_CD  )
				         FROM   DUAL ) AS CURRENCY_NAME
				      , MI.EXCHANGE_RATE
				      , MI.QTY
				      , ABS(MIC.QTY) AS CANCEL_QTY
				      , TO_CHAR(MIC.IO_TIME, 'YYYY-MM-DD') AS CANCEL_DATE
				      , NVL2 (MIC.IO_TIME, 'Y', 'N') AS CANCEL_FLAG
				      , MD.CONVERSION_UNIT
				      , MI.CONVERSION_UNIT_QTY AS C_UNIT_QTY
				      , DECODE(MI.CURRENCY_CD, MP.CURRENCY_CD, MI.UNIT_PRICE, MI.FOREIGN_UNIT_PRICE) AS UNIT_PRICE
				      , MI.INOUT_PRICE AS AMOUNT
				      , DECODE(MI.CURRENCY_CD, MP.CURRENCY_CD, MI.INOUT_PRICE, MI.FOREIGN_TOTAL_PRICE) AS EX_AMOUNT
				      , MI.VENDOR_CD AS VENDOR_CD
		              , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME (MI.DIVISION_CD, MI.COMPANY_CD, MI.VENDOR_CD) 
		                 FROM   DUAL) AS VENDOR_NAME
		              , MI.PREV_LOCATION_CD AS FROM_LOCATION_CD
		              , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (MI.DIVISION_CD, MI.COMPANY_CD, MI.PREV_LOCATION_CD) 
		                 FROM   DUAL) AS FROM_LOCATION_NAME
		              , MI.LOCATION_CD AS TO_LOCATION_CD
		              , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (MI.DIVISION_CD, MI.COMPANY_CD, MI.LOCATION_CD) 
		                 FROM   DUAL) AS TO_LOCATION_NAME
				      , MD.ITEM_USER_ID
				      , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MD.DIVISION_CD, MD.COMPANY_CD, MD.ITEM_USER_ID)
				         FROM   DUAL ) AS ITEM_USER_NAME
				      , MI.DESCRIPTION
                      , NVL((SELECT 'Y' 
                               FROM MOM_ITEM_LAST 
                              WHERE DIVISION_CD = MI.DIVISION_CD 
                                AND COMPANY_CD = MI.COMPANY_CD 
                                AND ITEM_STOCK_INOUT_ID = MI.ITEM_STOCK_INOUT_ID
                                AND ROWNUM = 1 ), 'N') AS END_FLAG
				      , MI.PREV_STOCK_INOUT_ID AS FROM_STOCK_INOUT_ID
		              , MI.ITEM_STOCK_INOUT_ID AS TO_STOCK_INOUT_ID
		              , MI.ITEM_ORDER_ID
		              , MI.ITEM_INPUT_ID
		              , TO_CHAR(MI.CREATE_DATE, 'yyyy-mm-dd') AS CREATE_DATE
				FROM    MOM_ITEM_STOCK_INOUT MI
				      , MOM_ITEM_DEFINITION MD 
				      , MOM_PARAMETER MP
				      , MOM_ITEM_STOCK_INOUT MIC
				WHERE   MI.DIVISION_CD = MD.DIVISION_CD
				AND     MI.COMPANY_CD  = MD.COMPANY_CD
				AND     MI.ITEM_ID     = MD.ITEM_ID
				AND     MI.DIVISION_CD = MP.DIVISION_CD
				AND     MI.COMPANY_CD  = MP.COMPANY_CD
				AND     MI.DIVISION_CD = MIC.DIVISION_CD(+)
				AND     MI.COMPANY_CD  = MIC.COMPANY_CD(+)
				AND     MI.ITEM_STOCK_INOUT_ID = MIC.PREV_STOCK_INOUT_ID(+)
				AND     MI.IO_TYPE = MIC.IO_TYPE(+)
				AND     MI.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
				AND     MI.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
				AND     MI.IO_TYPE     = 'O'
				AND     MI.IO_CATEGORY IN ( SELECT MC.CODE_ID
				                            FROM   MOM_CODE MC
				                            WHERE  MC.DIVISION_CD = MI.DIVISION_CD
				                            AND    MC.COMPANY_CD  = MI.COMPANY_CD                                       
				                            AND    MC.CODE_CLASS_ID = 'IO_CATEGORY'
				                            AND    MC.USE_YN      = 'Y'
				                            AND    NVL(MC.ATTRIBUTE17, 'N') = 'Y')
			   <if test = "dateCombo == 'RETURN_DATE'">
				AND     MI.IO_TIME  BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
				                        AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997/24
			   </if>
			   <if test = "dateCombo == 'CREATE_DATE'">
                AND     MI.CREATE_DATE  BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
                                            AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997/24
               </if>
			   <if test = "product != null and product != ''">
				AND 	(MI.ITEM_ID LIKE '%' || TRIM(UPPER(#{product, jdbcType=VARCHAR})) || '%'
				         OR  UPPER(MD.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{product, jdbcType=VARCHAR})) || '%')
			   </if>
			   <if test = "fromVendor != null and fromVendor != ''">
		        AND 	MI.VENDOR_CD = #{fromVendor, jdbcType=VARCHAR}
		       </if>
		       <if test = "toLocation != null and toLocation != ''">
		        AND 	MI.LOCATION_CD = #{toLocation, jdbcType=VARCHAR}
		       </if>
		       <if test = "returnType != null and returnType != ''">
		        AND 	MI.RETURN_TYPE = #{returnType, jdbcType=VARCHAR}
		       </if> 
		       	) A
		WHERE 1 = 1
       <if test = "endYn != null and endYn != ''">
   		AND   A.END_FLAG = #{endYn, jdbcType=VARCHAR}
       </if>
       <if test = "cancelYn != null and cancelYn != ''">
        AND   A.CANCEL_FLAG = #{cancelYn, jdbcType=VARCHAR}
       </if>
        ORDER BY A.VENDOR_NAME, A.IO_TIME, A.ITEM_INPUT_ID
	</select>
	
	 <insert id="create_productReturnCancel" statementType="CALLABLE">
    {
        CALL SP_MOM_RETURN_PKG.P_CANCEL_PRODUCT_RETURN( 
          #{p_err_code, mode=OUT, jdbcType=VARCHAR}
        , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
        , #{divisionCd, mode=IN, jdbcType=VARCHAR}
        , #{companyCd, mode=IN, jdbcType=VARCHAR}
        , #{rtnType, mode=IN, jdbcType=VARCHAR}  
        , #{tnxType, mode=IN, jdbcType=VARCHAR} 
        ) 
    }
    </insert>
</mapper>