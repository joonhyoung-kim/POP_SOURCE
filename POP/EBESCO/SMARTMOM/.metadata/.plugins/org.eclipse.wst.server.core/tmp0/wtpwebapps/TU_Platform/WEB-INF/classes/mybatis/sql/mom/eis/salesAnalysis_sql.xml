<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.eis.salesAnalysis">
<!-- 	<select id="get_salesAnalysis_list" resultType="camelMap" parameterType="java.util.HashMap"> -->
<!-- 		 SELECT ITEM_GROUP_LARGE -->
<!-- 		  	  , MODEL -->
<!-- 		      , MAX(PLAN_M1) AS PLAN_M1 -->
<!-- 		      , MAX(SALES_M1) AS SALES_M1 -->
<!-- 		      , TRUNC(MAX(SALES_M1) / DECODE(MAX(PLAN_M1), 0, 1, MAX(PLAN_M1)) * 100, 1) AS RATE_M1 -->
<!-- 		      , MAX(PLAN_M2) AS PLAN_M2 -->
<!-- 		      , MAX(SALES_M2) AS SALES_M2 -->
<!-- 		      , TRUNC(MAX(SALES_M2) / DECODE(MAX(PLAN_M2), 0, 1, MAX(PLAN_M2)) * 100, 1) AS RATE_M2 -->
<!-- 		      , MAX(PLAN_M3) AS PLAN_M3 -->
<!-- 		      , MAX(SALES_M3) AS SALES_M3 -->
<!-- 		      , TRUNC(MAX(SALES_M3) / DECODE(MAX(PLAN_M3), 0, 1, MAX(PLAN_M3)) * 100, 1) AS RATE_M3 -->
<!-- 		      , MAX(PLAN_M4) AS PLAN_M4 -->
<!-- 		      , MAX(SALES_M4) AS SALES_M4 -->
<!-- 		      , TRUNC(MAX(SALES_M4) / DECODE(MAX(PLAN_M4), 0, 1, MAX(PLAN_M4)) * 100, 1) AS RATE_M4 -->
<!-- 		      , MAX(PLAN_M5) AS PLAN_M5 -->
<!-- 		      , MAX(SALES_M5) AS SALES_M5 -->
<!-- 		      , TRUNC(MAX(SALES_M5) / DECODE(MAX(PLAN_M5), 0, 1, MAX(PLAN_M5)) * 100, 1) AS RATE_M5 -->
<!-- 		      , MAX(PLAN_M6) AS PLAN_M6 -->
<!-- 		      , MAX(SALES_M6) AS SALES_M6 -->
<!-- 		      , TRUNC(MAX(SALES_M6) / DECODE(MAX(PLAN_M6), 0, 1, MAX(PLAN_M6)) * 100, 1) AS RATE_M6 -->
<!-- 		      , MAX(PLAN_M7) AS PLAN_M7 -->
<!-- 		      , MAX(SALES_M7) AS SALES_M7 -->
<!-- 		      , TRUNC(MAX(SALES_M7) / DECODE(MAX(PLAN_M7), 0, 1, MAX(PLAN_M7)) * 100, 1) AS RATE_M7 -->
<!-- 		      , MAX(PLAN_M8) AS PLAN_M8 -->
<!-- 		      , MAX(SALES_M8) AS SALES_M8 -->
<!-- 		      , TRUNC(MAX(SALES_M8) / DECODE(MAX(PLAN_M8), 0, 1, MAX(PLAN_M8)) * 100, 1) AS RATE_M8 -->
<!-- 		      , MAX(PLAN_M9) AS PLAN_M9 -->
<!-- 		      , MAX(SALES_M9) AS SALES_M9 -->
<!-- 		      , TRUNC(MAX(SALES_M9) / DECODE(MAX(PLAN_M9), 0, 1, MAX(PLAN_M9)) * 100, 1) AS RATE_M9 -->
<!-- 		      , MAX(PLAN_M10) AS PLAN_M10 -->
<!-- 		      , MAX(SALES_M10) AS SALES_M10 -->
<!-- 		      , TRUNC(MAX(SALES_M10) / DECODE(MAX(PLAN_M10), 0, 1, MAX(PLAN_M10)) * 100, 1) AS RATE_M10 -->
<!-- 		      , MAX(PLAN_M11) AS PLAN_M11 -->
<!-- 		      , MAX(SALES_M11) AS SALES_M11 -->
<!-- 		      , TRUNC(MAX(SALES_M11) / DECODE(MAX(PLAN_M11), 0, 1, MAX(PLAN_M11)) * 100, 1) AS RATE_M11 -->
<!-- 		      , MAX(PLAN_M12) AS PLAN_M12 -->
<!-- 		      , MAX(SALES_M12) AS SALES_M12 -->
<!-- 		      , TRUNC(MAX(SALES_M12) / DECODE(MAX(PLAN_M12), 0, 1, MAX(PLAN_M12)) * 100, 1) AS RATE_M12 -->
<!-- 		   FROM ( -->
<!-- 		        SELECT ITEM_GROUP_LARGE, MODEL -->
<!-- 		             , DECODE(B.M_SEQ, 1, PLAN_AMT, 0) AS PLAN_M1 -->
<!-- 		             , DECODE(B.M_SEQ, 2, PLAN_AMT, 0) AS PLAN_M2 -->
<!-- 		             , DECODE(B.M_SEQ, 3, PLAN_AMT, 0) AS PLAN_M3 -->
<!-- 		             , DECODE(B.M_SEQ, 4, PLAN_AMT, 0) AS PLAN_M4 -->
<!-- 		             , DECODE(B.M_SEQ, 5, PLAN_AMT, 0) AS PLAN_M5 -->
<!-- 		             , DECODE(B.M_SEQ, 6, PLAN_AMT, 0) AS PLAN_M6 -->
<!-- 		             , DECODE(B.M_SEQ, 7, PLAN_AMT, 0) AS PLAN_M7 -->
<!-- 		             , DECODE(B.M_SEQ, 8, PLAN_AMT, 0) AS PLAN_M8 -->
<!-- 		             , DECODE(B.M_SEQ, 9, PLAN_AMT, 0) AS PLAN_M9 -->
<!-- 		             , DECODE(B.M_SEQ, 10, PLAN_AMT, 0) AS PLAN_M10 -->
<!-- 		             , DECODE(B.M_SEQ, 11, PLAN_AMT, 0) AS PLAN_M11 -->
<!-- 		             , DECODE(B.M_SEQ, 12, PLAN_AMT, 0) AS PLAN_M12 -->
<!-- 		             , 0 AS SALES_M1 -->
<!-- 		             , 0 AS SALES_M2 -->
<!-- 		             , 0 AS SALES_M3 -->
<!-- 		             , 0 AS SALES_M4 -->
<!-- 		             , 0 AS SALES_M5 -->
<!-- 		             , 0 AS SALES_M6 -->
<!-- 		             , 0 AS SALES_M7 -->
<!-- 		             , 0 AS SALES_M8 -->
<!-- 		             , 0 AS SALES_M9 -->
<!-- 		             , 0 AS SALES_M10 -->
<!-- 		             , 0 AS SALES_M11 -->
<!-- 		             , 0 AS SALES_M12 -->
<!-- 		          FROM MOM_EIS_SALES_STATUS A -->
<!-- 		             , (SELECT YEAR||MONTH AS YYYYMM -->
<!-- 		                     , DENSE_RANK() OVER(ORDER BY YEAR||MONTH) AS M_SEQ  -->
<!-- 		                  FROM TH_MST_TIME -->
<!-- 		                 WHERE TO_DATE(YEAR||MONTH, 'yyyymm') BETWEEN ADD_MONTHS(TO_DATE(#{yyyymm, jdbcType=VARCHAR}, 'yyyymm'), - 11) AND TO_DATE(#{yyyymm, jdbcType=VARCHAR}, 'yyyymm') -->
<!-- 		                 GROUP BY YEAR, MONTH) B -->
<!-- 		         WHERE A.YYYYMM = B.YYYYMM  -->
<!-- 		           AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} -->
<!-- 		           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR} -->
<!-- 		       UNION ALL -->
<!-- 		        SELECT ITEM_GROUP_LARGE, MODEL -->
<!-- 		             , 0 AS PLAN_M1 -->
<!-- 		             , 0 AS PLAN_M2 -->
<!-- 		             , 0 AS PLAN_M3 -->
<!-- 		             , 0 AS PLAN_M4 -->
<!-- 		             , 0 AS PLAN_M5 -->
<!-- 		             , 0 AS PLAN_M6 -->
<!-- 		             , 0 AS PLAN_M7 -->
<!-- 		             , 0 AS PLAN_M8 -->
<!-- 		             , 0 AS PLAN_M9 -->
<!-- 		             , 0 AS PLAN_M10 -->
<!-- 		             , 0 AS PLAN_M11 -->
<!-- 		             , 0 AS PLAN_M12 -->
<!-- 		             , DECODE(B.M_SEQ, 1, SALES_AMT, 0) AS SALES_M1 -->
<!-- 		             , DECODE(B.M_SEQ, 2, SALES_AMT, 0) AS SALES_M2 -->
<!-- 		             , DECODE(B.M_SEQ, 3, SALES_AMT, 0) AS SALES_M3 -->
<!-- 		             , DECODE(B.M_SEQ, 4, SALES_AMT, 0) AS SALES_M4 -->
<!-- 		             , DECODE(B.M_SEQ, 5, SALES_AMT, 0) AS SALES_M5 -->
<!-- 		             , DECODE(B.M_SEQ, 6, SALES_AMT, 0) AS SALES_M6 -->
<!-- 		             , DECODE(B.M_SEQ, 7, SALES_AMT, 0) AS SALES_M7 -->
<!-- 		             , DECODE(B.M_SEQ, 8, SALES_AMT, 0) AS SALES_M8 -->
<!-- 		             , DECODE(B.M_SEQ, 9, SALES_AMT, 0) AS SALES_M9 -->
<!-- 		             , DECODE(B.M_SEQ, 10, SALES_AMT, 0) AS SALES_M10 -->
<!-- 		             , DECODE(B.M_SEQ, 11, SALES_AMT, 0) AS SALES_M11 -->
<!-- 		             , DECODE(B.M_SEQ, 12, SALES_AMT, 0) AS SALES_M12 -->
<!-- 		          FROM MOM_EIS_SALES_STATUS A -->
<!-- 		             , (SELECT YEAR||MONTH AS YYYYMM -->
<!-- 		                     , DENSE_RANK() OVER(ORDER BY YEAR||MONTH) AS M_SEQ  -->
<!-- 		                  FROM TH_MST_TIME -->
<!-- 		                 WHERE TO_DATE(YEAR||MONTH, 'yyyymm') BETWEEN ADD_MONTHS(TO_DATE(#{yyyymm, jdbcType=VARCHAR}, 'yyyymm'), - 11) AND TO_DATE(#{yyyymm, jdbcType=VARCHAR}, 'yyyymm') -->
<!-- 		                 GROUP BY YEAR, MONTH) B -->
<!-- 		         WHERE A.YYYYMM = B.YYYYMM  -->
<!-- 		           AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} -->
<!-- 		           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR} -->
<!-- 		        ) -->
<!-- 		    GROUP BY ITEM_GROUP_LARGE, MODEL -->
<!-- 		    ORDER BY ITEM_GROUP_LARGE, MODEL -->

<!-- 	</select> -->
	
	<select id="get_salesAnalysis_list" resultType="camelMap" parameterType="java.util.HashMap">
	  SELECT T.ITEM_BUSINESS
	       , T.ITEM_GROUP
	       , DECODE(GROUPING_ID(ITEM_MODEL), 0, ITEM_MODEL, #{MESSAGES30077, jdbcType=VARCHAR})    AS ITEM_MODEL       
	       , DECODE(GROUPING_ID(ITEM_MODEL), 0,  MIN(SEQ), 999999 )    AS SEQ      
	       , TRUNC(SUM(DECODE(T.YYYYMM, '202001', T.AMT, 0)) * 0.000001) AS AMT1
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202001', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE1
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202002', T.AMT, 0)) * 0.000001) AS AMT2
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202002', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE2
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202003', T.AMT, 0)) * 0.000001) AS AMT3
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202003', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE3
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202004', T.AMT, 0)) * 0.000001) AS AMT4
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202004', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE4
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202005', T.AMT, 0)) * 0.000001) AS AMT5
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202005', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE5
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202006', T.AMT, 0)) * 0.000001) AS AMT6
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202006', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE6
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202007', T.AMT, 0)) * 0.000001) AS AMT7
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202007', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE7
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202008', T.AMT, 0)) * 0.000001) AS AMT8
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202008', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE8
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202009', T.AMT, 0)) * 0.000001) AS AMT9
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202009', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE9
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202010', T.AMT, 0)) * 0.000001) AS AMT10
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202010', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE10
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202011', T.AMT, 0)) * 0.000001) AS AMT11
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202011', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE11
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202012', T.AMT, 0)) * 0.000001) AS AMT12
		   , TRUNC(SUM(DECODE(T.YYYYMM, '202012', T.FLUCTUATE, 0)) * 0.000001) AS FLUCTUATE12
	FROM   MOM_EIS_SALES_RESULT_SUM T
	WHERE  T.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	AND    T.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	AND    T.YYYY = #{yyyy, jdbcType=VARCHAR}
	GROUP BY ITEM_BUSINESS, ITEM_GROUP, ROLLUP( ITEM_MODEL ) 
	ORDER BY  2, 1, 4    
	</select>
	
	<select id="get_salesGraph_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT NVL(TRUNC(SUM(DECODE(P.MM, '01', P.AMT, 0)) * 0.000001),0) AS AMT1
	     , NVL(TRUNC(SUM(DECODE(P.MM, '02', P.AMT, 0)) * 0.000001),0) AS AMT2
	     , NVL(TRUNC(SUM(DECODE(P.MM, '03', P.AMT, 0)) * 0.000001),0) AS AMT3
	     , NVL(TRUNC(SUM(DECODE(P.MM, '04', P.AMT, 0)) * 0.000001),0) AS AMT4
	     , NVL(TRUNC(SUM(DECODE(P.MM, '05', P.AMT, 0)) * 0.000001),0) AS AMT5
	     , NVL(TRUNC(SUM(DECODE(P.MM, '06', P.AMT, 0)) * 0.000001),0) AS AMT6
	     , NVL(TRUNC(SUM(DECODE(P.MM, '07', P.AMT, 0)) * 0.000001),0) AS AMT7
	     , NVL(TRUNC(SUM(DECODE(P.MM, '08', P.AMT, 0)) * 0.000001),0) AS AMT8
	     , NVL(TRUNC(SUM(DECODE(P.MM, '09', P.AMT, 0)) * 0.000001),0) AS AMT9
	     , NVL(TRUNC(SUM(DECODE(P.MM, '10', P.AMT, 0)) * 0.000001),0) AS AMT10
	     , NVL(TRUNC(SUM(DECODE(P.MM, '11', P.AMT, 0)) * 0.000001),0) AS AMT11
	     , NVL(TRUNC(SUM(DECODE(P.MM, '12', P.AMT, 0)) * 0.000001),0) AS AMT12
	  FROM MOM_EIS_SALES_TREND_DATA P
	 WHERE P.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	   AND P.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	   AND P.YYYYMM = (SELECT MAX(YYYYMM) AS YYYYMM
	          FROM MOM_EIS_SALES_TREND_DATA
	         WHERE DIVISION_CD = P.DIVISION_CD
	           AND COMPANY_CD = P.COMPANY_CD) 
	    UNION ALL
	  SELECT TRUNC(SUM(DECODE(R.YYYYMM, '202001', R.AMT, 0)) * 0.000001) AS AMT1
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202002', R.AMT, 0)) * 0.000001) AS AMT2
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202003', R.AMT, 0)) * 0.000001) AS AMT3
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202004', R.AMT, 0)) * 0.000001) AS AMT4
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202005', R.AMT, 0)) * 0.000001) AS AMT5
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202006', R.AMT, 0)) * 0.000001) AS AMT6
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202007', R.AMT, 0)) * 0.000001) AS AMT7
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202008', R.AMT, 0)) * 0.000001) AS AMT8
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202009', R.AMT, 0)) * 0.000001) AS AMT9
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202010', R.AMT, 0)) * 0.000001) AS AMT10
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202011', R.AMT, 0)) * 0.000001) AS AMT11
	     , TRUNC(SUM(DECODE(R.YYYYMM, '202012', R.AMT, 0)) * 0.000001) AS AMT12
	  FROM MOM_EIS_SALES_RESULT R
	 WHERE R.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	   AND R.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	   AND R.YYYY = #{yyyy, jdbcType=VARCHAR}
	</select>
	
	<select id="get_yyyy_list" resultType="camelMap" parameterType="java.util.HashMap">
<!-- 	SELECT DISTINCT YYYYMM AS CODE -->
<!-- 	     , SUBSTR(YYYYMM, 0,4)|| '-'||SUBSTR(YYYYMM, 5,2) AS NAME -->
<!-- 	  FROM MOM_EIS_SALES_STATUS -->
<!-- 	 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} -->
<!-- 	   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR} -->
<!-- 	 ORDER BY YYYYMM DESC -->
		SELECT DISTINCT YYYY AS CODE
		     , YYYY AS NAME
		  FROM MOM_EIS_SALES_RESULT_SUM
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR} 
		 ORDER BY 1 DESC
	</select>
	
</mapper>