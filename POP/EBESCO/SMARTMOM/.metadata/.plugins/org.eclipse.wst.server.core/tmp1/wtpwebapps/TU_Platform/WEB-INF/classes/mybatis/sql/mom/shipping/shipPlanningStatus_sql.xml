<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.shipping.shipPlanningStatus">
	<!-- modify_hists 
    * XMOMA11 / 20191105 / gyp / TRIM, UPPER 처리
     -->
	<select id="get_shipPlanningStatus_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MSP.DIVISION_CD
             , MSP.COMPANY_CD
             , MSP.SHIPMENT_GROUP_ID     
             , MSP.SHIPMENT_SEQ_NO
             , MSP.CUSTOMER_WO_ID
             , MSP.CUSTOMER_PO_ID
             , MSP.CUSTOMER_ORG_CODE
             , MSP.CUSTOMER_LINE_CD
             , MSP.ITEM_ID
             , MID.ITEM_NAME
             , MID.ITEM_GROUP_CODE     AS MODEL
             , MSP.DEPARTURE_NUMBER
             , TO_CHAR(MSP.DEPARTURE_DATE, 'YYYY-MM-DD') AS DEPARTURE_DATE
             , MSP.DEPARTURE_QTY
             , MSP.DEPARTURE_SPLIT_ID
             , MSP.CAR_MODEL
             , MSP.DESCRIPTION
             , TO_CHAR(MSP.CANCEL_DATE, 'YYYY-MM-DD') AS CANCEL_DATE
             , MSP.SHIP_STATE
             , MSP.SHIP_DATE
             , MSP.CAR_MODEL
             , MSP.BAR_CODE
		FROM   MOM_SHIPMENT_PLAN   MSP
		     , MOM_ITEM_DEFINITION MID
		WHERE  MSP.DIVISION_CD = MID.DIVISION_CD
        AND    MSP.COMPANY_CD  = MID.COMPANY_CD
        AND    MSP.ITEM_ID     = MID.ITEM_ID
		AND    MSP.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    MSP.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND    MSP.SHIP_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR},'YYYY-MM-DD') + 23.9997/24
		<if test = "shipmentGroupId != null and shipmentGroupId != ''">
		AND    UPPER(MSP.SHIPMENT_GROUP_ID) LIKE '%' || TRIM(UPPER(#{shipmentGroupId, jdbcType=VARCHAR})) || '%'
		</if>
		<if test = "customerWoId != null and customerWoId != ''">
        AND    UPPER(MSP.CUSTOMER_WO_ID) LIKE '%' || TRIM(UPPER(#{customerWoId, jdbcType=VARCHAR})) || '%'
        </if>
        <if test = "customerPoId != null and customerPoId != ''">
        AND    UPPER(MSP.CUSTOMER_PO_ID) LIKE '%' || TRIM(UPPER(#{customerPoId, jdbcType=VARCHAR})) || '%'
        </if>
        <if test = "partNo != null and partNo != ''">
        AND    (MSP.ITEM_ID LIKE '%' || TRIM(UPPER(#{partNo, jdbcType=VARCHAR})) || '%' 
        	   OR UPPER(MID.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{partNo, jdbcType=VARCHAR})) || '%' )
        </if>
        <if test = "cancelFlag != null and cancelFlag != ''">
	        <choose>
		        <when test = 'cancelFlag == "N"'>
		         AND    MSP.CANCEL_DATE IS NULL
		        </when>
		        <otherwise>
		         AND    MSP.CANCEL_DATE IS NOT NULL
		        </otherwise>
	        </choose>
        </if>
		ORDER BY MSP.BAR_CODE
				
	</select>
	
	<select id="get_shipPlanningStatusExcelPrint_list" resultType="camelMap" parameterType="java.util.HashMap">
	  	SELECT MIN (DECODE (RNUM, 1, A.MODEL, '')) AS MODEL1
	         , MIN (DECODE (RNUM, 1, A.NR_ZLECENIA, '')) AS NR_ZLECENIA1
	       	 , MIN (DECODE (RNUM, 1, A.ILOSC, '')) AS ILOSC1
	         , MIN (DECODE (RNUM, 1, A.CAR_MODEL, '')) AS CAR_MODEL1
	         , MIN (DECODE (RNUM, 1, A.INDEKS, '')) AS INDEKS1
	         , MIN (DECODE (RNUM, 1, A.NAZWA_MATERIALU, '')) AS NAZWA_MATERIALU1
	         , MIN (DECODE (RNUM, 1, A.BAR_CODE, '')) AS BAR_CODE1
	         , MIN (DECODE (RNUM, 2, A.MODEL, '')) AS MODEL2
	         , MIN (DECODE (RNUM, 2, A.NR_ZLECENIA, '')) AS NR_ZLECENIA2
	         , MIN (DECODE (RNUM, 2, A.ILOSC, '')) AS ILOSC2
	         , MIN (DECODE (RNUM, 2, A.CAR_MODEL, '')) AS CAR_MODEL2
	         , MIN (DECODE (RNUM, 2, A.INDEKS, '')) AS INDEKS2
	         , MIN (DECODE (RNUM, 2, A.NAZWA_MATERIALU, '')) AS NAZWA_MATERIALU2
	         , MIN (DECODE (RNUM, 2, A.BAR_CODE, '')) AS BAR_CODE2
	         , MIN (DECODE (RNUM, 3, A.MODEL, '')) AS MODEL3
	         , MIN (DECODE (RNUM, 3, A.NR_ZLECENIA, '')) AS NR_ZLECENIA3
	         , MIN (DECODE (RNUM, 3, A.ILOSC, '')) AS ILOSC3
	         , MIN (DECODE (RNUM, 3, A.CAR_MODEL, '')) AS CAR_MODEL3
	         , MIN (DECODE (RNUM, 3, A.INDEKS, '')) AS INDEKS3
	         , MIN (DECODE (RNUM, 3, A.NAZWA_MATERIALU, '')) AS NAZWA_MATERIALU3
	         , MIN (DECODE (RNUM, 3, A.BAR_CODE, '')) AS BAR_CODE3
	         , MIN (DECODE (RNUM, 4, A.MODEL, '')) AS MODEL4
	         , MIN (DECODE (RNUM, 4, A.NR_ZLECENIA, '')) AS NR_ZLECENIA4
	         , MIN (DECODE (RNUM, 4, A.ILOSC, '')) AS ILOSC4
	         , MIN (DECODE (RNUM, 4, A.CAR_MODEL, '')) AS CAR_MODEL4
	         , MIN (DECODE (RNUM, 4, A.INDEKS, '')) AS INDEKS4
	         , MIN (DECODE (RNUM, 4, A.NAZWA_MATERIALU, '')) AS NAZWA_MATERIALU4
	         , MIN (DECODE (RNUM, 4, A.BAR_CODE, '')) AS BAR_CODE4
	         , MIN (DECODE (RNUM, 5, A.MODEL, '')) AS MODEL5
	         , MIN (DECODE (RNUM, 5, A.NR_ZLECENIA, '')) AS NR_ZLECENIA5
	         , MIN (DECODE (RNUM, 5, A.ILOSC, '')) AS ILOSC5
	         , MIN (DECODE (RNUM, 5, A.CAR_MODEL, '')) AS CAR_MODEL5
	         , MIN (DECODE (RNUM, 5, A.INDEKS, '')) AS INDEKS5
	         , MIN (DECODE (RNUM, 5, A.NAZWA_MATERIALU, '')) AS NAZWA_MATERIALU5
	         , MIN (DECODE (RNUM, 5, A.BAR_CODE, '')) AS BAR_CODE5
	         , MIN (DECODE (RNUM, 6, A.MODEL, '')) AS MODEL6
	         , MIN (DECODE (RNUM, 6, A.NR_ZLECENIA, '')) AS NR_ZLECENIA6
	         , MIN (DECODE (RNUM, 6, A.ILOSC, '')) AS ILOSC6
	         , MIN (DECODE (RNUM, 6, A.CAR_MODEL, '')) AS CAR_MODEL6
	         , MIN (DECODE (RNUM, 6, A.INDEKS, '')) AS INDEKS6
	         , MIN (DECODE (RNUM, 6, A.NAZWA_MATERIALU, '')) AS NAZWA_MATERIALU6
	         , MIN (DECODE (RNUM, 6, A.BAR_CODE, '')) AS BAR_CODE6
    	  FROM (SELECT A.MODEL
	                 , A.NR_ZLECENIA
	                 , A.ILOSC
	                 , A.CAR_MODEL
	                 , A.INDEKS
	                 , A.NAZWA_MATERIALU
	                 , A.BAR_CODE
	                 , (FLOOR (A.RNUM / 6) - DECODE (MOD (A.RNUM, 6), 0, 1, 0)) + 1 AS CNT
	                 , ROW_NUMBER () OVER ( PARTITION BY ( FLOOR (A.RNUM / 6) - DECODE (MOD (A.RNUM, 6), 0, 1, 0)) + 1 ORDER BY A.BAR_CODE) AS rnum
	              FROM (SELECT MSO.SALES_ITEM_ID AS MODEL
	                         , MSO.CUSTOMER_PO_ID AS NR_ZLECENIA
	                         , MSP.DEPARTURE_QTY || '/' || (MSO.ORDER_QTY - NVL (MSO.CANCEL_QTY, 0)) AS ILOSC
	                         , MSP.CAR_MODEL
	                         , MID.ITEM_NAME AS INDEKS
	                         , MSO.ITEM_ID AS NAZWA_MATERIALU
	                         , '*' || MSP.BAR_CODE || '*' AS BAR_CODE
	                         , ROW_NUMBER () OVER (ORDER BY MSP.BAR_CODE DESC) AS rnum
	                      FROM MOM_SHIPMENT_PLAN MSP
	                         , MOM_SALES_ORDER MSO
	                         , MOM_ITEM_DEFINITION MID
	                     WHERE MSP.DIVISION_CD = MSO.DIVISION_CD
	                       AND MSP.COMPANY_CD = MSO.COMPANY_CD
	                       AND MSP.CUSTOMER_WO_ID = MSO.CUSTOMER_PO_ID
	                       AND MSP.ITEM_ID = MSO.ITEM_ID
	                       AND MSP.DIVISION_CD = MID.DIVISION_CD
	                       AND MSP.COMPANY_CD = MID.COMPANY_CD
	                       AND MSP.ITEM_ID = MID.ITEM_ID
	                       AND MSP.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	                       AND MSP.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	                       AND MSP.BAR_CODE IN(${barCodes})
	                       ORDER BY MSP.BAR_CODE
	                   ) A
	          ) A
	    GROUP BY CNT
	</select>
	
	<insert id="create_shipPlanningCancel" statementType="CALLABLE">
		{
			CALL SP_MOM_SALES_ORDER_PKG.P_CANCEL_SHIPMENT_PLAN (
				 #{p_err_code, mode=OUT, jdbcType=VARCHAR}
				,#{p_err_msg, mode=OUT, jdbcType=VARCHAR}
				,#{divisionCd, mode=IN, jdbcType=VARCHAR}
				,#{companyCd, mode=IN, jdbcType=VARCHAR}
				,#{shipmentGroupId, mode=IN, jdbcType=VARCHAR}
				,#{userId, mode=IN, jdbcType=VARCHAR}
			)
		}
	</insert>

</mapper>