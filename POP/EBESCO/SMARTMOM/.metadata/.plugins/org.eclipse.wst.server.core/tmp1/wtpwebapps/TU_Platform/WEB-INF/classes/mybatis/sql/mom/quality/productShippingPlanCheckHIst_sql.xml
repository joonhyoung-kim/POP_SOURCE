<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.quality.productShippingPlanCheckHist">
	<select id="get_productShippingPlanCheckHistUp_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.CUSTOMER_PO_ID
		     , MAX(A.DEFECT_RESULT_ID) AS DEFECT_RESULT_ID
		     , MAX(D.DESCRIPTION) AS SPEC_SPECIFICATION
		     , MAX(TO_CHAR(A.STATE_TIME, 'YYYY-MM-DD')) AS STATE_TIME
		     , MAX(TO_CHAR(A.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS')) AS UPDATE_DATE
		     , MAX(A.VENDOR_CD) AS VENDOR_CD
		     , MAX(C.VENDOR_NAME) AS VENDOR_NAME
		     , MAX(A.ITEM_ID) AS ITEM_ID
		     , MAX(B.ITEM_NAME) AS ITEM_NAME
		     , MAX(A.PRODUCT_QTY) AS PRODUCT_QTY
		     , MAX(A.JUDGMENT_ID) AS JUDGMENT_ID
		     , DECODE(MAX(A.JUDGMENT_ID), 'Y', #{MESSAGES30064, jdbcType=VARCHAR}, #{MESSAGES30063, jdbcType=VARCHAR}) AS JUDGMENT
		     , MAX(A.CHECK_LEVEL) AS CHECK_LEVEL
		     , MAX(A.AQL) AS AQL
		     , MAX(A.SAMPLING_BASE) AS SAMPLING_BASE
		     , MAX(A.MEASURE_METHOD) AS MEASURE_METHOD
		     , MAX(D.CHECK_METHOD) AS CHECK_METHOD
		     , MAX(A.UPDATE_BY) AS UPDATE_BY
		     , SUM(NVL(A.DEFECT_QTY, 0)) AS DEFECT_QTY
		     , <![CDATA[
		     	CASE
		         WHEN MAX(A.MEASURE_METHOD) = 'COUNT' THEN 
		             CASE
		               WHEN MAX(A.PRODUCT_QTY) < MAX(E.SAMPLE_QTY) THEN MAX(A.PRODUCT_QTY)
		               ELSE MAX(E.SAMPLE_QTY)
		             END
		         ELSE MAX(D.SAMPLE_CNT)
		       END AS SAMPLE_QTY
		     ]]>
		     , MAX(B.SPECIFICATION) AS SPECIFICATION
		  FROM MOM_DEFECT_RESULT A
		     , MOM_ITEM_DEFINITION B
		     , MOM_VENDOR C
		     , MOM_MEASURE_SPEC D
		     , MOM_AQL E
		 WHERE A.DIVISION_CD = B.DIVISION_CD(+)
		   AND A.DIVISION_CD = C.DIVISION_CD(+)
		   AND A.DIVISION_CD = D.DIVISION_CD
		   AND A.DIVISION_CD = E.DIVISION_CD(+)
		   AND A.MEASURE_TYPE = 'OQC'
		   AND A.DEFECT_STATE = 'FINISHED'
		   AND A.VENDOR_CD = C.VENDOR_CD(+)
		   AND A.ITEM_ID = D.ITEM_ID
		   AND A.MEASURE_TYPE = D.MEASURE_TYPE
		   AND A.MEASURE_METHOD = D.MEASURE_METHOD
		   AND A.GAUGE_METHOD = D.GAUGE_METHOD
		   AND A.CHECK_LEVEL = E.AQL_GROUP_ID(+)
		   AND A.AQL = E.AQL_ID(+)
		   AND A.PRODUCT_QTY BETWEEN E.MIN_LOT_COUNT(+) AND E.MAX_LOT_COUNT(+)
		   AND A.ITEM_ID = B.ITEM_ID(+)
		   <if test="fromDate != null and fromDate != ''">
		   AND TRUNC(A.STATE_TIME) BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd')
		   </if>
		    <if test="itemId != null and itemId != ''">
		    AND (A.ITEM_ID LIKE UPPER('%' || #{itemId, jdbcType=VARCHAR} || '%')
		        OR UPPER(B.ITEM_NAME) LIKE UPPER('%' ||#{itemId, jdbcType=VARCHAR} || '%')
		        OR UPPER(B.SPECIFICATION) LIKE UPPER('%' || #{itemId, jdbcType=VARCHAR} || '%'))    
		   </if>
		     <if test="customerPoId != null and customerPoId != ''">
		    AND A.CUSTOMER_PO_ID LIKE '%'||UPPER(#{customerPoId, jdbcType=VARCHAR})||'%'    
		   </if>
		    <if test="vendorCd != null and vendorCd != ''">
		    AND A.VENDOR_CD = #{vendorCd, jdbcType=VARCHAR}
		   </if>
		     <if test="judgmentId != null and judgmentId != ''">
		   AND A.JUDGMENT_ID = #{judgmentId, jdbcType=VARCHAR}  
		   </if>
		 GROUP BY A.CUSTOMER_PO_ID, A.ITEM_ID, A.VENDOR_CD
		 ORDER BY STATE_TIME DESC, A.CUSTOMER_PO_ID, A.ITEM_ID
	</select>
	
	<select id="get_productShippingPlanCheckHistDown_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.DEFECT_RESULT_ID
		     , TO_CHAR(A.STATE_TIME, 'YYYY-MM-DD HH24:MI:SS') AS STATE_TIME
		     , A.MEASURE_METHOD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'MEASURE_METHOD', A.MEASURE_METHOD) FROM DUAL) AS MEASURE_METHOD_NAME
		     , A.MEASURE_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'MEASURE_TYPE', A.MEASURE_TYPE) FROM DUAL) AS MEASURE_TYPE_NAME
		     , B.SPECIFICATION
		     , A.GAUGE_METHOD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'GAUGE_METHOD', A.GAUGE_METHOD) FROM DUAL) AS GAUGE_METHOD_NAME
		     , A.UNIT
		     , A.TARGET
		     , TO_CHAR(A.USL, 'FM999,999,999,999.00') USL
		     , TO_CHAR(A.LSL, 'FM999,999,999,999.00') LSL
		     , A.ITEM_VALUE1
		     , A.ITEM_VALUE2
		     , A.ITEM_VALUE3
		     , A.ITEM_VALUE4
		     , A.ITEM_VALUE5
		     , A.PRODUCT_QTY
		     , A.DEFECT_QTY
		     , A.SAMPLING_BASE
		     , A.CHECK_LEVEL
		     , TO_CHAR(A.AQL, 'FM999,999,999,999.00') AQL
		     , A.DEFECT_STATE
		     , A.ITEM_ID
		     , B.ITEM_NAME
		     , A.LOCATION_CD
		     , A.VENDOR_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(A.DIVISION_CD, A.COMPANY_CD, A.VENDOR_CD) FROM DUAL) AS VENDOR_NAME
		     , A.CUSTOMER_PO_ID
		     , A.JUDGMENT_ID
		     , DECODE(A.JUDGMENT_ID, 'Y', #{MESSAGES30064, jdbcType=VARCHAR}, #{MESSAGES30063, jdbcType=VARCHAR}) JUDGE
		     , A.REASON_CODE
		     , E.DESCRIPTION AS SPEC_SPECIFICATION
		     , A.DESCRIPTION AS DEFECT_DESCRIPTION
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'IQC_CODE', A.REASON_CODE) FROM DUAL) AS REASON_CODE_NAME
		     , A.PROBLEM_REASON
		     , A.DEFECT_BY
		     , DECODE( (SELECT 'Y'
		                  FROM MOM_FILE
		                 WHERE ENTITY_ID = A.DEFECT_RESULT_ID
		                   AND USE_YN = 'Y'
		                   AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		                   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}), 'Y', 'Y', 'N') AS IS_FILE
		     , E.CHECK_METHOD
		     , 
		     <![CDATA[
		     CASE
		         WHEN A.MEASURE_METHOD = 'COUNT' THEN 
		             CASE
		               WHEN A.PRODUCT_QTY < F.SAMPLE_QTY THEN A.PRODUCT_QTY
		               ELSE F.SAMPLE_QTY
		             END
		         ELSE E.SAMPLE_CNT
		       END AS SAMPLE_QTY
		     
 		     ]]>
		     , F.REJECT
		  FROM MOM_DEFECT_RESULT A
		     , MOM_ITEM_DEFINITION B
		     , MOM_MEASURE_SPEC E
		     , MOM_AQL F
		 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND A.DIVISION_CD = B.DIVISION_CD(+)
		   AND A.COMPANY_CD = B.COMPANY_CD(+)
		   AND A.DIVISION_CD = E.DIVISION_CD
		   AND A.COMPANY_CD = E.COMPANY_CD
		   AND A.ITEM_ID = B.ITEM_ID(+)
		   AND A.ITEM_ID = E.ITEM_ID
		   AND A.GAUGE_METHOD = E.GAUGE_METHOD
		   AND A.CHECK_LEVEL = F.AQL_GROUP_ID(+)
		   AND A.AQL = F.AQL_ID(+)
		   AND A.PRODUCT_QTY BETWEEN F.MIN_LOT_COUNT(+) AND F.MAX_LOT_COUNT(+)
		   AND A.MEASURE_TYPE = 'OQC'
		   AND A.DEFECT_STATE = 'FINISHED'
		  <if test="itemId != null and itemId != ''">
		   AND A.ITEM_ID = #{itemId, jdbcType=VARCHAR}
		  </if>
		  <if test="customerPoId != null and customerPoId != ''">
		   AND A.CUSTOMER_PO_ID = #{customerPoId, jdbcType=VARCHAR}
		  </if>
		 ORDER BY A.UPDATE_DATE DESC
	</select>

</mapper>