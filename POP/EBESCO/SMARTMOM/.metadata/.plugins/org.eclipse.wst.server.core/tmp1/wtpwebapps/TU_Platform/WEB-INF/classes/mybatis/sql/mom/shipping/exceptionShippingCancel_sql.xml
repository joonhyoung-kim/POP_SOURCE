<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.shipping.exceptionShippingCancel">
	<select id="get_exceptionShippingCancel_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MISI.LOCATION_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MISI.DIVISION_CD, MISI.COMPANY_CD, MISI.LOCATION_CD) FROM DUAL) LOCATION_NAME
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MID.DIVISION_CD, MID.COMPANY_CD,'ITEM_TYPE', MID.ITEM_TYPE) FROM DUAL) ITEM_TYPE_NAME
	         , MISI.ITEM_ID
	         , MID.ITEM_NAME
	         , MID.SPECIFICATION
	         , MID.UNIT
	         , MISI.QTY EX_SHIPPING_QTY
	         , MISI.EXCEPTION_INOUT_CD EXCEPTION_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MISI.DIVISION_CD, MISI.COMPANY_CD, 'EXCEPTION_OUT_FLAG', MISI.EXCEPTION_INOUT_CD) FROM DUAL) EXCEPTION_FLAG_NAME
	         , TO_CHAR(MISI.IO_TIME, 'YYYY-MM-DD') EX_SHIPPING_DATE
	         , TO_CHAR(NVL( PV.IO_TIME ,MOM_COMMON_PKG.FN_GET_LOCAL_TIME(MISI.DIVISION_CD, MISI.COMPANY_CD)),'YYYY-MM-DD') CANCEL_DATE
	         , MISI.DESCRIPTION
	         , DECODE(PV.ITEM_STOCK_INOUT_ID, NULL, 'N', 'Y') CANCEL_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME ( MISI.DIVISION_CD
		                                               , MISI.COMPANY_CD
		                                               , 'Y_N'
		                                               , DECODE (PV.ITEM_STOCK_INOUT_ID, NULL, 'N', 'Y'))
            	  FROM DUAL) CANCEL_FLAG_NAME
	         , MISI.ITEM_STOCK_INOUT_ID
	      FROM MOM_ITEM_STOCK_INOUT MISI
	         , MOM_ITEM_DEFINITION MID
	         , MOM_ITEM_STOCK_INOUT PV
	     WHERE MISI.DIVISION_CD = MID.DIVISION_CD
	       AND MISI.COMPANY_CD = MID.COMPANY_CD
	       AND MISI.ITEM_ID = MID.ITEM_ID
	       AND MISI.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND MISI.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	       AND MISI.ITEM_STOCK_INOUT_ID = PV.PREV_STOCK_INOUT_ID(+)
	       AND MISI.DIVISION_CD = PV.DIVISION_CD(+)
	       AND MISI.COMPANY_CD = PV.COMPANY_CD(+)
	       AND MID.USE_YN = 'Y'
	       AND MISI.IO_CATEGORY = 'EON001'
	       AND MISI.IO_TIME BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') AND (TO_DATE(#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd'))
	 <if test ="itemId != null and itemId != ''">
	       AND (MISI.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%'
	           OR UPPER(MID.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%')
	 </if>
	 <if test="itemType != null and itemType != ''">
	       AND MID.ITEM_TYPE = #{itemType, jdbcType=VARCHAR}
	 </if>
	 <if test="location != null and location != ''">
	       AND MISI.LOCATION_CD = #{location, jdbcType=VARCHAR}
	 </if>
	 <if test="exShippingType != null and exShippingType !=''">
	       AND MISI.EXCEPTION_INOUT_CD = #{exShippingType, jdbcType=VARCHAR}
	 </if>
	     ORDER BY MISI.IO_TIME DESC, MISI.LOCATION_CD, MID.ITEM_ID 
	</select>
	
	<insert id="create_itemStockOutExceptionCancel" statementType="CALLABLE">
	{
		CALL P_ITEM_STOCK_OUT_EXCEPTION_C ( 
			 #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{itemStockInoutId, mode=IN, jdbcType=VARCHAR}
           , #{cancelDate, mode=IN, jdbcType=VARCHAR}
           , #{createBy, mode=IN, jdbcType=VARCHAR}
		)
	}
	</insert>
	
</mapper>