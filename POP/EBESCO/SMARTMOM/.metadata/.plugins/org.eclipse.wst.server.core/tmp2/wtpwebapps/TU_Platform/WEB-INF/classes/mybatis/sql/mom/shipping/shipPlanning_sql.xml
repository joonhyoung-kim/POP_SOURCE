<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.shipping.shipPlanning">
	<!-- modify_hists 
    * XMOMA11 / 20191105 / gyp / TRIM, UPPER 처리
     -->
	<select id="get_shipPlanning_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.DIVISION_CD
           , A.COMPANY_CD
           , A.CUSTOMER_PO_ID   
           , A.CUSTOMER_PO_NO   
           , A.SALES_ORDER_ID       
           , A.ITEM_ID          
           , A.ITEM_NAME        
           , A.SALES_ITEM_ID    
           , A.HS_PART_NO       
           , A.LGE_PART_NO      
           , A.VENDOR_CD         
           , A.VENDOR_NAME
           , (SELECT MOM_COMMON_PKG.FN_GET_SHIP_OUT_LOCATION( A.DIVISION_CD, A.COMPANY_CD, A.ITEM_ID ) FROM DUAL ) AS FROM_LOCATION_CD
           , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(A.DIVISION_CD, A.COMPANY_CD, (SELECT MOM_COMMON_PKG.FN_GET_SHIP_OUT_LOCATION( A.DIVISION_CD, A.COMPANY_CD, A.ITEM_ID ) FROM DUAL ))
                FROM   DUAL )  AS FROM_LOCATION_NAME
           , (SELECT MOM_COMMON_PKG.FN_GET_CUSTOMER_LOCATION(A.DIVISION_CD, A.COMPANY_CD, A.VENDOR_CD ) FROM DUAL ) TO_LOCATION_CD  
           , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(A.DIVISION_CD, A.COMPANY_CD, (SELECT MOM_COMMON_PKG.FN_GET_CUSTOMER_LOCATION(A.DIVISION_CD, A.COMPANY_CD, A.VENDOR_CD ) FROM DUAL ))
                FROM   DUAL )  AS TO_LOCATION_NAME     
           , A.ORDER_QTY        
           , A.CANCEL_QTY        
           , A.SHIP_QTY          
           , A.ORDER_QTY - A.CANCEL_QTY - A.SHIP_QTY  AS REMAIN_QTY
           , A.ORG_CODE        
           , TO_CHAR(A.DUE_DATE, 'YYYY-MM-DD') AS      DUE_DATE     
           , A.CUSTOMER_LINE_CD  
           , TO_CHAR(A.DEPARTURE_DATE , 'YYYY-MM-DD') AS  DEPARTURE_DATE
           , A.DEPARTURE_NUMBER 
           , A.TRANSACTION_ID   
           , CASE WHEN B2BI_DEPARTURE_USE_FLAG = 'Y' THEN  A.DEPARTURE_QTY
                  ELSE A.ORDER_QTY - A.CANCEL_QTY - A.SHIP_QTY
             END    AS   DEPARTURE_QTY   
      FROM   (
              SELECT DISTINCT R.DIVISION_CD
                   , R.COMPANY_CD
                   , R.CUSTOMER_PO_ID
                   , R.CUSTOMER_PO_NO
                   , R.SALES_ORDER_ID
                   , R.ITEM_ID
                   , R.ITEM_NAME
                   , R.SALES_ITEM_ID
                   , R.HS_PART_NO
                   , R.LGE_PART_NO
                   , R.VENDOR_CD
                   , R.VENDOR_NAME
                   , R.ORDER_QTY
                   , NVL(R.CANCEL_QTY, 0) AS CANCEL_QTY
                   , (SELECT MOM_COMMON_PKG.FN_GET_SHIPMENT_RESULT_QTY( R.DIVISION_CD
                                                                      , R.COMPANY_CD
                                                                      , R.CUSTOMER_PO_NO
                                                                      , R.ITEM_ID)
                      FROM   DUAL) AS SHIP_QTY
                   , R.ORG_CODE
                   , R.DUE_DATE
                   , R.CUSTOMER_LINE_CD
                   , MLD.DEPARTURE_DATE
                   , MLD.DEPARTURE_NUMBER
                   , MLD.TRANSACTION_ID
                   , MLD.DEPARTURE_QTY
                   , P.B2BI_DEPARTURE_USE_FLAG
              FROM   MOM_SALES_ORDER_V R
                   , MOM_PARAMETER P
                   , MOM_VENDOR_MAPPING M  
                   , MOM_LGE_B2B_DEPARTURE MLD
              WHERE  R.DIVISION_CD = P.DIVISION_CD
              AND    R.COMPANY_CD  = P.COMPANY_CD
              AND    R.DIVISION_CD = M.DIVISION_CD
              AND    R.COMPANY_CD  = M.COMPANY_CD
              AND    R.VENDOR_CD   = M.VENDOR_CD
              AND    P.B2BI_DEPARTURE_USE_FLAG = 'Y'
              AND    R.DIVISION_CD    = MLD.DIVISION_CD
              AND    R.CUSTOMER_PO_NO = MLD.PO_NO
              AND    MLD.DEPARTURE_STATUS NOT IN ('RETURN TO VENDOR', 'CANCELLED')
              AND    MLD.APPLY_FLAG = 'N'
		      AND    R.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		      AND    R.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		      AND    MLD.DEPARTURE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') 
		                                    AND TO_DATE(#{toDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') + 23.9997/24
		       <if test = "customerWo != null and customerWo != ''">
	    		AND UPPER(R.CUSTOMER_PO_ID) LIKE '%' || TRIM(UPPER(#{customerWo, jdbcType=VARCHAR})) || '%'
		       </if>
		       <if test = "customerPoNo != null and customerPoNo != ''">
		    	AND UPPER(R.CUSTOMER_PO_NO) LIKE '%' || TRIM(UPPER(#{customerPoNo, jdbcType=VARCHAR})) || '%'
		    	</if>
		       <if test = "itemName != null and itemName != ''">
	             AND (R.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
 	           	      OR UPPER(R.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')  
	           </if>
		        UNION ALL
              SELECT DISTINCT R.DIVISION_CD
                   , R.COMPANY_CD
                   , R.CUSTOMER_PO_ID
                   , R.CUSTOMER_PO_NO
                   , R.SALES_ORDER_ID
                   , R.ITEM_ID
                   , R.ITEM_NAME
                   , R.SALES_ITEM_ID
                   , R.HS_PART_NO
                   , R.LGE_PART_NO
                   , R.VENDOR_CD
                   , R.VENDOR_NAME
                   , R.ORDER_QTY
                   , NVL(R.CANCEL_QTY, 0) AS CANCEL_QTY
                   , (SELECT MOM_COMMON_PKG.FN_GET_SHIPMENT_RESULT_QTY( R.DIVISION_CD
                                                                      , R.COMPANY_CD
                                                                      , R.CUSTOMER_PO_NO
                                                                      , R.ITEM_ID)
                      FROM   DUAL) AS SHIP_QTY
                   , R.ORG_CODE
                   , R.DUE_DATE
                   , R.CUSTOMER_LINE_CD
                   , NULL                                                   AS DEPARTURE_DATE
                   , ''                                                     AS DEPARTURE_NUMBER
                   , ''                                                     AS TRANSACTION_ID
                   , NULL                                                   AS DEPARTURE_QTY
                   , P.B2BI_DEPARTURE_USE_FLAG
              FROM   MOM_SALES_ORDER_V R
                   , MOM_PARAMETER P
              WHERE  R.DIVISION_CD = P.DIVISION_CD
              AND    R.COMPANY_CD  = P.COMPANY_CD
              AND    P.B2BI_DEPARTURE_USE_FLAG = 'Y'
              AND    NOT EXISTS ( SELECT '*' 
                                  FROM   MOM_VENDOR_MAPPING V
                                  WHERE  V.DIVISION_CD = P.DIVISION_CD
                                  AND    V.COMPANY_CD  = P.COMPANY_CD 
                                  AND    V.VENDOR_CD   = R.VENDOR_CD)
		        AND    R.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		        AND    R.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		        AND    R.DUE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') 
		                              AND TO_DATE(#{toDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') + 23.9997/24
		        <if test = "customerWo != null and customerWo != ''">
	    		AND UPPER(R.CUSTOMER_PO_ID) LIKE '%' || TRIM(UPPER(#{customerWo, jdbcType=VARCHAR})) || '%'
		       </if>
		       <if test = "customerPoNo != null and customerPoNo != ''">
		    	AND UPPER(R.CUSTOMER_PO_NO) LIKE '%' || TRIM(UPPER(#{customerPoNo, jdbcType=VARCHAR})) || '%'
		    	</if>
		       <if test = "itemName != null and itemName != ''">
	             AND (R.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
 	           	      OR UPPER(R.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')  
	           </if> 
		        UNION ALL
              SELECT R.DIVISION_CD
                   , R.COMPANY_CD
                   , R.CUSTOMER_PO_ID
                   , R.CUSTOMER_PO_NO
                   , R.SALES_ORDER_ID
                   , R.ITEM_ID
                   , R.ITEM_NAME
                   , R.SALES_ITEM_ID
                   , R.HS_PART_NO
                   , R.LGE_PART_NO
                   , R.VENDOR_CD
                   , R.VENDOR_NAME
                   , R.ORDER_QTY
                   , NVL(R.CANCEL_QTY, 0) AS CANCEL_QTY
                   , (SELECT MOM_COMMON_PKG.FN_GET_SHIPMENT_RESULT_QTY( R.DIVISION_CD
                                                                      , R.COMPANY_CD
                                                                      , R.CUSTOMER_PO_NO
                                                                      , R.ITEM_ID)
                      FROM   DUAL) AS SHIP_QTY
                   , R.ORG_CODE
                   , R.DUE_DATE
                   , R.CUSTOMER_LINE_CD
                   , NULL                            AS DEPARTURE_DATE
                   , ''                              AS DEPARTURE_NUMBER
                   , ''                              AS TRANSACTION_ID
                   , NULL                            AS DEPARTURE_QTY
                   , 'N'                             AS B2BI_DEPARTURE_USE_FLAG
              FROM   MOM_SALES_ORDER_V R
                   , MOM_PARAMETER P
              WHERE  R.DIVISION_CD = P.DIVISION_CD
              AND    R.COMPANY_CD  = P.COMPANY_CD
              AND    P.B2BI_DEPARTURE_USE_FLAG = 'N'
		        AND    R.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		        AND    R.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		        AND    R.DUE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') 
		                              AND TO_DATE(#{toDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') + 23.9997/24
		        <if test = "customerWo != null and customerWo != ''">
	    		AND UPPER(R.CUSTOMER_PO_ID) LIKE '%' || TRIM(UPPER(#{customerWo, jdbcType=VARCHAR})) || '%'
		       </if>
		       <if test = "customerPoNo != null and customerPoNo != ''">
		    	AND UPPER(R.CUSTOMER_PO_NO) LIKE '%' || TRIM(UPPER(#{customerPoNo, jdbcType=VARCHAR})) || '%'
		    	</if>
		       <if test = "itemName != null and itemName != ''">
	             AND (R.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
 	           	      OR UPPER(R.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')  
	           </if>       ) A
	           WHERE  A.ORDER_QTY - A.CANCEL_QTY - A.SHIP_QTY  > 0
		ORDER BY A.VENDOR_CD, A.DUE_DATE, A.CUSTOMER_PO_NO
		           
	</select>

	<delete id="remove_shipPlanningTmp" parameterType="java.util.HashMap">
    DELETE FROM MOM_SHIPMENT_PLAN_TEMP
	 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	</delete>
	
	<insert id="create_shipPlanningTmp" parameterType="java.util.HashMap">
  	 INSERT INTO MOM_SHIPMENT_PLAN_TEMP
			  ( DIVISION_CD,
				COMPANY_CD,
				SHIPMENT_SEQ_NO,
				CUSTOMER_WO_ID,
				CUSTOMER_PO_ID,
				CUSTOMER_ORG_CODE,
				CUSTOMER_LINE_CD,
				ITEM_ID,
				DEPARTURE_NUMBER,
				DEPARTURE_DATE,
				DEPARTURE_QTY,
				DEPARTURE_SPLIT_ID,
				DESCRIPTION,
				SHIP_DATE,
				CAR_MODEL,
				FROM_LOCATION_CD,
				TO_LOCATION_CD,
				CREATE_DATE,
				CREATE_BY,
				UPDATE_DATE,
				UPDATE_BY
				)
		VALUES
	          ( #{divisionCd, jdbcType=VARCHAR},
				#{companyCd, jdbcType=VARCHAR},
				#{shipmentSeqNo, jdbcType=INTEGER},
				#{customerPoId, jdbcType=VARCHAR},
				#{customerPoNo, jdbcType=VARCHAR},
				#{orgCode, jdbcType=VARCHAR},
				#{customerLineCd, jdbcType=VARCHAR},
				#{itemId, jdbcType=VARCHAR},
				#{departureNumber, jdbcType=VARCHAR},
				TO_DATE(#{departureDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
				#{qty, jdbcType=INTEGER},
				#{transactionId, jdbcType=INTEGER},
				#{description, jdbcType=VARCHAR},
				TO_DATE(#{shipDate, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
				#{carModel, jdbcType=VARCHAR},
				#{fromLocationCd, jdbcType=VARCHAR},
				#{toLocationCd, jdbcType=VARCHAR},
				MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
				#{userId, jdbcType=VARCHAR},
			    MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
				#{userId, jdbcType=VARCHAR}
		          )
  	</insert>
  	
	<insert id="create_shipPlanningCreate" statementType="CALLABLE">
		{
			CALL SP_MOM_SALES_ORDER_PKG.P_CREATE_SHIPMENT_PLAN (
				 #{p_err_code, mode=OUT, jdbcType=VARCHAR}
				,#{p_err_msg, mode=OUT, jdbcType=VARCHAR}
				,#{divisionCd, mode=IN, jdbcType=VARCHAR}
				,#{companyCd, mode=IN, jdbcType=VARCHAR}
				,#{userId, mode=IN, jdbcType=VARCHAR}
			)
		}
	</insert>

</mapper>