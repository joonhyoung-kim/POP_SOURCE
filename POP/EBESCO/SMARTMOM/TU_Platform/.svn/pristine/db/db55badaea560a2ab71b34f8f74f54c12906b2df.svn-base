<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.shipping.productShippingBarcode">
	<select id="get_productShippingBarcode_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.CUSTOMER_PO_ID
		     , A.SALES_ORDER_ID
		     , A.SALES_ITEM_ID
		     , A.ITEM_ID
		     , A.ITEM_NAME
		     , A.ORDER_QTY
		     , A.SHIP_QTY	AS SHIPPING_QTY
		     , A.CANCEL_QTY 
		     , A.REMAIN_QTY
		     , A.FROM_LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(A.DIVISION_CD, A.COMPANY_CD, A.FROM_LOCATION_CD)
		        FROM   DUAL )  AS FROM_LOCATION_NAME
		     , A.TO_LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(A.DIVISION_CD, A.COMPANY_CD, A.TO_LOCATION_CD)
		        FROM   DUAL )  AS TO_LOCATION_NAME   
		     , NVL(MIS.CURRENT_QTY, 0)  AS CURRENT_QTY
		     , MIS.ITEM_STOCK_ID   
		     , TO_CHAR(A.DUE_DATE, 'YYYY-MM-DD') AS DUE_DATE
		     , A.VENDOR_CD
		     , A.VENDOR_NAME
		     , A.ORDER_STATE
		     , A.ORDER_STATE_NAME 
		     , A.MARKET_CD
		     , A.MARKET_NAME   
		     , A.CURRENCY_CD
		     , A.CURRENCY_NAME 
		     , DECODE(NVL(A.UNIT_PRICE, 0) , 0, #{MESSAGES30047, jdbcType=VARCHAR}, TO_CHAR(A.UNIT_PRICE)) AS UNIT_PRICE
		     , A.SHIP_DATE
		     , A.MIX_GROUP
		     , A.CUSTOMER_LINE_CD
		     , A.PRE_BUILD_TERM
		     , A.DESTINATION_CD
		     , A.DESTINATION_NAME
		     , A.ORDER_GUBUN
		     , A.ORDER_GUBUN_NAME
		     , A.ORDER_TYPE
		     , A.ORDER_TYPE_NAME
		     , A.SHIP_IN_USE_FLAG
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , 'USE_FLAG'
		                                              , A.SHIP_IN_USE_FLAG )
		        FROM   DUAL ) AS SHIP_IN_USE_NAME
		     , A.ORIGIN_DUE_DATE
		     , A.DIVISION_CD
		     , A.COMPANY_CD
		     , (A.SHIP_QTY  * A.UNIT_PRICE)   AS SHIP_AMT
		     , (A.ORDER_QTY * A.UNIT_PRICE)   AS ORDER_AMT
		     , A.DESCRIPTION
		FROM   (SELECT A.CUSTOMER_PO_ID
		             , A.SALES_ORDER_ID
		             , A.SALES_ITEM_ID 
		             , A.ITEM_ID
		             , A.ITEM_NAME
		             , A.ORDER_QTY
		             , NVL(A.SHIP_QTY, 0)  AS SHIP_QTY
		             , NVL(A.CANCEL_QTY, 0) AS CANCEL_QTY
		             , (A.ORDER_QTY - NVL(A.RETURN_QTY, 0) - NVL(A.CANCEL_QTY, 0) - NVL(A.SHIP_QTY, 0)) AS REMAIN_QTY
		             , (SELECT MC.CODE_ID
		                FROM   MOM_CODE MC
		                WHERE  MC.DIVISION_CD = A.DIVISION_CD
		                AND    MC.COMPANY_CD  = A.COMPANY_CD 
		                AND    MC.CODE_CLASS_ID = 'SHIP_IN_LOCATION'
		                AND    MC.CODE_ID IN ( SELECT MD.ATTRIBUTE1 
		                                       FROM   MOM_CODE MD
		                                       WHERE  MD.DIVISION_CD   = A.DIVISION_CD
		                                       AND    MD.COMPANY_CD    = A.COMPANY_CD
		                                       AND    MD.CODE_CLASS_ID = 'ORDER_GUBUN'
		                                       AND    MD.CODE_ID = NVL(A.ORDER_GUBUN, '양산'))) AS FROM_LOCATION_CD
		             , (SELECT NVL(F.VENDOR_CD, F.FACILITY_CD)
		                FROM   MOM_FACILITY F
		                WHERE  F.DIVISION_CD = A.DIVISION_CD
		                AND    F.COMPANY_CD  = A.COMPANY_CD
		                AND    NVL(F.VENDOR_CD, F.FACILITY_CD) = A.VENDOR_CD ) AS TO_LOCATION_CD
		             , A.DUE_DATE
		             , A.VENDOR_CD 
		             , A.VENDOR_NAME
		             , A.ORDER_STATE
		             , A.ORDER_STATE_NAME
		             , A.MARKET_CD
		             , A.MARKET_NAME
		             , A.CURRENCY_CD
		             , A.CURRENCY_NAME
		             , (SELECT MOM_COMMON_PKG.FN_GET_SALES_PRICE( A.DIVISION_CD
		                                                        , A.COMPANY_CD
		                                                        , A.VENDOR_CD
		                                                        , A.ITEM_ID
		                                                        , A.MARKET_CD
		                                                        , A.CURRENCY_CD
		                                                        , TRUNC(MOM_COMMON_PKG.FN_GET_LOCAL_TIME(A.DIVISION_CD, A.COMPANY_CD)))  
		                FROM   DUAL ) AS UNIT_PRICE 
		             , TO_CHAR(MOM_COMMON_PKG.FN_GET_LOCAL_TIME(A.DIVISION_CD, A.COMPANY_CD),'YYYY-MM-DD') AS SHIP_DATE
		             , A.MIX_GROUP
		             , A.CUSTOMER_LINE_CD 
		             , A.PRE_BUILD_TERM
		             , A.DESTINATION_CD
		             , A.DESTINATION_NAME
		             , A.ORDER_GUBUN
		             , A.ORDER_GUBUN_NAME
		             , A.ORDER_TYPE
		             , A.ORDER_TYPE_NAME
		             ,(SELECT MOM_COMMON_PKG.FN_GET_USER_SHIP_IN_USE_FLAG( A.DIVISION_CD
		                                                                 , A.COMPANY_CD
		                                                                 , A.VENDOR_CD )
		               FROM   DUAL )   AS  SHIP_IN_USE_FLAG
		             , A.ORIGIN_DUE_DATE
		             , A.DIVISION_CD
		             , A.COMPANY_CD
		             , A.DESCRIPTION
		        FROM   MOM_SALES_ORDER_V A
		        WHERE  A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		        AND    A.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		        AND    A.MARKET_CD     = '2'
		       <if test="fromDate != null and fromDate != '' and toDate != null and toDate != ''">
		        AND    A.DUE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.99009 / 24
		       </if>
		       <if test="inVendor != null and inVendor != ''">
		        AND	   A.VENDOR_CD = #{inVendor, jdbcType=VARCHAR}
		       </if>
		       <if test="inLocation != null and inLocation != ''">
		        AND    A.FROM_LOCATION_CD = #{inLocation, jdbcType=VARCHAR}
		       </if>
		       <if test="inItem != null and inItem != ''">
		        AND	   A.ITEM_ID LIKE UPPER ('%' || #{inItem, jdbcType=VARCHAR} || '%')
		       </if>
		       <if test="inDestination != null and inDestination != ''">
		        AND    A.DESTINATION_CD = #{inDestination, jdbcType=VARCHAR}
		       </if>
		       <if test="inCustomerPo != null and inCustomerPo != ''">
		        AND	   A.CUSTOMER_PO_ID LIKE UPPER('%' || #{inCustomerPo, jdbcType=VARCHAR} || '%')
		       </if>
		       <if test="inUnitPrice != null and inUnitPrice != ''">
				   <choose> 
					   <when test='inUnitPrice.equals("N")'>
					    AND   NVL(A.UNIT_PRICE, 0) = 0
					   </when>
					   <otherwise>
					   <![CDATA[AND A.UNIT_PRICE > 0]]>
				 	   </otherwise>
				   </choose>
			   </if>
			   <if test="inMixGroup != null and inMixGroup != ''">
		        AND    A.MIX_GROUP = #{inMixGroup, jdbcType=VARCHAR}
		       </if>
			   <if test="inLgLine != null and inLgLine != ''">
		        AND    A.CUSTOMER_LINE_CD = #{inLgLine, jdbcType=VARCHAR}
		       </if>		        
		        AND    A.ORDER_STATE = 'N' 
		       ) A
		     , MOM_ITEM_STOCK MIS           
		WHERE A.DIVISION_CD = MIS.DIVISION_CD(+)
		AND   A.COMPANY_CD  = MIS.COMPANY_CD(+)
		AND   A.ITEM_ID     = MIS.ITEM_ID(+)
		AND   A.FROM_LOCATION_CD = MIS.LOCATION_CD(+) 
		ORDER BY A.VENDOR_NAME
		       , A.DESTINATION_NAME
		       , A.ORIGIN_DUE_DATE
		       , A.REMAIN_QTY	
	</select>
	
	<select id="get_productShippingBarcodePop_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.BARCODE_ID
		     , A.ITEM_ID
		     , TO_CHAR(R.START_TIME, 'YYYY-MM-DD') AS BARCODE_PLAN_DATE
		     , A.QTY AS BARCODE_QTY
		     , A.SHIP_APPLY_FLAG
		  FROM MOM_ITEM_LABEL A
		     , MOM_WORK_ORDER_RESULT R
		 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND A.DIVISION_CD = R.DIVISION_CD
		   AND A.WORK_ORDER_RESULT_ID = R.WORK_ORDER_RESULT_ID
		   AND A.BARCODE_TYPE = 'PRD'
		   AND NVL(A.SHIP_APPLY_FLAG, 'N') = 'N'   
		  <if test="inBarcodeId != null and inBarcodeId != ''">
		   AND A.BARCODE_ID = #{inBarcodeId, jdbcType=VARCHAR}
		  </if>
		   AND ITEM_ID = #{itemId, jdbcType=VARCHAR}
	</select>
	
	<delete id="remove_productShippingBarcode" parameterType="java.util.HashMap">
		DELETE MOM_ITEM_BARCODE_TMP
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	</delete>

	<insert id="create_productShippingBarcode" parameterType="java.util.HashMap">
		INSERT INTO MOM_ITEM_BARCODE_TMP
		         ( DIVISION_CD           
		         , COMPANY_CD            
		         , BARCODE_TYPE          
		         , BARCODE_ID            
		         , ITEM_ID               
		         , SEQ                   
		         , QTY                   
		         , IN_BARCODE_ID         
		         , CREATE_DATE           
		         , CREATE_BY
		         )
		VALUES   ( #{divisionCd, jdbcType=VARCHAR}
		         , #{companyCd, jdbcType=VARCHAR}
		         , 'SHIP'
		         , TO_CHAR(TO_DATE(#{shipDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),'YYYYMMDD') || #{salesOrderId, jdbcType=VARCHAR}
		         , #{itemId, jdbcType=VARCHAR}
		         , #{seq, jdbcType=NUMERIC}
		         , #{shipQty, jdbcType=NUMERIC}
		         , #{barcodeId, jdbcType=VARCHAR}
		         , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		         , #{createBy, jdbcType=VARCHAR}
		         )
	</insert>
	
	<update id="modify_productShippingBarcode" parameterType="java.util.HashMap">
		UPDATE MOM_ITEM_BARCODE_TMP
		SET QTY               = #{shipQty, jdbcType=NUMERIC}
		WHERE DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
		AND BARCODE_ID    = TO_CHAR(TO_DATE(#{shipDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),'YYYYMMDD') || #{salesOrderId, jdbcType=VARCHAR}
		AND ITEM_ID       = #{itemId, jdbcType=VARCHAR}
		AND SEQ           = #{seq, jdbcType=NUMERIC}
		AND IN_BARCODE_ID = #{barcodeId, jdbcType=VARCHAR} 
	</update>
	
</mapper>