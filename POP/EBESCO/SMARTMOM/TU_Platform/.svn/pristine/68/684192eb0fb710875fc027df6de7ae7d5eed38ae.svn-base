<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.purchase.materialLedger.materialInput">
	<select id="get_materialInput_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.MATERIAL_ORDER_ID
		     , A.MATERIAL_DEPARTURE_ID
		     , A.ORDER_GROUP_ID
		     , A.VENDOR_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME( A.DIVISION_CD
		                                                , A.COMPANY_CD
		                                                , A.VENDOR_CD) 
		        FROM  DUAL)                             AS VENDOR_NAME  
		     ,  A.DEPARTURE_VENDOR_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME( A.DIVISION_CD
		                                                , A.COMPANY_CD
		                                                , A.DEPARTURE_VENDOR_CD )
		        FROM  DUAL)     AS DEPARTURE_VENDOR_NAME 
		     , A.ITEM_ID
		     , MID.ITEM_NAME
		     , MID.SPECIFICATION
		     , MID.UNIT  
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( MID.DIVISION_CD
		                                              , MID.COMPANY_CD
		                                              , 'ITEM_UNIT'
		                                              , MID.UNIT )
		        FROM DUAL)                            AS UNIT_NAME 
		     , A.IQC_FLAG     
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , 'USE_FLAG'
		                                              , A.IQC_FLAG )
		        FROM DUAL)                            AS IQC_FLAG_NAME  
		     , A.ORDER_QTY
		     , A.DEPARTURE_QTY
		     , A.ORDER_REMAIN_QTY
		     , A.DELIVERY_DATE              
		     , A.ORDER_DATE    
		     , A.DEPARTURE_DATE             
		     , A.DEPARTURE_STATE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , 'MATERIAL_DEPARTURE_STATE'
		                                              , A.DEPARTURE_STATE )
		        FROM DUAL)                            AS DEPARTURE_STATE_NAME    
		     , A.ORDER_STATE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , 'MATERIAL_ORDER_STATE'
		                                              , A.ORDER_STATE )
		        FROM DUAL)                            AS ORDER_STATE_NAME    
		     , A.ORDER_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              ,'SYSTEM_FLAG'
		                                              , A.ORDER_TYPE )
		        FROM DUAL)                            AS ORDER_TYPE_NAME    
		     , A.CREATE_DATE 
		     , A.CREATE_BY
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , A.CREATE_BY) 
		        FROM  DUAL)                            AS CREATE_BY_NAME  
		     , A.UPDATE_DATE        
		     , A.UPDATE_BY 
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , A.UPDATE_BY) 
		        FROM  DUAL)                            AS UPDATE_BY_NAME
		     , A.LOCATION_CD                          AS LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME( A.DIVISION_CD
		                                                  , A.COMPANY_CD
		                                                  , A.LOCATION_CD)
		        FROM   DUAL )     AS LOCATION_NAME 
		     , A.MARKET_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , 'MARKET_CODE'
		                                              , A.MARKET_CD )
		        FROM DUAL)                            AS MARKET_NAME       
		     , A.CURRENCY_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , 'CURRENCY_CODE'
		                                              , A.CURRENCY_CD )
		        FROM DUAL)                            AS CURRENCY_NAME
		     , A.ORDER_SEQ
		     , A.VENDOR_LOT
		     , (SELECT MOM_COMMON_PKG.FN_GET_MATERIAL_PRICE( A.DIVISION_CD
		                                                   , A.COMPANY_CD
		                                                   , A.VENDOR_CD
		                                                   , A.ITEM_ID
		                                                   , A.MARKET_CD
		                                                   , A.CURRENCY_CD
		                                                   , TRUNC(MOM_COMMON_PKG.FN_GET_LOCAL_TIME(A.DIVISION_CD, A.COMPANY_CD)) )
		        FROM DUAL)                            AS UNIT_PRICE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CURRENT_EXCHANGE_RATE( A.DIVISION_CD
		                                                          , A.COMPANY_CD
		                                                          , A.CURRENCY_CD
		                                                          , TRUNC(MOM_COMMON_PKG.FN_GET_LOCAL_TIME(A.DIVISION_CD, A.COMPANY_CD)) )
		        FROM DUAL)                            AS EX_UNIT_PRICE  
		     , A.DEPARTURE_FLAG   
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( A.DIVISION_CD
		                                              , A.COMPANY_CD
		                                              , 'USE_FLAG'
		                                              , A.DEPARTURE_FLAG )
		        FROM DUAL)                            AS DEPARTURE_FLAG_NAME  
		     , MID.ITEM_TYPE 
		     ,(SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( MID.DIVISION_CD
		                                             , MID.COMPANY_CD
		                                             , 'ITEM_TYPE'
		                                             , MID.ITEM_TYPE  )
		        FROM DUAL)                            AS ITEM_TYPE_NAME   
		     , CASE WHEN A.IQC_FLAG = 'N' AND A.DEPARTURE_FLAG = 'N' THEN  A.ORDER_REMAIN_QTY
		       ELSE A.DEPARTURE_QTY
		       END    AS  INPUT_QTY
		     , NVL(MID.FREE_OFFER_FLAG, 'N') AS FREE_OFFER_FLAG
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MID.DIVISION_CD
	                                                  , MID.COMPANY_CD
	                                                  , 'FREE_OFFER_FLAG'
	                                                  , NVL(MID.FREE_OFFER_FLAG, 'N'))
	            FROM DUAL)							  AS FREE_OFFER_FLAG_NAME
		     , '' AS DESCRIPTION
		     , A.ORDER_FLAG
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (A.DIVISION_CD
                                                      , A.COMPANY_CD
                                                      , 'ORDER_FLAG'
                                                      , A.ORDER_FLAG)
                  FROM DUAL)                          AS ORDER_FLAG_NAME
		     , NVL(A.CONVERSION_UNIT_QTY, 1) AS CONVERSION_UNIT_QTY
		     , NVL(MID.CONVERSION_UNIT_QTY, 1) AS ORIGIN_CONVERSION_UNIT_QTY
             , MID.CONVERSION_UNIT
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MID.DIVISION_CD
	                                                  , MID.COMPANY_CD
	                                                  , 'ITEM_UNIT'
	                                                  , MID.CONVERSION_UNIT)
	            FROM DUAL)							  AS CONVERSION_UNIT_NAME
	         , A.TRANSACTION_SEQ
		FROM   (SELECT MO.DIVISION_CD
		             , MO.COMPANY_CD
		             , MO.MATERIAL_ORDER_ID
		             , MD.MATERIAL_DEPARTURE_ID
		             , MO.ORDER_GROUP_ID
		             , MO.VENDOR_CD
		             , NVL(MO.DEPARTURE_VENDOR_CD, MO.VENDOR_CD) AS DEPARTURE_VENDOR_CD
		             , MO.ITEM_ID
		             , MO.IQC_FLAG     
		             , MO.ORDER_QTY
		             , MD.DEPARTURE_QTY
		             , MO.ORDER_QTY - NVL(MO.CANCEL_QTY, 0) - DECODE(NVL(MD.DEPARTURE_QTY, 0), 0, MO.CLOSED_QTY, MD.DEPARTURE_QTY) AS ORDER_REMAIN_QTY
		             , TO_CHAR(MO.DELIVERY_DATE  , 'YYYY-MM-DD')   AS DELIVERY_DATE              
		             , TO_CHAR(MO.ORDER_DATE , 'YYYY-MM-DD')       AS ORDER_DATE    
		             , TO_CHAR(MD.DEPARTURE_DATE , 'YYYY-MM-DD')   AS DEPARTURE_DATE             
		             , MD.DEPARTURE_STATE
		             , MO.ORDER_STATE
		             , MO.ORDER_TYPE
		             , TO_CHAR(MO.CREATE_DATE  , 'YYYY-MM-DD')   AS CREATE_DATE 
		             , MO.CREATE_BY
		             , TO_CHAR(MO.UPDATE_DATE   , 'YYYY-MM-DD') AS UPDATE_DATE        
		             , MO.UPDATE_BY 
		             , MO.LOCATION_CD                          AS LOCATION_CD
		             , MO.MARKET_CD
		             , MO.CURRENCY_CD
		             , MO.ORDER_SEQ
		             , MD.VENDOR_LOT
		             , MD.DEPARTURE_GROUP_ID
		             , MO.DEPARTURE_FLAG
		             , MO.ORDER_FLAG
	                 , MD.CONVERSION_UNIT_QTY
	                 , MD.TRANSACTION_SEQ
		        FROM   MOM_MATERIAL_ORDER MO
		             , MOM_MATERIAL_DEPARTURE MD
		        WHERE  MO.DIVISION_CD = MD.DIVISION_CD
		        AND    MO.COMPANY_CD  = MD.COMPANY_CD
		        AND    MO.MATERIAL_ORDER_ID = MD.MATERIAL_ORDER_ID
		        AND    MO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		        AND    MO.COMPANY_CD  =  #{companyCd, jdbcType=VARCHAR}
		        AND    NVL(MO.DEPARTURE_FLAG, 'N') = 'Y'
		        AND    MD.DEPARTURE_STATE  = DECODE(MO.IQC_FLAG, 'Y', 'CHECK_PASS', 'DEPARTURE')
		        AND    MO.ORDER_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
				UNION ALL
		        SELECT MO.DIVISION_CD
		             , MO.COMPANY_CD
		             , MO.MATERIAL_ORDER_ID
		             , MD.MATERIAL_DEPARTURE_ID
		             , MO.ORDER_GROUP_ID
		             , MO.VENDOR_CD
		             , NVL(MO.DEPARTURE_VENDOR_CD, MO.VENDOR_CD) AS DEPARTURE_VENDOR_CD
		             , MO.ITEM_ID
		             , MO.IQC_FLAG     
		             , MO.ORDER_QTY
		             , MD.DEPARTURE_QTY
		             , MO.ORDER_QTY - NVL(MO.CANCEL_QTY, 0) - NVL(MD.DEPARTURE_QTY, 0)  AS  ORDER_REMAIN_QTY
		             , TO_CHAR(MO.DELIVERY_DATE, 'YYYY-MM-DD')   AS DELIVERY_DATE              
		             , TO_CHAR(MO.ORDER_DATE, 'YYYY-MM-DD')       AS ORDER_DATE    
		             , TO_CHAR(MD.DEPARTURE_DATE, 'YYYY-MM-DD')   AS DEPARTURE_DATE             
		             , MD.DEPARTURE_STATE
		             , MO.ORDER_STATE
		             , MO.ORDER_TYPE
		             , TO_CHAR(MO.CREATE_DATE, 'YYYY-MM-DD')   AS CREATE_DATE 
		             , MO.CREATE_BY
		             , TO_CHAR(MO.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE        
		             , MO.UPDATE_BY 
		             , MO.LOCATION_CD                          AS LOCATION_CD
		             , MO.MARKET_CD
		             , MO.CURRENCY_CD
		             , MO.ORDER_SEQ
		             , MD.VENDOR_LOT
		             , MD.DEPARTURE_GROUP_ID
		             , MO.DEPARTURE_FLAG
		             , MO.ORDER_FLAG
	                 , MD.CONVERSION_UNIT_QTY
	                 , MD.TRANSACTION_SEQ
		        FROM   MOM_MATERIAL_ORDER MO
		             , MOM_MATERIAL_DEPARTURE MD
		        WHERE  MO.DIVISION_CD = MD.DIVISION_CD
		        AND    MO.COMPANY_CD  = MD.COMPANY_CD
		        AND    MO.MATERIAL_ORDER_ID = MD.MATERIAL_ORDER_ID
		        AND    MO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		        AND    MO.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		        AND    NVL(MO.DEPARTURE_FLAG, 'N') = 'N'
		        AND    MD.DEPARTURE_STATE  = 'CHECK_PASS'
		        AND    MO.ORDER_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')  
		        UNION ALL
		        SELECT MO.DIVISION_CD
		             , MO.COMPANY_CD
		             , MO.MATERIAL_ORDER_ID
		             , ''                     AS MATERIAL_DEPARTURE_ID
		             , MO.ORDER_GROUP_ID
		             , MO.VENDOR_CD
		             , NVL(MO.DEPARTURE_VENDOR_CD, MO.VENDOR_CD) AS DEPARTURE_VENDOR_CD
		             , MO.ITEM_ID
		             , MO.IQC_FLAG     
		             , MO.ORDER_QTY
		             , 0                          AS DEPARTURE_QTY
		             , MO.ORDER_QTY - NVL(MO.CANCEL_QTY, 0) - NVL(MO.CLOSED_QTY, 0) AS  ORDER_REMAIN_QTY
		             , TO_CHAR(MO.DELIVERY_DATE  , 'YYYY-MM-DD')   AS DELIVERY_DATE              
		             , TO_CHAR(MO.ORDER_DATE , 'YYYY-MM-DD')       AS ORDER_DATE    
		             , TO_CHAR(MO.DEPARTURE_DATE , 'YYYY-MM-DD')   AS DEPARTURE_DATE
		             , ''                                          AS DEPARTURE_STATE
		             , MO.ORDER_STATE
		             , MO.ORDER_TYPE
		             , TO_CHAR(MO.CREATE_DATE  , 'YYYY-MM-DD')   AS CREATE_DATE 
		             , MO.CREATE_BY
		             , TO_CHAR(MO.UPDATE_DATE   , 'YYYY-MM-DD') AS UPDATE_DATE        
		             , MO.UPDATE_BY 
		             , MO.LOCATION_CD                          AS LOCATION_CD
		             , MO.MARKET_CD
		             , MO.CURRENCY_CD
		             , MO.ORDER_SEQ
		             , ''                                      AS VENDOR_LOT
		             , ''                                      AS DEPARTURE_GROUP_ID
		             , MO.DEPARTURE_FLAG
		             , MO.ORDER_FLAG
	                 , NVL((SELECT MOM_COMMON_PKG.FN_GET_CONVERSION_QTY( MO.DIVISION_CD
                                 							  	   , MO.COMPANY_CD
                                  								   , MO.ITEM_ID ) 
                              FROM DUAL), 1) * MO.ORDER_QTY		   AS ORIGIN_CONVERSION_UNIT_QTY
                     , MO.TRANSACTION_SEQ
		        FROM   MOM_MATERIAL_ORDER MO
		        WHERE  MO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
		        AND    MO.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR} 
		        AND    NVL(MO.DEPARTURE_FLAG, 'N') = 'N'
		        AND    MO.IQC_FLAG  = 'N'
		        AND    MO.ORDER_STATE = 'ORDER' 
		        AND    MO.ORDER_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		        ) A
		      , MOM_ITEM_DEFINITION MID
			WHERE   A.DIVISION_CD = MID.DIVISION_CD
			AND     A.COMPANY_CD  = MID.COMPANY_CD
			AND     A.ITEM_ID     = MID.ITEM_ID
		   <if test="orderState != null and orderState != ''">
			AND    ORDER_STATE = #{orderState, jdbcType=VARCHAR} 
		   </if>    
		   <if test="itemId != null and itemId != ''">
			AND    (A.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%'
			       OR UPPER(MID.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%')
		   </if>
		   <if test="itemName != null and itemName != ''">
			AND    (A.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
                   OR UPPER(MID.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')
		   </if>   
		   <if test="vendorCd != null and vendorCd != ''">
			AND    A.VENDOR_CD = #{vendorCd, jdbcType=VARCHAR} 
		   </if> 
		   <if test="vendorName != null and vendorName != ''">
			AND    A.VENDOR_CD = #{vendorName, jdbcType=VARCHAR} 
		   </if>
		   <if test="departureVendorCd != null and departureVendorCd != ''">
			AND    A.DEPARTURE_VENDOR_CD = #{departureVendorCd, jdbcType=VARCHAR} 
		   </if> 
		   <if test="departureVendorName != null and departureVendorName != ''">
			AND    A.DEPARTURE_VENDOR_CD = #{departureVendorName, jdbcType=VARCHAR} 
		   </if> 
		   <if test="materialOrderId != null and materialOrderId != ''">
			AND    MATERIAL_ORDER_ID LIKE '%' || TRIM(UPPER(#{materialOrderId, jdbcType=VARCHAR})) || '%'
		   </if>
		   <if test="orderNumber != null and orderNumber != ''">
			AND    MATERIAL_ORDER_ID LIKE '%' || TRIM(UPPER(#{orderNumber, jdbcType=VARCHAR})) || '%'
		   </if>
		   <if test="orderFlag != null and orderFlag != ''">
	      	AND    A.ORDER_FLAG = #{orderFlag, jdbcType=VARCHAR}
		   </if>  
		   <if test="orderType != null and orderType != ''">
	      	AND    A.ORDER_FLAG = #{orderType, jdbcType=VARCHAR}
		   </if>    
			ORDER BY A.MATERIAL_DEPARTURE_ID, A.MATERIAL_ORDER_ID, A.TRANSACTION_SEQ
	</select>

	<delete id="remove_materialInputTemp" parameterType="java.util.HashMap">
    DELETE MOM_MAT_GOODS_RECEIPT_TMP
	 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	 </delete>
	 
  	<insert id="create_materialInputTemp" parameterType="java.util.HashMap">
  	 INSERT INTO MOM_MAT_GOODS_RECEIPT_TMP
					( DIVISION_CD         
					, COMPANY_CD          
					, ITEM_ID             
					, LOCATION_CD
					, VENDOR_CD
					, MATERIAL_ORDER_ID
					, MATERIAL_DEPARTURE_ID
					, IO_TIME
					, QTY
					, CONVERSION_UNIT_QTY
					, CURRENCY_CD
					, MARKET_CD
					, VENDOR_LOT
					, DESCRIPTION             
					, CREATE_DATE         
					, CREATE_BY
					, SEQ           
			        )
		VALUES
		          ( #{divisionCd, jdbcType=VARCHAR}
		          , #{companyCd, jdbcType=VARCHAR}
		          , #{itemId, jdbcType=VARCHAR}
		          , #{locationCd, jdbcType=VARCHAR}
		          , #{vendorCd, jdbcType=VARCHAR}
		          , #{materialOrderId, jdbcType=VARCHAR}
		          , #{materialDepartureId, jdbcType=VARCHAR}
		          , TO_DATE(#{deliveryDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		          , #{inputQty, jdbcType=NUMERIC}
		          , #{conversionUnitQty, jdbcType=NUMERIC}
		          , #{currencyCd, jdbcType=VARCHAR}
		          , #{marketCd, jdbcType=VARCHAR}
		          , #{vendorLot, jdbcType=VARCHAR}
		          , #{description, jdbcType=VARCHAR}
		          , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		          , #{createBy, jdbcType=VARCHAR}
		          , #{seq, jdbcType=VARCHAR}
		          )
  	</insert>
	<insert id="create_materialInputCreate" statementType="CALLABLE">
	{
        CALL SP_MOM_MATERIAL_PKG.P_MATERIAL_GOOD_RECEIPT (
        	#{p_err_code, mode=OUT, jdbcType=VARCHAR}
           ,#{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           ,#{divisionCd, mode=IN, jdbcType=VARCHAR}
           ,#{companyCd, mode=IN, jdbcType=VARCHAR}
        )
    }
    </insert>
	
</mapper>