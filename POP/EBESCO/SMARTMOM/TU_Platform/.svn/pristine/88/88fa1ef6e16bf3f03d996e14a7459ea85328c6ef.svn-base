<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.admin">
	<!-- 미카 메뉴 -->
	<select id="get_micaMenu_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT 
			* 
		FROM 
			MICA_MENU
		WHERE
			1 = 1
		<if test="locale != null and locale != ''">
			AND LOCALE = #{locale, jdbcType=VARCHAR}
		</if>
		<if test="parentId != null">
		 	AND PARENT_ID = #{parentId, jdbcType=VARCHAR}
		</if>
		<if test="useFlag != null">
		 	AND USE_FLAG = #{useFlag, jdbcType=VARCHAR}
		</if>
		 ORDER BY PARENT_ID, DISPLAY_ORDER, LOCALE ASC
	</select>
	
	<insert id="create_micaMenu" parameterType="java.util.HashMap">
		INSERT INTO MICA_MENU ( 
					ID,
					LOCALE, 
					PARENT_ID,
					NAME,
					URL,
					ICON,
					MENU_GROUP,
					DISPLAY_ORDER,
					USE_FLAG,
					PARAM,
					DESCRIPTION
					)
			   VALUES ( #{id, jdbcType=VARCHAR},
			   			#{locale, jdbcType=VARCHAR},
						#{parentId, jdbcType=VARCHAR},
						#{name, jdbcType=VARCHAR},
						#{url, jdbcType=VARCHAR},
						#{icon, jdbcType=VARCHAR},
						#{menuGroup, jdbcType=VARCHAR},
						#{displayOrder, jdbcType=INTEGER},
						#{useFlag, jdbcType=VARCHAR},
						#{param, jdbcType=VARCHAR},
						#{description, jdbcType=VARCHAR})
	</insert>
	
	<update id="modify_micaMenu" parameterType="java.util.HashMap">
		UPDATE MICA_MENU
		SET ID = #{id, jdbcType=VARCHAR},
			PARENT_ID = #{parentId, jdbcType=VARCHAR},
			NAME = #{name, jdbcType=VARCHAR},
			URL = #{url, jdbcType=VARCHAR},
			ICON = #{icon, jdbcType=VARCHAR},
			MENU_GROUP = #{menuGroup, jdbcType=VARCHAR},
		   <if test="displayOrder != null">
				DISPLAY_ORDER = #{displayOrder, jdbcType=INTEGER},
		   </if>
			USE_FLAG = #{useFlag, jdbcType=VARCHAR},
			PARAM = #{param, jdbcType=VARCHAR},
			DESCRIPTION = #{description, jdbcType=VARCHAR}
		WHERE 
			ID = #{id, jdbcType=VARCHAR}
			AND LOCALE = #{locale, jdbcType=VARCHAR}
	</update>
	
    <delete id="remove_micaMenu" parameterType="java.util.HashMap">
		DELETE FROM MICA_MENU
		 WHERE ID = #{id, jdbcType=VARCHAR} AND LOCALE = #{locale, jdbcType=VARCHAR}
	</delete>
	
	<!-- 미카 ELEMENT -->
	<select id="get_micaElement_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MENU_ID
		     , ELEMENT_ID
		     , (SELECT MOM_COMMON_PKG.FN_GET_MULTI_LANG ( #{divisionCd, jdbcType=VARCHAR}
	                                                    , #{companyCd, jdbcType=VARCHAR}
	                                                    , ELEMENT_NAME
	                                                    , 'FRONT'
	                                                    , #{locale, jdbcType=VARCHAR}) 
	              FROM DUAL) AS ELEMENT_NAME
		     , ELEMENT_TYPE
		     , USE_FLAG
		     , DISPLAY_ORDER 
		  FROM MICA_ELEMENT
		 WHERE MENU_ID = #{menuId, jdbcType=VARCHAR}
		 <if test="authMenu != null">
		   AND USE_FLAG = 'Y'
		 </if>
		 ORDER BY DISPLAY_ORDER
	</select>
	
	<insert id="create_micaElement" parameterType="java.util.HashMap">
		INSERT INTO MICA_ELEMENT ( 
					MENU_ID,
					ELEMENT_ID,
					ELEMENT_NAME,
					ELEMENT_TYPE,
					USE_FLAG,
					DISPLAY_ORDER
					)
			   VALUES ( #{menuId, jdbcType=VARCHAR},
						#{elementId, jdbcType=VARCHAR},
						#{elementName, jdbcType=VARCHAR},
						#{elementType, jdbcType=VARCHAR},
						#{useFlag, jdbcType=VARCHAR},
						#{displayOrder, jdbcType=VARCHAR})
	</insert>
	
	<update id="modify_micaElement" parameterType="java.util.HashMap">
		UPDATE MICA_ELEMENT
		SET MENU_ID = #{menuId, jdbcType=VARCHAR},
			ELEMENT_ID = #{elementId, jdbcType=VARCHAR},
			ELEMENT_NAME = #{elementName, jdbcType=VARCHAR},
			ELEMENT_TYPE = #{elementType, jdbcType=VARCHAR},
			USE_FLAG = #{useFlag, jdbcType=VARCHAR},
			DISPLAY_ORDER = #{displayOrder, jdbcType=VARCHAR}
		WHERE MENU_ID = #{menuId, jdbcType=VARCHAR}
	    AND ELEMENT_ID = #{elementId, jdbcType=VARCHAR}
	</update>
	
    <delete id="remove_micaElement" parameterType="java.util.HashMap">
		DELETE FROM MICA_ELEMENT
		 WHERE MENU_ID = #{menuId, jdbcType=VARCHAR}
		   AND ELEMENT_ID = #{elementId, jdbcType=VARCHAR}
	</delete>
	
	<select id="get_micaAuthGroup_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT * FROM MICA_AUTH_GROUP
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	   <if test="id != null">
	  	AND ID = #{id, jdbcType=VARCHAR}
	   </if>
	</select>
	
	<select id="get_micaAuthGroup" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT * FROM MICA_AUTH_GROUP
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	  	AND ID = #{id, jdbcType=VARCHAR}
	</select>
	
	<insert id="create_micaAuthGroup" parameterType="java.util.HashMap">
		INSERT INTO MICA_AUTH_GROUP ( 
					ID,
					NAME,
					MENU_LIST,
					DIVISION_CD,
					COMPANY_CD
					)
			   VALUES ( #{id, jdbcType=VARCHAR},
						#{name, jdbcType=VARCHAR},
						#{menuList, jdbcType=VARCHAR},
						#{divisionCd, jdbcType=VARCHAR},
						#{companyCd, jdbcType=VARCHAR})
	</insert>
	
	<update id="modify_micaAuthGroup" parameterType="java.util.HashMap">
		UPDATE MICA_AUTH_GROUP
		SET ID = #{id, jdbcType=VARCHAR},
			NAME = #{name, jdbcType=VARCHAR},
			MENU_LIST = #{menuList, jdbcType=VARCHAR},
			DIVISION_CD = #{divisionCd, jdbcType=VARCHAR},
			COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		WHERE ID = #{id, jdbcType=VARCHAR}
		AND	DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	</update>
	
    <delete id="remove_micaAuthGroup" parameterType="java.util.HashMap">
		DELETE FROM MICA_AUTH_GROUP
		 WHERE ID = #{id, jdbcType=VARCHAR}
		AND	DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	</delete>
	
	<select id="get_micaAuthElement_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT * 
		FROM MICA_AUTH_ELEMENT
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND AUTH_ID = #{authId, jdbcType=VARCHAR}
	   <if test="menuId != null">
		AND MENU_ID = #{menuId, jdbcType=VARCHAR}
	   </if>
	</select>
	
	<insert id="create_micaAuthElement" parameterType="java.util.HashMap">
		INSERT INTO MICA_AUTH_ELEMENT ( 
					AUTH_ID,
					MENU_ID,
					LIST,
					DIVISION_CD,
					COMPANY_CD,
					DISPLAY_ORDER_LIST
					)
			   VALUES ( #{authId, jdbcType=VARCHAR},
						#{menuId, jdbcType=VARCHAR},
						#{list, jdbcType=VARCHAR},
						#{divisionCd, jdbcType=VARCHAR},
						#{companyCd, jdbcType=VARCHAR},
						#{displayOrderList, jdbcType=VARCHAR})
	</insert>
	
	<update id="modify_micaAuthElement" parameterType="java.util.HashMap">
		UPDATE MICA_AUTH_ELEMENT
		SET AUTH_ID = #{authId, jdbcType=VARCHAR},
			MENU_ID = #{menuId, jdbcType=VARCHAR},
			LIST = #{list, jdbcType=VARCHAR},
			DIVISION_CD = #{divisionCd, jdbcType=VARCHAR},
			COMPANY_CD = #{companyCd, jdbcType=VARCHAR},
			DISPLAY_ORDER_LIST = #{displayOrderList, jdbcType=VARCHAR}
		WHERE AUTH_ID = #{authId, jdbcType=VARCHAR}
		AND MENU_ID = #{menuId, jdbcType=VARCHAR}
		AND	DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	</update>
	
    <delete id="remove_micaAuthElement" parameterType="java.util.HashMap">
		DELETE FROM MICA_AUTH_ELEMENT
		WHERE AUTH_ID = #{authId, jdbcType=VARCHAR}
		AND ELEMENT_ID = #{elementId, jdbcType=VARCHAR}
		AND	DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	</delete>
	
	<select id="get_authority_list" resultType="camelMap" parameterType="java.util.HashMap">
        SELECT Z.*
          FROM (
                SELECT CODE_ID, CODE_NAME
                FROM MOM_CODE
                WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
                AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
                AND CODE_CLASS_ID = 'EMP_AUTHORITY'
                AND USE_YN = 'Y'
        <if test='empAuthority == "99999999"'>
                UNION ALL
                SELECT CODE_ID, CODE_NAME
                FROM MOM_CODE
                WHERE DIVISION_CD = 'ALL'
                AND COMPANY_CD = 'ALL'
                AND CODE_CLASS_ID = 'EMP_AUTHORITY'
                AND USE_YN = 'Y'
        </if>
          ) Z
        ORDER BY CAST(CODE_ID AS int)
	</select>
	
	<select id="get_authoSiteMenu_list" resultType="camelMap" parameterType="java.util.HashMap">
<!-- 			SELECT * -->
<!-- 			  FROM ( -->
<!-- 				   SELECT A.* -->
<!-- 					, DECODE(B.SITE_MENU_FLAG, 'Y', 'Y','N') AS SITE_MENU_FLAG -->
<!-- 					  FROM MICA_MENU A -->
<!-- 					     , ( -->
<!-- 			     SELECT A.DIVISION_CD -->
<!-- 			             , A.COMPANY_CD -->
<!-- 			             , A.ID -->
<!-- 			             , A.PARENT_ID -->
<!-- 			             , A.DISPLAY_ORDER -->
<!-- 			             , 'Y' AS SITE_MENU_FLAG -->
<!-- 			          FROM MOM_SITE_MENU A -->
<!-- 			             , MICA_MENU B -->
<!-- 			         WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} -->
<!-- 			           AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR} -->
<!-- 			           AND A.ID = B.ID -->
<!-- 			           AND B.USE_FLAG = 'Y' -->
<!-- 			           AND B.LOCALE = #{locale, jdbcType=VARCHAR} -->
<!-- 			            AND EXISTS (SELECT '*' -->
<!--                           FROM MOM_SITE_MENU C -->
<!--                          WHERE C.ID = A.PARENT_ID -->
<!--                            AND C.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} -->
<!--                            AND C.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}) -->
<!--          				UNION -->
<!-- 						SELECT A.DIVISION_CD -->
<!-- 		                     , A.COMPANY_CD -->
<!-- 		                     , A.ID -->
<!-- 		                     , A.PARENT_ID -->
<!-- 		                     , A.DISPLAY_ORDER -->
<!-- 		                     , 'Y' AS SITE_MENU_FLAG -->
<!-- 		                  FROM MOM_SITE_MENU A -->
<!-- 		                     , MICA_MENU B -->
<!-- 		                 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} -->
<!-- 		                   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR} -->
<!-- 		                   AND A.ID = B.ID -->
<!-- 		                   AND B.USE_FLAG = 'Y' -->
<!-- 		                   AND B.LOCALE = #{locale, jdbcType=VARCHAR} -->
<!-- 		                   AND A.PARENT_ID = 'root'  -->
<!-- 				           ) B -->
<!-- 				 WHERE 1 = 1 -->
<!-- 				   AND A.USE_FLAG = 'Y' -->
<!-- 				   AND A.LOCALE = #{locale, jdbcType=VARCHAR} -->
<!-- 				   AND A.ID = B.ID -->
<!-- 				 ORDER BY A.DISPLAY_ORDER  -->
<!-- 						) A START WITH A.PARENT_ID = 'root' CONNECT BY NOCYCLE PRIOR A.ID = A.PARENT_ID  -->
						
                    SELECT A.DIVISION_CD
                         , A.COMPANY_CD
                         , A.ID
                         , A.PARENT_ID
                         , (SELECT MOM_COMMON_PKG.FN_GET_MULTI_LANG ( #{divisionCd, jdbcType=VARCHAR}
				                                                    , #{companyCd, jdbcType=VARCHAR}
				                                                    , NVL(A.NAME, B.NAME)
				                                                    , 'MENU'
				                                                    , #{locale, jdbcType=VARCHAR}) 
				              FROM DUAL) AS NAME 
                         , B.URL
                         , A.DISPLAY_ORDER
                         , B.USE_FLAG
                      FROM MOM_SITE_MENU A
                         , MICA_MENU B
                     WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
                       AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
                       AND A.ID = B.ID
                       AND B.USE_FLAG = 'Y'
                       AND B.LOCALE = #{locale, jdbcType=VARCHAR}
			       <if test='empAuthority != "99999999"'>
			           AND A.PARENT_ID != 'ProjectM' 
			           AND A.ID != 'ProjectM'
			       </if>
                     ORDER BY A.PARENT_ID, A.DISPLAY_ORDER 
	</select>
	
	<select id="get_siteMenu_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT 
			A.ID,
			A.PARENT_ID,
			(SELECT MOM_COMMON_PKG.FN_GET_MULTI_LANG ( #{divisionCd, jdbcType=VARCHAR}
                                                     , #{companyCd, jdbcType=VARCHAR}
                                                     , NVL(A.NAME, B.NAME)
                                                     , 'MENU'
                                                     , #{locale, jdbcType=VARCHAR}) 
               FROM DUAL) AS NAME ,
			B.URL,
			A.DISPLAY_ORDER,
            B.USE_FLAG,
            B.ICON,
            B.MENU_GROUP,
            B.PARAM,
            B.LOCALE
		FROM 
			MOM_SITE_MENU A ,
			MICA_MENU B
		WHERE
			1 = 1
		<if test="divisionCd != null and divisionCd != ''">
			AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		</if>
		<if test="companyCd != null and companyCd != ''">
			AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		</if>
		<if test="parentId != null">
		 	AND A.PARENT_ID = #{parentId, jdbcType=VARCHAR}
		</if>
		<if test="locale != null and locale != ''">
			AND B.LOCALE = 'KR'
		</if>
        <if test='empAuthority != "99999999"'>
            AND A.PARENT_ID != 'ProjectM' 
            AND A.ID != 'ProjectM'
        </if>
			AND B.USE_FLAG = 'Y'
			AND A.ID = B.ID
		 ORDER BY A.PARENT_ID, A.DISPLAY_ORDER ASC
	</select>
	
	
	<select id="get_board_list" resultType="camelMap" parameterType="java.util.HashMap">
	    SELECT A.BOARD_ID
	         , A.BOARD_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'BOARD_TYPE', A.BOARD_TYPE) FROM DUAL) AS BOARD_TYPE_NAME
	         , A.BOARD_TITLE
	         , A.BOARD_CONTENTS
	         , A.USE_YN
	         , A.NOTICE_YN
	         , TO_CHAR(A.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE
	         , A.UPDATE_BY
	         , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(A.DIVISION_CD, A.COMPANY_CD, A.UPDATE_BY) FROM DUAL) AS UPDATE_BY_NAME
	      FROM MOM_BOARD A
	     WHERE 1 = 1
	       AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	     <if test="searchBoardType != null and searchBoardType != ''">
	       AND A.BOARD_TYPE = #{searchBoardType, jdbcType=VARCHAR}
	     </if>
	     <if test="searchBoardTitle != null and searchBoardTitle != ''">
           AND UPPER(A.BOARD_TITLE) LIKE '%' || TRIM(UPPER(#{searchBoardTitle, jdbcType=VARCHAR})) || '%'
         </if>
         <if test="searchBoardContents != null and searchBoardContents != ''">
           AND UPPER(A.BOARD_CONTENTS) LIKE '%' || TRIM(UPPER(#{searchBoardContents, jdbcType=VARCHAR})) || '%'
         </if>
         <if test="searchUseYn != null and searchUseYn != ''">
           AND A.USE_YN = #{searchUseYn, jdbcType=VARCHAR}
         </if>
         ORDER BY A.BOARD_ID
    </select>
    
    <insert id="create_board" parameterType="java.util.HashMap">
        INSERT INTO MOM_BOARD 
		        ( DIVISION_CD     
				, COMPANY_CD      
				, BOARD_ID        
				, BOARD_TYPE      
				, BOARD_TITLE     
				, BOARD_CONTENTS  
				, USE_YN          
				, NOTICE_YN       
				, CREATE_DATE     
				, CREATE_BY       
				, UPDATE_DATE     
				, UPDATE_BY       
				, TID 
		        )
        VALUES  ( #{divisionCd, jdbcType=VARCHAR}
                , #{companyCd, jdbcType=VARCHAR}
            <if test="boardId != null and boardId != ''">
                , #{boardId, jdbcType=VARCHAR}
            </if>
            <if test="boardId == null or boardId == ''">
                , S_ORDER_SEQ.NEXTVAL
            </if>
                , #{boardType, jdbcType=VARCHAR}
                , #{boardTitle, jdbcType=VARCHAR}
                , #{boardContents, jdbcType=VARCHAR}
                , UPPER(#{useYn, jdbcType=VARCHAR})
                , UPPER(#{noticeYn, jdbcType=VARCHAR})
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
                , #{createBy, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
                , #{createBy, jdbcType=VARCHAR}
                , ''
                )
    </insert>
    
    <update id="modify_board" parameterType="java.util.HashMap">
        UPDATE MOM_BOARD
        SET BOARD_TYPE = #{boardType, jdbcType=VARCHAR}
          , BOARD_TITLE = #{boardTitle, jdbcType=VARCHAR}
          , BOARD_CONTENTS = #{boardContents, jdbcType=VARCHAR}
          , USE_YN = UPPER(#{useYn, jdbcType=VARCHAR})
          , NOTICE_YN = UPPER(#{noticeYn, jdbcType=VARCHAR})
          , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
          , UPDATE_BY = #{updateBy, jdbcType=VARCHAR}
        WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
        AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
        AND BOARD_ID = #{boardId, jdbcType=VARCHAR}
    </update>
    
    
    <delete id="remove_board" parameterType="java.util.HashMap">
        DELETE FROM MOM_BOARD
        WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
        AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
        AND BOARD_ID = #{boardId, jdbcType=VARCHAR}
    </delete>
	
	
	<select id="get_noticeBoard_list" resultType="camelMap" parameterType="java.util.HashMap">
        SELECT Z.*
		  FROM (  SELECT A.BOARD_TITLE
		               , A.BOARD_CONTENTS
		               , A.BOARD_ID AS BOARD_KEY
		               , B.BOARD_ID
		               , MAX (A.CREATE_DATE) CREATE_DATE
		            FROM MOM_BOARD A
		               , MOM_BOARD_CHK B
		           WHERE A.DIVISION_CD = B.DIVISION_CD(+)
		             AND A.COMPANY_CD = B.COMPANY_CD(+)
		             AND A.BOARD_TYPE IN (SELECT CODE_ID 
		                                    FROM MOM_CODE 
		                                   WHERE DIVISION_CD = A.DIVISION_CD 
		                                     AND COMPANY_CD = A.COMPANY_CD 
		                                     AND CODE_CLASS_ID = 'BOARD_TYPE' 
		                                     AND USE_YN = 'Y' 
		                                     AND ATTRIBUTE1 = 'Y')
		             AND A.BOARD_ID = B.BOARD_ID(+)
		             AND B.CREATE_BY(+) = #{userId, jdbcType=VARCHAR}
		             AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		             AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		             AND A.USE_YN = 'Y'
		             AND A.NOTICE_YN = 'Y'
		        GROUP BY A.BOARD_TITLE, A.BOARD_CONTENTS, A.BOARD_ID, B.BOARD_ID
		        ORDER BY MAX (A.CREATE_DATE) DESC) Z
		 WHERE ROWNUM = 1 
		 <if test='popFlag == "Y"'>
		 AND Z.BOARD_ID IS NULL
		 </if>
    </select>
    
    
    <insert id="create_noticeUserCheck" parameterType="java.util.HashMap">
        INSERT INTO MOM_BOARD_CHK 
                ( DIVISION_CD     
                , COMPANY_CD      
                , BOARD_ID        
                , CREATE_DATE     
                , CREATE_BY       
                , UPDATE_DATE     
                , UPDATE_BY       
                )
        VALUES  ( #{divisionCd, jdbcType=VARCHAR}
                , #{companyCd, jdbcType=VARCHAR}
                , #{boardId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
                , #{createBy, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
                , #{createBy, jdbcType=VARCHAR}
                )
    </insert>
    
    <update id="modify_noticeUserCheck" parameterType="java.util.HashMap">
        UPDATE MOM_BOARD_CHK
        SET UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
          , UPDATE_BY = #{updateBy, jdbcType=VARCHAR}
        WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
        AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
        AND BOARD_ID = #{boardId, jdbcType=VARCHAR}
        AND CREATE_BY = #{updateBy, jdbcType=VARCHAR}
    </update>
    
    <select id="get_login_list" resultType="camelMap" parameterType="java.util.HashMap">
    	SELECT A.USER_ID
    	     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(A.DIVISION_CD, 
    	     										   A.COMPANY_CD, 
    	     										   A.USER_ID) 
    	          FROM DUAL) AS USER_NAME
    	     , TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
    	     , A.IP_ADDRESS
    	  FROM MOM_LOGIN A
    	 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
    	   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
    	   <if test="id != null and id != ''"> 
    	   AND UPPER(A.USER_ID) LIKE '%' || UPPER(#{id, jdbcType=VARCHAR}) || '%'
    	   </if>
    	   AND A.CREATE_DATE BETWEEN  TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997 / 24
    	 ORDER BY A.USER_ID, A.CREATE_DATE DESC
    </select>
    
    <insert id="create_login" parameterType="java.util.HashMap">
        INSERT INTO MOM_LOGIN 
                ( DIVISION_CD,
				  COMPANY_CD,
				  USER_ID,
				  IP_ADDRESS,
				  LOGIN_RETRY_COUNT,
				  PC_NAME,
				  USE_YN,
				  DESCRIPTION,
				  CREATE_BY,
				  CREATE_DATE,
				  LOGIN_TYPE
                )
        VALUES  ( #{divisionCd, jdbcType=VARCHAR},
				  #{companyCd, jdbcType=VARCHAR},
				  #{userId, jdbcType=VARCHAR},
				  #{ipAddress, jdbcType=VARCHAR},
				  #{loginRetryCount, jdbcType=INTEGER},
				  #{pcName, jdbcType=VARCHAR},
				  #{useYn, jdbcType=VARCHAR},
				  #{description, jdbcType=VARCHAR},
				  #{userId, jdbcType=VARCHAR},
				  MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
				  #{loginType, jdbcType=VARCHAR}
                )
    </insert>
    
    <!-- 20200421 -->
    
    <select id="get_authorityMenu_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MM.PARENT_ID
		     , MM.ID
		     , (SELECT MOM_COMMON_PKG.FN_GET_MULTI_LANG (MM.DIVISION_CD , MM.DIVISION_CD, MM.NAME , 'MENU' , #{locale, jdbcType=VARCHAR}) 
		          FROM DUAL) AS NAME
		     , MM.URL
		     , DECODE(MA.MENU_ID, NULL, 'N', 'Y') AS AUTH_FLAG
		     , MA.ID AS AUTH_ID
		  FROM (SELECT A.PARENT_ID
		             , A.ID
		             , B.NAME
		             , A.DIVISION_CD
		             , A.COMPANY_CD
		             , A.DISPLAY_ORDER
		             , B.URL
		          FROM MOM_SITE_MENU A
		             , MICA_MENU B
		         WHERE A.ID = B.ID
		           AND B.USE_FLAG = 'Y'
		           AND B.LOCALE = 'KR'
		           ) MM
		     , (SELECT A.ID
		             , A.MENU_ID
		             , A.DIVISION_CD
		             , A.COMPANY_CD
		          FROM MOM_AUTH A
		         WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND A.COMPANY_CD= #{companyCd, jdbcType=VARCHAR}
				   AND A.ID = #{codeId, jdbcType=VARCHAR}
		           ) MA
		 WHERE MM.DIVISION_CD = MA.DIVISION_CD(+)
		   AND MM.COMPANY_CD = MA.COMPANY_CD(+)
		   AND MM.ID = MA.MENU_ID(+)
		   AND MM.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND MM.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		 ORDER BY MM.PARENT_ID, MM.DISPLAY_ORDER 
	</select>
	
	<select id="get_momAuth_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT * FROM MOM_AUTH
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	   <if test="authId != null">
	  	AND ID = #{authId, jdbcType=VARCHAR}
	   </if>
	   <if test="id != null">
	  	AND MENU_ID = #{id, jdbcType=VARCHAR}
	   </if>
	</select>
	
	<select id="get_momAuth" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT * FROM MOM_AUTH
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		  AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	  	  AND ID = #{authId, jdbcType=VARCHAR}
	  	  AND MENU_ID = #{id, jdbcType=VARCHAR}
	</select>
	
	<insert id="create_momAuth" parameterType="java.util.HashMap">
		INSERT INTO MOM_AUTH ( 
					DIVISION_CD,
					COMPANY_CD,
					ID,
					MENU_ID
					)
			   VALUES ( #{divisionCd, jdbcType=VARCHAR},
						#{companyCd, jdbcType=VARCHAR},
						#{authId, jdbcType=VARCHAR},
						#{id, jdbcType=VARCHAR})
	</insert>
	
    <delete id="remove_momAuth" parameterType="java.util.HashMap">
		DELETE FROM MOM_AUTH
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND ID = #{authId, jdbcType=VARCHAR},
		   AND MENU_ID = #{id, jdbcType=VARCHAR}
	</delete>
	
	<select id="get_momAuthElement_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT B.ID
	     , A.MENU_ID
	     , A.ELEMENT_ID
	     , B.DISPLAY_ORDER
	     , DECODE(B.ELEMENT_ID, NULL, 'N', 'Y') AS EL_FLAG
	  FROM MICA_ELEMENT A
	     , (SELECT *
	          FROM MOM_AUTH_ELEMENT
	         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		       AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	           AND ID = #{authId, jdbcType=VARCHAR}
	          )B
	 WHERE A.MENU_ID = B.MENU_ID(+)
	   AND A.ELEMENT_ID = B.ELEMENT_ID(+)
	   AND A.MENU_ID = #{id, jdbcType=VARCHAR}
	 ORDER BY B.DISPLAY_ORDER 
	</select>
	
 	<insert id="create_momAuthElement" parameterType="java.util.HashMap">
		INSERT INTO MOM_AUTH_ELEMENT ( 
					DIVISION_CD,
					COMPANY_CD,
					ID,
					MENU_ID,
					ELEMENT_ID,
					DISPLAY_ORDER
					)
			   VALUES ( #{divisionCd, jdbcType=VARCHAR},
						#{companyCd, jdbcType=VARCHAR},
						#{id, jdbcType=VARCHAR},
						#{menuId, jdbcType=VARCHAR},
						#{elementId, jdbcType=VARCHAR},
						#{displayOrder, jdbcType=VARCHAR})
	</insert>
	
	<update id="modify_momAuthElement" parameterType="java.util.HashMap">
		UPDATE MOM_AUTH_ELEMENT
		SET DIVISION_CD = #{divisionCd, jdbcType=VARCHAR},
			COMPANY_CD = #{companyCd, jdbcType=VARCHAR},
			MENU_ID = #{menuId, jdbcType=VARCHAR},
			ELEMENT_ID = #{elementId, jdbcType=VARCHAR},
			DISPLAY_ORDER = #{displayOrder, jdbcType=VARCHAR}
		WHERE MENU_ID = #{menuId, jdbcType=VARCHAR}
	    AND ELEMENT_ID = #{elementId, jdbcType=VARCHAR}
	</update>
	
    <delete id="remove_momAuthElement" parameterType="java.util.HashMap">
		DELETE FROM MOM_AUTH_ELEMENT
		 WHERE MENU_ID = #{menuId, jdbcType=VARCHAR}
		   AND ELEMENT_ID = #{elementId, jdbcType=VARCHAR}
	</delete>
</mapper>