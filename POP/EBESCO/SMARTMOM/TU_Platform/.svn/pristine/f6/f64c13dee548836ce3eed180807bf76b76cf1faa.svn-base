<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.shipping.itemReplacement">
	<select id="get_itemReplacement_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MO.DIVISION_CD
		     , MO.COMPANY_CD
		     , MO.ITEM_ID
		     , MID.ITEM_NAME
		     , MID.ITEM_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MID.DIVISION_CD, MID.COMPANY_CD, 'ITEM_TYPE', MID.ITEM_TYPE)
		          FROM DUAL ) AS ITEM_TYPE_NAME
		     , TO_CHAR(MO.DUE_DATE, 'YYYY-MM-DD') AS DUE_DATE
		     , MO.REMAIN_QTY
		     , MO.LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MO.DIVISION_CD, MO.COMPANY_CD, MO.LOCATION_CD)
		          FROM DUAL ) AS LOCATION_NAME
		     , NVL(MS.CURRENT_QTY, 0) AS CURRENT_QTY
		     , '' AS DESCRIPTION
		  FROM (SELECT MO.DIVISION_CD
		             , MO.COMPANY_CD
		             , MO.ITEM_ID
		             , MIN(MO.DUE_DATE) AS DUE_DATE
		             , SUM(MO.ORDER_QTY - NVL(MO.SHIP_QTY,0) - NVL(MO.CANCEL_QTY,0)) AS REMAIN_QTY
		             , #{locationCd, jdbcType=VARCHAR} AS LOCATION_CD
		          FROM MOM_SALES_ORDER_V MO
		         WHERE MO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND MO.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		           AND MO.ORDER_STATE = 'N'
		           <if test="fromDate != null and fromDate != ''">
		           AND TO_DATE(SUBSTR(MO.ORIGIN_DUE_DATE, 0, 10), 'YYYY-MM-DD') BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		           </if>
		         GROUP BY MO.DIVISION_CD , MO.COMPANY_CD , MO.ITEM_ID ) MO
		     , MOM_ITEM_DEFINITION MID
		     , MOM_ITEM_STOCK MS
		 WHERE MO.DIVISION_CD = MID.DIVISION_CD(+)
		   AND MO.COMPANY_CD = MID.COMPANY_CD(+)
		   AND MO.ITEM_ID = MID.ITEM_ID(+)
		   AND MO.DIVISION_CD = MS.DIVISION_CD(+)
		   AND MO.COMPANY_CD = MS.COMPANY_CD(+)
		   AND MO.ITEM_ID = MS.ITEM_ID(+)
		   AND MO.LOCATION_CD = MS.LOCATION_CD(+)
		   AND MS.LOCATION_CD = #{locationCd, jdbcType=VARCHAR}
		   <if test="itemId != null and itemId != ''">
		   AND (MO.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%'
		       OR UPPER(MID.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%')
		   </if>
		 ORDER BY MO.DUE_DATE, MO.ITEM_ID
	</select>
	
	<insert id="create_itemReplacement" statementType="CALLABLE">
		{
	        CALL SP_MOM_SALES_ORDER_PKG.P_ITEM_REPLACEMENT (
	             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
	           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
	           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
	           , #{companyCd, mode=IN, jdbcType=VARCHAR}
	           , #{fromItemId, mode=IN, jdbcType=VARCHAR}
	           , #{toItemId, mode=IN, jdbcType=VARCHAR}
	           , #{locationCd, mode=IN, jdbcType=VARCHAR}
	           , TO_DATE(#{replaceDate, mode=IN, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	           , #{substitudeQty, mode=IN, jdbcType=NUMERIC}
	           , #{description, mode=IN, jdbcType=VARCHAR}
	           , #{createBy, mode=IN, jdbcType=VARCHAR}
	        )
	    }
	</insert>
</mapper>