<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.shipping.itemReplacementStatus">
	<select id="get_itemReplacementStatus_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.DIVISION_CD
		     , A.COMPANY_CD
		     , A.FROM_ITEM_ID
		     , A.FROM_ITEM_NAME
		     , A.TO_ITEM_ID
		     , A.TO_ITEM_NAME
		     , A.LOCATION_CD
		     , A.LOCATION_NAME
		     , A.QTY
		     , A.IO_DATE
		     , A.CANCEL_DATE
		     , A.CANCEL_QTY
		     , A.DESCRIPTION
		     , A.FROM_INOUT_ID
		     , A.TO_INOUT_ID
		     , A.CANCEL_REASON
		  FROM (SELECT MI.DIVISION_CD
		             , MI.COMPANY_CD
		             , MI.ITEM_ID AS FROM_ITEM_ID
		             , (SELECT MOM_COMMON_PKG.FN_GET_ITEM_NAME(MI.DIVISION_CD, MI.COMPANY_CD, MI.ITEM_ID)
		                  FROM DUAL) AS FROM_ITEM_NAME
		             , MO.ITEM_ID AS TO_ITEM_ID
		             , (SELECT MOM_COMMON_PKG.FN_GET_ITEM_NAME(MO.DIVISION_CD, MO.COMPANY_CD, MO.ITEM_ID)
		                  FROM DUAL) AS TO_ITEM_NAME
		             , MI.LOCATION_CD AS LOCATION_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MI.DIVISION_CD, MI.COMPANY_CD, MI.LOCATION_CD)
		                  FROM DUAL) AS LOCATION_NAME
		             , MO.QTY
		             , TO_CHAR(MI.IO_TIME, 'YYYY-MM-DD') AS IO_DATE
		             , DECODE(MIC.IO_CATEGORY, 'IR001', '', MIC.IO_TIME) AS CANCEL_DATE
		             , DECODE(MIC.IO_CATEGORY, 'IR001', 0, ABS(MIC.QTY)) AS CANCEL_QTY
		             , MI.DESCRIPTION
		             , MI.ITEM_STOCK_INOUT_ID AS FROM_INOUT_ID
		             , MO.ITEM_STOCK_INOUT_ID AS TO_INOUT_ID
		             , MIC.DESCRIPTION AS CANCEL_REASON
		          FROM MOM_ITEM_STOCK_INOUT MI
		             , MOM_ITEM_STOCK_INOUT MIC
		             , MOM_ITEM_STOCK_INOUT MO
		         WHERE MI.DIVISION_CD = MO.DIVISION_CD
		           AND MI.COMPANY_CD = MO.COMPANY_CD
		           AND MI.ITEM_STOCK_INOUT_ID = MO.PREV_STOCK_INOUT_ID
		           AND MI.IO_CATEGORY = MO.IO_CATEGORY
                   AND MO.DIVISION_CD = MIC.DIVISION_CD(+)
		           AND MO.COMPANY_CD = MIC.COMPANY_CD(+)
		           AND MO.ITEM_STOCK_INOUT_ID = MIC.PREV_STOCK_INOUT_ID(+)
		           AND MI.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND MI.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		           AND MI.IO_TYPE = 'I'
		           AND MI.IO_CATEGORY IN ( SELECT MC.CODE_ID
				                            FROM   MOM_CODE MC
				                            WHERE  MC.DIVISION_CD = MI.DIVISION_CD
				                            AND    MC.COMPANY_CD  = MI.COMPANY_CD                                    
				                            AND    MC.CODE_CLASS_ID = 'IO_CATEGORY'
				                            AND    MC.USE_YN      = 'Y'
				                            AND    NVL(MC.ATTRIBUTE21, 'N') = 'Y')
		           AND MO.ITEM_ID IS NOT NULL
		           <if test="fromDate != null and fromDate != ''">
			       AND MI.IO_TIME  BETWEEN TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			                       AND     TO_DATE (#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997/24
			     
			       </if>
                   <if test="locationCd != null and locationCd != ''">
                     AND MI.LOCATION_CD = #{locationCd, jdbcType=VARCHAR}
                   </if>
		           ) A
           WHERE 1 = 1
           <if test="itemId != null and itemId != ''">
            AND (A.FROM_ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%' 
                 OR UPPER(A.FROM_ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%' 
                 OR A.TO_ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%' 
                 OR UPPER(A.TO_ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%' )
           </if>
           <if test="cancelFlag != null and cancelFlag != ''">
	           <choose>
		           <when test='cancelFlag =="Y"'>
		            AND A.CANCEL_QTY != 0
		           </when>
		           <otherwise>
		           AND A.CANCEL_QTY = 0
		           </otherwise>
	           </choose>
           </if>
           ORDER BY A.IO_DATE, A.FROM_ITEM_ID
		          
	</select>
	
	<insert id="create_itemReplacementCancel" statementType="CALLABLE">
		{
	        CALL SP_MOM_SALES_ORDER_PKG.P_ITEM_REPLACEMENT_CANCEL (
	             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
	           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
	           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
	           , #{companyCd, mode=IN, jdbcType=VARCHAR}
	           , #{fromInoutId, mode=IN, jdbcType=VARCHAR}
	           , #{toInoutId, mode=IN, jdbcType=VARCHAR}
	           , #{cancelReason, mode=IN, jdbcType=VARCHAR}
	           , #{createBy, mode=IN, jdbcType=VARCHAR}
	        )
	    }
	</insert>
</mapper>