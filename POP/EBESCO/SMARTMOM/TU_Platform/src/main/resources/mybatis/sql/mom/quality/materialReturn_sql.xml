<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.quality.materialReturn">
	<select id="get_materialReturn_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MIS.ITEM_ID                
		     , MID.ITEM_NAME               
		     , MID.SPECIFICATION           
		     , MID.ITEM_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MID.DIVISION_CD
             										  , MID.COMPANY_CD
             										  , 'ITEM_TYPE'
             										  , MID.ITEM_TYPE) 
             	  FROM DUAL) AS ITEM_TYPE_NAME
		     , MIS.LOCATION_CD  
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MIS.DIVISION_CD
		     											 , MIS.COMPANY_CD
		     											 , MIS.LOCATION_CD)
		     	  FROM DUAL) LOCATION_NAME   
		     , MID.UNIT                    
		     , MID.CONVERSION_UNIT         
		     , NVL(MID.CONVERSION_UNIT_QTY, 1) AS ITEM_CONVERSION_UNIT_QTY
		     , (MIS.CURRENT_QTY * MID.CONVERSION_UNIT_QTY) AS CONVERSION_UNIT_QTY  
			 , MP.MARKET_CD
			 , MP.CURRENCY_CD
		     , '' AS UNIT_PRICE
		     , '' AS EXCHANGE_RATE
		     , '' AS RETURN_CATEGORY
		     , '' AS RETURN_TYPE
		     , MF.VENDOR_CD AS VENDOR_CD 
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(MF.DIVISION_CD
		     										   , MF.COMPANY_CD
		     										   , MF.VENDOR_CD) 
		     	  FROM DUAL) VENDOR_NAME   
		     , '' AS RETURN_LOCATION
		     , MIS.CURRENT_QTY
		     , '' AS SHIP_QTY                                                         
			 , '' AS DESCRIPTION
		     , MIS.ITEM_STOCK_ID           
		     , TO_CHAR(MIS.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE
		FROM   MOM_ITEM_STOCK MIS
		     , MOM_ITEM_DEFINITION MID
		     , MOM_FACILITY MF
		     , MOM_PARAMETER MP
		WHERE  MIS.DIVISION_CD = MID.DIVISION_CD
		AND    MIS.COMPANY_CD  = MID.COMPANY_CD
		AND    MIS.ITEM_ID     = MID.ITEM_ID
		AND    MIS.DIVISION_CD = MF.DIVISION_CD
		AND    MIS.COMPANY_CD  = MF.COMPANY_CD
		AND    MIS.LOCATION_CD = MF.FACILITY_CD
		AND	   MIS.DIVISION_CD = MP.DIVISION_CD
		AND    MIS.COMPANY_CD  = MP.COMPANY_CD
		<if test = "returnType =='MTP'">
		AND    EXISTS ( SELECT '*'
		                FROM   MOM_CODE MC
		                WHERE  MC.DIVISION_CD  = MIS.DIVISION_CD
		                AND    MC.COMPANY_CD   = MIS.COMPANY_CD
		                AND    MC.CODE_CLASS_ID = 'FACILITY_TYPE'
		                AND    MC.CODE_ID       = MF.FACILITY_TYPE
		                AND    NVL(MC.USE_YN, 'N') = 'Y'
		                AND    NVL(MC.ATTRIBUTE6, 'N') = 'Y')
		AND    EXISTS ( SELECT '*'
                        FROM   MOM_CODE MC
                        WHERE  MC.DIVISION_CD = MIS.DIVISION_CD
                        AND    MC.COMPANY_CD  = MIS.COMPANY_CD
                        AND    MC.CODE_CLASS_ID = 'ITEM_TYPE'
                        AND    MC.CODE_ID       = MID.ITEM_TYPE
                        AND    NVL(MC.USE_YN, 'N') = 'Y'
                        AND    NVL(MC.ATTRIBUTE7, 'N') = 'Y')
		</if>
		<if test = "returnType =='MTW'">
		AND    EXISTS ( SELECT '*'
		                FROM   MOM_CODE MC
		                WHERE  MC.DIVISION_CD  = MIS.DIVISION_CD
		                AND    MC.COMPANY_CD   = MIS.COMPANY_CD
		                AND    MC.CODE_CLASS_ID = 'FACILITY_TYPE'
		                AND    MC.CODE_ID       = MF.FACILITY_TYPE
		                AND    NVL(MC.USE_YN, 'N') = 'Y'
		                AND    NVL(MC.ATTRIBUTE14, 'N') = 'Y')
		AND    EXISTS ( SELECT '*'
                        FROM   MOM_CODE MC
                        WHERE  MC.DIVISION_CD = MIS.DIVISION_CD
                        AND    MC.COMPANY_CD  = MIS.COMPANY_CD
                        AND    MC.CODE_CLASS_ID = 'ITEM_TYPE'
                        AND    MC.CODE_ID       = MID.ITEM_TYPE
                        AND    NVL(MC.USE_YN, 'N') = 'Y'
                        AND    NVL(MC.ATTRIBUTE8, 'N') = 'Y')
		</if>
		<if test = "returnType =='MTO'">
		AND    EXISTS ( SELECT '*'
		                FROM   MOM_CODE MC
		                WHERE  MC.DIVISION_CD  = MIS.DIVISION_CD
		                AND    MC.COMPANY_CD   = MIS.COMPANY_CD
		                AND    MC.CODE_CLASS_ID = 'FACILITY_TYPE'
		                AND    MC.CODE_ID       = MF.FACILITY_TYPE
		                AND    NVL(MC.USE_YN, 'N') = 'Y'
		                AND    NVL(MC.ATTRIBUTE15, 'N') = 'Y')
		AND    EXISTS ( SELECT '*'
                        FROM   MOM_CODE MC
                        WHERE  MC.DIVISION_CD = MIS.DIVISION_CD
                        AND    MC.COMPANY_CD  = MIS.COMPANY_CD
                        AND    MC.CODE_CLASS_ID = 'ITEM_TYPE'
                        AND    MC.CODE_ID       = MID.ITEM_TYPE
                        AND    NVL(MC.USE_YN, 'N') = 'Y'
                        AND    NVL(MC.ATTRIBUTE9, 'N') = 'Y')
		</if>
		AND    MIS.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    MIS.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		<if test = "customerName != null and customerName != ''">
		AND    MIS.LOCATION_CD = #{customerName, jdbcType=VARCHAR}
		</if>
		<if test = "itemName != null and itemName != ''">
         AND (MIS.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
              OR UPPER(MID.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')
         </if>
         ORDER BY MF.FACILITY_SEQ, MIS.LOCATION_CD, MIS.ITEM_ID
	</select>
	
	<delete id="remove_materialReturnTemp" statementType="CALLABLE" parameterType="java.util.HashMap">
		DELETE FROM MOM_ITEM_RETURN_TEMP
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND ITEM_RTN_TYPE = #{itemRtnType, jdbcType=VARCHAR}
		   AND TNX_TYPE = #{tnxType, jdbcType=VARCHAR}
	</delete>
	
	<insert id="create_materialReturnTemp" statementType="CALLABLE" parameterType="java.util.HashMap">
		INSERT INTO MOM_ITEM_RETURN_TEMP(
			DIVISION_CD,
		    COMPANY_CD,
		    ITEM_RTN_TYPE,
		    ITEM_ID,
		    LOCATION_CD,
		    TO_LOCATION_CD,
		    RETURN_QTY,
		    MARKET_CODE,
		    CURRENCY_CODE,
		    UNIT_PRICE,
		    EXCHANGE_RATE,
		    RETURN_CATEGORY,
		    RETURN_TYPE,
		    VENDOR_CD,
		    RETURN_DATE,
		    DESCRIPTION,
		    CREATE_DATE,
		    CREATE_BY,
		    TNX_TYPE,
		    CONVERSION_UNIT_QTY
		)
		VALUES(
			#{divisionCd, jdbcType=VARCHAR},
			#{companyCd, jdbcType=VARCHAR},
			#{itemRtnType, jdbcType=VARCHAR},
			#{itemId, jdbcType=VARCHAR},
			#{locationCd, jdbcType=VARCHAR},
			#{toLocationCd, jdbcType=VARCHAR},
			#{returnQty, jdbcType=NUMERIC},
			#{marketCd, jdbcType=VARCHAR},
			#{currencyCd, jdbcType=VARCHAR},
			#{unitPrice, jdbcType=NUMERIC},
			#{exchangeRate, jdbcType=NUMERIC},
			#{returnCategory, jdbcType=VARCHAR},
			#{returnType, jdbcType=VARCHAR},
			#{vendorCd, jdbcType=VARCHAR},
			TO_DATE(#{returnDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
			#{description, jdbcType=VARCHAR},
			MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			#{createBy, jdbcType=VARCHAR},
			#{tnxType, jdbcType=VARCHAR},
			#{conversionUnitQty, jdbcType=NUMERIC}
		)
	</insert>
	
	<insert id="create_materialReturn" statementType="CALLABLE">
	{
        CALL SP_MOM_RETURN_PKG.P_CREATE_MATERIAL_RETURN (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{itemRtnType, mode=IN, jdbcType=VARCHAR}
           , #{tnxType, jdbcType=VARCHAR}
           , #{createBy, jdbcType=VARCHAR}
        )
    }
	</insert>
</mapper>