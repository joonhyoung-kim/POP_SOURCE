<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.eis.productivityStatusByModel">
	<select id="get_productivityStatusByModel_list" resultType="camelMap" parameterType="java.util.HashMap">
	  SELECT D.ITEM_BUSINESS
	       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( #{divisionCd, jdbcType=VARCHAR} 
	                                                , #{companyCd, jdbcType=VARCHAR}
	                                                , 'ITEM_GROUP_MEDIUM' 
	                                                , D.ITEM_BUSINESS) 
	            FROM DUAL) AS ITEM_BUSINESS_NAME
	       , D.ITEM_PRODUCT
	       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( #{divisionCd, jdbcType=VARCHAR} 
	                                                , #{companyCd, jdbcType=VARCHAR}
	                                                , 'ITEM_GROUP_LARGE'
	                                                , D.ITEM_PRODUCT) 
	            FROM DUAL) AS ITEM_PRODUCT_NAME
	       , D.ITEM_MODEL
	       , D.DATA_TYPE
	       , MAX(D.DATA_NAME) AS DATA_NAME
           , MAX(D.DATA_TYPE_SEQ) AS DATA_TYPE_SEQ
	       ${pivot1}
           ${pivot2}
           ${pivot3}
	    FROM (SELECT A.ITEM_BUSINESS
	               , A.ITEM_PRODUCT
	               , A.ITEM_MODEL
	               , A.DATA_TYPE
	               , MC.CODE_NAME AS DATA_NAME
	               , MC.UI_SEQUENCE AS DATA_TYPE_SEQ
	               , MC.CODE_VALUES
	               , DECODE (SEQ, 1, TRUNC(A.DAY_DATA,1), 0) AS D1
	               , DECODE (SEQ, 2, TRUNC(A.DAY_DATA,1), 0) AS D2
	               , DECODE (SEQ, 3, TRUNC(A.DAY_DATA,1), 0) AS D3
	               , DECODE (SEQ, 4, TRUNC(A.DAY_DATA,1), 0) AS D4
	               , DECODE (SEQ, 5, TRUNC(A.DAY_DATA,1), 0) AS D5
	               , DECODE (SEQ, 6, TRUNC(A.DAY_DATA,1), 0) AS D6
	               , DECODE (SEQ, 7, TRUNC(A.DAY_DATA,1), 0) AS D7
	               , 0 AS W1
	               , 0 AS W2
	               , 0 AS W3
	               , 0 AS W4
	               , 0 AS W5
	               , 0 AS M1
	               , 0 AS M2
	               , 0 AS M3
	            FROM MOM_EIS_PROD_STAT_MODEL A
	               , MOM_CODE MC
	           WHERE A.DIVISION_CD = MC.DIVISION_CD
                 AND A.COMPANY_CD = MC.COMPANY_CD
                 AND A.DATA_TYPE = MC.CODE_ID
                 AND MC.CODE_CLASS_ID = 'PRODUCE_STATUS_TYPE'
                 AND MC.USE_YN = 'Y'
                 AND A.W_START_DATE = (SELECT TO_CHAR (WEEKSTART_DATE, 'yyyymmdd')
                                         FROM TH_MST_TIME
                                        WHERE DATE_ID = TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'))
                 AND A.DIVISION_CD =  #{divisionCd, jdbcType=VARCHAR} 
                 AND A.COMPANY_CD =  #{companyCd, jdbcType=VARCHAR}
               <if test="itemBusinessCd != null and itemBusinessCd != ''">
                 AND A.ITEM_BUSINESS = #{itemBusinessCd, jdbcType=VARCHAR}
               </if> 
               <if test="itemProductCd != null and itemProductCd != ''">
                 AND A.ITEM_PRODUCT = #{itemProductCd, jdbcType=VARCHAR}
               </if> 
               <if test="itemModelCd != null and itemModelCd != ''">
                 AND A.ITEM_MODEL = #{itemModelCd, jdbcType=VARCHAR}
               </if> 
	          UNION ALL
	          SELECT A.ITEM_BUSINESS
	               , A.ITEM_PRODUCT
	               , A.ITEM_MODEL
	               , A.DATA_TYPE
	               , MC.CODE_NAME AS DATA_NAME
	               , MC.UI_SEQUENCE AS DATA_TYPE_SEQ
	               , MC.CODE_VALUES
	               , 0 AS D1
	               , 0 AS D2
	               , 0 AS D3
	               , 0 AS D4
	               , 0 AS D5
	               , 0 AS D6
	               , 0 AS D7
	               , DECODE (B.W_SEQ, 1, TRUNC(A.WEEK_DATA,1), 0) AS W1
	               , DECODE (B.W_SEQ, 2, TRUNC(A.WEEK_DATA,1), 0) AS W2
	               , DECODE (B.W_SEQ, 3, TRUNC(A.WEEK_DATA,1), 0) AS W3
	               , DECODE (B.W_SEQ, 4, TRUNC(A.WEEK_DATA,1), 0) AS W4
	               , DECODE (B.W_SEQ, 5, TRUNC(A.WEEK_DATA,1), 0) AS W5
	               , 0 AS M1
	               , 0 AS M2
	               , 0 AS M3
	            FROM MOM_EIS_PROD_STAT_MODEL A
	               , (  SELECT WEEKSTART_DATE, DENSE_RANK () OVER (ORDER BY WEEKSTART_DATE) AS W_SEQ
	                      FROM TH_MST_TIME
	                     WHERE WEEKSTART_DATE BETWEEN TO_DATE (SUBSTR (#{fromDate, jdbcType=VARCHAR}, 0, 6), 'yyyymm') 
	                                              AND TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'yyyymmdd')
	                  GROUP BY WEEKSTART_DATE) B
	               , MOM_CODE MC
	           WHERE A.DIVISION_CD = MC.DIVISION_CD
                 AND A.COMPANY_CD = MC.COMPANY_CD
                 AND A.DATA_TYPE = MC.CODE_ID
                 AND MC.CODE_CLASS_ID = 'PRODUCE_STATUS_TYPE'
                 AND MC.USE_YN = 'Y'
                 AND A.W_START_DATE = TO_CHAR (B.WEEKSTART_DATE, 'yyyymmdd')
                 AND A.DIVISION_CD =  #{divisionCd, jdbcType=VARCHAR} 
                 AND A.COMPANY_CD =  #{companyCd, jdbcType=VARCHAR} 
               <if test="itemBusinessCd != null and itemBusinessCd != ''">
                 AND A.ITEM_BUSINESS = #{itemBusinessCd, jdbcType=VARCHAR}
               </if> 
               <if test="itemProductCd != null and itemProductCd != ''">
                 AND A.ITEM_PRODUCT = #{itemProductCd, jdbcType=VARCHAR}
               </if> 
               <if test="itemModelCd != null and itemModelCd != ''">
                 AND A.ITEM_MODEL = #{itemModelCd, jdbcType=VARCHAR}
               </if> 
	          UNION ALL
	          SELECT A.ITEM_BUSINESS
	               , A.ITEM_PRODUCT
	               , A.ITEM_MODEL
	               , A.DATA_TYPE
	               , MC.CODE_NAME AS DATA_NAME
	               , MC.UI_SEQUENCE AS DATA_TYPE_SEQ
	               , MC.CODE_VALUES
	               , 0 AS D1
	               , 0 AS D2
	               , 0 AS D3
	               , 0 AS D4
	               , 0 AS D5
	               , 0 AS D6
	               , 0 AS D7
	               , 0 AS W1
	               , 0 AS W2
	               , 0 AS W3
	               , 0 AS W4
	               , 0 AS W5
	               , DECODE (B.M_SEQ, 1, TRUNC(A.MONTH_DATA,1), 0) AS M1
	               , DECODE (B.M_SEQ, 2, TRUNC(A.MONTH_DATA,1), 0) AS M2
	               , DECODE (B.M_SEQ, 3, TRUNC(A.MONTH_DATA,1), 0) AS M3
	            FROM MOM_EIS_PROD_STAT_MODEL A
	               , (  SELECT YEAR || MONTH AS YYYYMM, DENSE_RANK () OVER (ORDER BY YEAR || MONTH) AS M_SEQ, MAX (DATE_ID) AS DATE_ID
	                      FROM TH_MST_TIME
	                     WHERE DATE_ID BETWEEN ADD_MONTHS (TO_DATE (SUBSTR (#{fromDate, jdbcType=VARCHAR}, 0, 6), 'yyyymm'), -2) 
	                                       AND TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'yyyymmdd')
	                  GROUP BY YEAR, MONTH) B
	               , MOM_CODE MC
	           WHERE A.DIVISION_CD = MC.DIVISION_CD
                 AND A.COMPANY_CD = MC.COMPANY_CD
                 AND A.DATA_TYPE = MC.CODE_ID
                 AND MC.CODE_CLASS_ID = 'PRODUCE_STATUS_TYPE'
                 AND MC.USE_YN = 'Y'
                 AND A.YYYYMM = B.YYYYMM
                 AND A.DIVISION_CD =  #{divisionCd, jdbcType=VARCHAR} 
                 AND A.COMPANY_CD =  #{companyCd, jdbcType=VARCHAR} 
               <if test="itemBusinessCd != null and itemBusinessCd != ''">
                 AND A.ITEM_BUSINESS = #{itemBusinessCd, jdbcType=VARCHAR}
               </if> 
               <if test="itemProductCd != null and itemProductCd != ''">
                 AND A.ITEM_PRODUCT = #{itemProductCd, jdbcType=VARCHAR}
               </if> 
               <if test="itemModelCd != null and itemModelCd != ''">
                 AND A.ITEM_MODEL = #{itemModelCd, jdbcType=VARCHAR}
               </if> 
	      ) D
	GROUP BY D.ITEM_BUSINESS, D.ITEM_PRODUCT, D.ITEM_MODEL, D.DATA_TYPE
	ORDER BY D.ITEM_BUSINESS, D.ITEM_PRODUCT, D.ITEM_MODEL, DATA_TYPE_SEQ
				
	</select>
	
	<select id="get_model_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT DISTINCT NVL(ITEM_GROUP_CODE, '-') AS CODE
	     , NVL(ITEM_GROUP_CODE, '-') AS NAME
	     , NVL(ITEM_GROUP_CODE, '-') AS ID
	     , NVL(ITEM_GROUP_CODE, '-') AS TEXT
	  FROM MOM_ITEM_DEFINITION 
	 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	ORDER BY NVL(ITEM_GROUP_CODE, '-')  
	
	</select>
	
   <!-- 20200520 / chs / 프로시저 호출 (데이터생성) -->
   <insert id="create_productivityStatusByModelProc" statementType="CALLABLE">
	{
        CALL SP_MOM_EIS_PKG.P_CREATE_PRODUCTIVITY_MODEL (
        	#{p_err_code, mode=OUT, jdbcType=VARCHAR}
          , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
          , #{divisionCd, mode=IN, jdbcType=VARCHAR}
          , #{companyCd, mode=IN, jdbcType=VARCHAR}
          , #{updateBy, mode=IN, jdbcType=VARCHAR}
          , #{fromDate, mode=IN, jdbcType=VARCHAR}
        )
    }
	</insert>
	<!-- 20200520 End -->
</mapper>