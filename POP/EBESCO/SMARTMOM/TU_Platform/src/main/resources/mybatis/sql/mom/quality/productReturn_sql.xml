<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.quality.productReturn">
	
	<!-- modify_hists 
    * XMOMA11 / 20191106 / gyp / SQL 정리, TRIM 추가, 규격 조건 분리 추가
     -->
	<select id="get_productReturn_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT S.ITEM_ID
			 , D.ITEM_NAME
			 , D.SPECIFICATION
			 , D.ITEM_TYPE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME ( D.DIVISION_CD
                                                       , D.COMPANY_CD
                                                       , 'ITEM_TYPE'
                                                       , D.ITEM_TYPE) 
                  FROM DUAL) AS ITEM_TYPE_NAME
			 , S.LOCATION_CD
			 , F.FACILITY_NAME
			 , S.CURRENT_QTY
			 , S.ITEM_STOCK_ID
			 , D.CONVERSION_UNIT
             , (D.CONVERSION_UNIT_QTY * S.CURRENT_QTY) AS CONVERSION_UNIT_QTY
             , NVL(D.CONVERSION_UNIT_QTY, 1) AS ITEM_CONVERSION_UNIT_QTY
			 , '' AS RETURN_QTY
			 , '' AS RETURN_TYPE
			 , '' AS RETURN_LOCATION
			 , '' AS RETURN_DATE
			 , P.MARKET_CD
		     , P.CURRENCY_CD
	         , NVL(F.VENDOR_CD, F.FACILITY_CD)  AS VENDOR_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME (F.DIVISION_CD
		                                                , F.COMPANY_CD
		                                                , NVL(F.VENDOR_CD, F.FACILITY_CD))
		          FROM DUAL) AS VENDOR_NAME
			 , '' AS EXCHANGE_RATE
			 , '' AS DESCRIPTION
		FROM   MOM_ITEM_STOCK S
		     , MOM_ITEM_DEFINITION D
		     , MOM_FACILITY F
		     , MOM_PARAMETER P
		WHERE  S.DIVISION_CD = D.DIVISION_CD
		AND    S.COMPANY_CD  = D.COMPANY_CD
		AND    S.ITEM_ID     = D.ITEM_ID
		AND    S.DIVISION_CD = F.DIVISION_CD
		AND    S.COMPANY_CD  = F.COMPANY_CD
		AND    S.LOCATION_CD = F.FACILITY_CD
		AND    S.DIVISION_CD = P.DIVISION_CD
		AND    S.COMPANY_CD  = P.COMPANY_CD
		AND    S.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    S.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND    EXISTS ( SELECT '*'
		                FROM   MOM_CODE MC
		                WHERE  MC.DIVISION_CD  = F.DIVISION_CD
		                AND    MC.COMPANY_CD   = F.COMPANY_CD
		                AND    MC.CODE_CLASS_ID = 'FACILITY_TYPE'
		                AND    MC.CODE_ID       = F.FACILITY_TYPE
		                AND    NVL(MC.USE_YN, 'N') = 'Y'
		                AND    NVL(MC.ATTRIBUTE7, 'N') = 'Y')
		<if test = "customerName != null and customerName != ''">
		 AND S.LOCATION_CD = #{customerName, jdbcType=VARCHAR}
		</if>
		<if test = "itemName != null and itemName != ''">
         AND (S.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
             OR UPPER(D.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')
        </if>
        <if test = "specification != null and specification != ''">
         AND UPPER(D.SPECIFICATION) LIKE '%' || TRIM(UPPER(#{specification, jdbcType=VARCHAR})) || '%'
        </if>
		ORDER BY S.ITEM_ID
	</select>
	
	<delete id="remove_productReturnTemp" statementType="CALLABLE" parameterType="java.util.HashMap">
		DELETE FROM MOM_ITEM_RETURN_TEMP
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND ITEM_RTN_TYPE = #{itemRtnType, jdbcType=VARCHAR}
		   AND TNX_TYPE = #{tnxType, jdbcType=VARCHAR}
	</delete>
	
	<insert id="create_productReturnTemp" statementType="CALLABLE" parameterType="java.util.HashMap">
		INSERT INTO MOM_ITEM_RETURN_TEMP(
			DIVISION_CD,
		    COMPANY_CD,
		    ITEM_RTN_TYPE,
		    ITEM_ID,
		    LOCATION_CD,
		    TO_LOCATION_CD,
		    RETURN_QTY,
		    MARKET_CODE,
		    CURRENCY_CODE,
		    UNIT_PRICE,
		    EXCHANGE_RATE,
		    RETURN_CATEGORY,
		    RETURN_TYPE,
		    VENDOR_CD,
		    RETURN_DATE,
		    DESCRIPTION,
		    CREATE_DATE,
		    CREATE_BY,
		    TNX_TYPE,
		    CONVERSION_UNIT_QTY
		)
		VALUES(
			#{divisionCd, jdbcType=VARCHAR},
			#{companyCd, jdbcType=VARCHAR},
			#{itemRtnType, jdbcType=VARCHAR},
			#{itemId, jdbcType=VARCHAR},
			#{locationCd, jdbcType=VARCHAR},
			#{toLocationCd, jdbcType=VARCHAR},
			#{returnQty, jdbcType=NUMERIC},
			#{marketCd, jdbcType=VARCHAR},
			#{currencyCd, jdbcType=VARCHAR},
			#{unitPrice, jdbcType=NUMERIC},
			#{exchangeRate, jdbcType=NUMERIC},
			#{returnCategory, jdbcType=VARCHAR},
			#{returnType, jdbcType=VARCHAR},
			#{vendorCd, jdbcType=VARCHAR},
			TO_DATE(#{returnDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
			#{description, jdbcType=VARCHAR},
			MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			#{createBy, jdbcType=VARCHAR},
			#{tnxType, jdbcType=VARCHAR},
			#{conversionUnitQty, jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="create_productReturn" statementType="CALLABLE">
	{
       CALL SP_MOM_RETURN_PKG.P_CREATE_PRODUCT_RETURN (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{itemRtnType, mode=IN, jdbcType=VARCHAR}
           , #{tnxType, jdbcType=VARCHAR}
           , #{createBy, jdbcType=VARCHAR}
        )
    }
	</insert>
	
</mapper>