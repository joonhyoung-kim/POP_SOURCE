<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.plan.order.salesOrderCompare">
	
	<!-- modify_hists 
    * XMOMA11 / 20191106 / gyp / TRIM, UPPER 처리, sql 정리
     -->
	<select id="get_salesOrderCompare_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.CUSTOMER_PO_ID
		     , A.ITEM_ID
		     , A.ITEM_NAME
		     , A.SALES_ITEM_ID
		     , A.NEW_DUE_DATE
		     , A.OLD_DUE_DATE
		     , A.NEW_QTY
		     , A.OLD_QTY
		     , A.ORDER_STATE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, #{companyCd, jdbcType=VARCHAR}, 'SALES_ORDER_STATE', A.ORDER_STATE) FROM DUAL) AS ORDER_STATE_NAME
		     , A.REMAIN_QTY
		     , A.SALES_COMPARE_STATE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, #{companyCd, jdbcType=VARCHAR}, 'SALES_COMPARE_STATE', A.SALES_COMPARE_STATE) FROM DUAL) AS SALES_COMPARE_STATE_NAME
		  FROM (
		        SELECT A.CUSTOMER_PO_ID
		             , A.ITEM_ID
		             , A.ITEM_NAME
		             , A.DIVISION_CD
		             , A.SALES_ITEM_ID
		             , A.NEW_DUE_DATE
		             , A.OLD_DUE_DATE
		             , A.NEW_QTY
		             , A.OLD_QTY
		             , A.ORDER_STATE
		             , A.REMAIN_QTY
		             , CASE WHEN A.NEW_DUE_DATE IS NULL THEN 'CANCEL'
		                    WHEN A.OLD_DUE_DATE IS NULL THEN 'NEW'
		                    ELSE CASE WHEN A.NEW_QTY <![CDATA[<>]]> A.OLD_QTY THEN 'EDITED'
		                              WHEN A.NEW_DUE_DATE <![CDATA[<>]]> A.OLD_DUE_DATE THEN 'EDITED'
		                              ELSE 'NO_CHANGE'
		                          END  
		                END AS SALES_COMPARE_STATE
		          FROM (
		                SELECT Z.CUSTOMER_PO_ID
		                     , Z.ITEM_ID
		                     , Z.DIVISION_CD
		                     , MAX(Z.ITEM_NAME) AS ITEM_NAME
		                     , MAX(Z.SALES_ITEM_ID) AS SALES_ITEM_ID
		                     , MAX(Z.NEW_DUE_DATE) AS NEW_DUE_DATE
		                     , MAX(Z.OLD_DUE_DATE) AS OLD_DUE_DATE
		                     , MAX(Z.NEW_QTY) AS NEW_QTY
		                     , MAX(Z.OLD_QTY) AS OLD_QTY
		                     , MAX(Z.ORDER_STATE) AS ORDER_STATE
		                     , MAX(Z.REMAIN_QTY) AS REMAIN_QTY
		                  FROM (
		                        SELECT T.PLANT AS DIVISION_CD
		                             , T.WORK_ORDER_ID AS CUSTOMER_PO_ID
		                             , T.PART_NO AS ITEM_ID
		                             , '' AS ITEM_NAME
		                             , T.MODEL_SUFFIX AS SALES_ITEM_ID
		                             , TO_CHAR(T.DUE_DATE, 'yyyy-mm-dd') AS NEW_DUE_DATE
		                             , '' AS OLD_DUE_DATE
		                             , T.QTY AS NEW_QTY
		                             , NULL AS OLD_QTY
		                             , '' AS ORDER_STATE
		                             , NULL AS REMAIN_QTY
		                             , T.PLAN_DATE
		                          FROM TH_TAR_DEMAND T
		                         WHERE T.PLANT = #{divisionCd, jdbcType=VARCHAR}
		                           AND T.PLAN_DATE = #{planId, jdbcType=VARCHAR}
		                           AND T.DEMAND_TYPE IN ('PO','IP')
		                        UNION 
		                        SELECT S.DIVISION_CD
		                             , S.CUSTOMER_PO_ID
		                             , S.ITEM_ID
		                             , S.ITEM_NAME
		                             , S.SALES_ITEM_ID
		                             , '' AS NEW_DUE_DATE
		                             , TO_CHAR(S.DUE_DATE, 'yyyy-mm-dd') AS OLD_DUE_DATE
		                             , NULL AS NEW_QTY
		                             , S.ORDER_QTY AS OLD_QTY
		                             , S.ORDER_STATE
		                             , S.REMAIN_QTY
		                             , '' AS PLAN_DATE
		                        FROM MOM_SALES_ORDER_V S
		                        WHERE S.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		                          AND S.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		                          AND S.REMAIN_QTY > 0
		                        ) Z
		                 GROUP BY Z.CUSTOMER_PO_ID , Z.ITEM_ID, Z.DIVISION_CD
		               ) A
		          WHERE 1=1
	               <if test="modelSuffix != null and modelSuffix != ''">
			        AND UPPER(A.SALES_ITEM_ID) LIKE '%' || TRIM(UPPER(#{modelSuffix, jdbcType=VARCHAR})) || '%'
			       </if>
		           <if test="customerPo != null and customerPo != ''">
		            AND UPPER(A.CUSTOMER_PO_ID) LIKE '%' || TRIM(UPPER(#{customerPo, jdbcType=VARCHAR})) || '%'
		           </if>
		           <if test="itemName != null and itemName != ''">
		            AND (A.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
		                  OR UPPER(A.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')
		           </if>
		       ) A
		   WHERE 1=1
		    <if test="compareType != null and compareType != ''">
		     AND A.SALES_COMPARE_STATE = #{compareType, jdbcType=VARCHAR}
		    </if>
		ORDER BY A.OLD_DUE_DATE, A.CUSTOMER_PO_ID , A.ITEM_ID
	</select>
	
	<select id="get_planDate_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT DISTINCT(PLAN_DATE) CODE
			 	      , PLAN_DATE || '_P' NAME
          FROM TH_TAR_DEMAND
         WHERE PLANT = #{divisionCd, jdbcType=VARCHAR}
         AND NOT PLAN_DATE LIKE '%_BAK'
         ORDER BY PLAN_DATE DESC
	</select>

</mapper>