<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.workOrder.sampleRequestStatus">
	<select id="get_sampleRequestStatus_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MR.WORK_ORDER_ID
			 , MR.MATERIAL_REQUEST_ID
			 , MR.REQUEST_STATE
			 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MR.DIVISION_CD, MR.COMPANY_CD, 'MATERIAL_REQUEST_STATE', MR.REQUEST_STATE) FROM DUAL) AS REQUEST_STATE_NAME
			 , MID.ITEM_TYPE
			 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MID.DIVISION_CD, MID.COMPANY_CD, 'ITEM_TYPE', MID.ITEM_TYPE) FROM DUAL) AS ITEM_TYPE_NAME
			 , MR.ITEM_ID
			 , MID.ITEM_NAME
			 , MID.SPECIFICATION
			 , MID.UNIT
			 , MR.IN_LOCATION_CD
			 , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MR.DIVISION_CD, MR.COMPANY_CD, MR.IN_LOCATION_CD) FROM DUAL) AS IN_LOCATION_NAME
			 , MR.OUT_LOCATION_CD
			 , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MR.DIVISION_CD, MR.COMPANY_CD, MR.OUT_LOCATION_CD) FROM DUAL) AS OUT_LOCATION_NAME
			 , TO_CHAR(MR.REQUEST_DATE, 'YYYY-MM-DD') AS REQUEST_DATE
			 , MR.REQUEST_QTY
			 , MR.ISSUE_QTY
			 , MR.CANCEL_QTY
			 , (MR.REQUEST_QTY - NVL(MR.ISSUE_QTY, 0) - MR.CANCEL_QTY) AS REMAIN_QTY
			 , MR.REASON_CODE
			 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MR.DIVISION_CD, MR.COMPANY_CD, 'MAR_REQ_REASON', MR.REASON_CODE) FROM DUAL) AS REASON_NAME
		  FROM MOM_MATERIAL_REQUEST MR
			 , MOM_ITEM_DEFINITION MID 
	     WHERE MR.DIVISION_CD= MID.DIVISION_CD
		   AND MR.COMPANY_CD = MID.COMPANY_CD
		   AND MR.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND MR.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND MR.ITEM_ID = MID.ITEM_ID
		   AND MR.REQUEST_TYPE ='O'
		   AND MR.REQUEST_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'YYYY-MM-DD') 
								   AND (TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')+ 23.9997 / 24)
		 <if test="fromLocation != null and fromLocation !=''">
		   AND MR.IN_LOCATION_CD = #{fromLocation, jdbcType=VARCHAR}    
		 </if>
		 <if test="toLocation != null and toLocation !=''">
		   AND MR.OUT_LOCATION_CD = #{toLocation, jdbcType=VARCHAR}
		 </if>
		 <if test="requestNumber != null and requestNumber !=''">
		   AND MR.WORK_ORDER_ID LIKE '%' || TRIM(UPPER(#{requestNumber, jdbcType=VARCHAR})) || '%'
		 </if>
		 <if test="itemName != null and itemName !=''">
		   AND (MR.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%' 
		      OR UPPER(MID.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')
		 </if>
		 <if test="specification != null and specification !=''">
		   AND UPPER(MID.SPECIFICATION) LIKE '%' || TRIM(UPPER(#{specification, jdbcType=VARCHAR})) || '%'
		 </if>
		 <if test="itemType != null and itemType !=''">
		   AND MID.ITEM_TYPE = #{itemType, jdbcType=VARCHAR}
		 </if>
		 <if test="cancelFlag != null and cancelFlag !=''">
		 	<choose>
		 		<when test='cancelFlag == "Y"'>
		 		AND MR.CANCEL_QTY > 0
		 		</when>
		 		<otherwise>
		 		AND NVL(MR.CANCEL_QTY, 0) = 0
		 		</otherwise>
		 	</choose>
		 </if>
		ORDER BY MR.WORK_ORDER_ID, MR.MATERIAL_REQUEST_ID
	</select>
	
	<insert id="create_sampleRequestStatus" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  	
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
			UPDATE MOM_MATERIAL_REQUEST
		    SET    OUT_LOCATION_CD = #{outLocationCd, jdbcType=VARCHAR}
		    	  , REQUEST_DATE = TO_DATE(#{requestDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		    	  , REQUEST_QTY  = #{requestQty, jdbcType=NUMERIC}
		    	  , REASON_CODE = #{reasonCode, jdbcType=VARCHAR}
		    WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		    AND   COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		    AND   MATERIAL_REQUEST_ID = #{materialRequestId, jdbcType=VARCHAR}
						 ;
			INSERT INTO MOM_MATERIAL_REQUEST_HIST
						(LAST_EVENT_SEQ
					   , DIVISION_CD
					   , COMPANY_CD
					   , MATERIAL_REQUEST_ID
					   , WORK_ORDER_ID
					   , ITEM_ID
					   , REQUEST_DATE
					   , REQUEST_QTY
					   , ISSUE_QTY
					   , CANCEL_QTY
					   , REQUEST_STATE
					   , IN_LOCATION_CD
					   , OUT_LOCATION_CD
					   , REQUEST_TYPE
					   , ISSUE_DATE
					   , UNIT_QTY
					   , ORIGIN_REQUEST_QTY
					   , REQUEST_GROUP_ID
					   , USE_YN
					   , DESCRIPTION
					   , REASON_CODE
					   , CREATE_DATE
					   , CREATE_BY
					   , UPDATE_DATE
					   , UPDATE_BY
					   , TID
					   , DEDUCT_FLAG
					   , REQUEST_CREATE_TYPE
					   , MARKET_CD
					   , CURRENCY_CD
					   , SALES_FREE_FLAG
						) 
				SELECT   S_ORDER_SEQ.NEXTVAL
					   , DIVISION_CD
					   , COMPANY_CD
					   , MATERIAL_REQUEST_ID
					   , WORK_ORDER_ID
					   , ITEM_ID
					   , REQUEST_DATE
					   , REQUEST_QTY
					   , ISSUE_QTY
					   , CANCEL_QTY
					   , REQUEST_STATE
					   , IN_LOCATION_CD
					   , OUT_LOCATION_CD
					   , REQUEST_TYPE
					   , ISSUE_DATE
					   , UNIT_QTY
					   , ORIGIN_REQUEST_QTY
					   , REQUEST_GROUP_ID
					   , USE_YN
					   , DESCRIPTION
					   , REASON_CODE
					   , CREATE_DATE
					   , CREATE_BY
					   , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
					   , #{userId, jdbcType=VARCHAR}
					   , TID
					   , DEDUCT_FLAG
					   , REQUEST_CREATE_TYPE
					   , MARKET_CD
					   , CURRENCY_CD
					   , SALES_FREE_FLAG
				FROM	MOM_MATERIAL_REQUEST
				WHERE   DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			    AND 	COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
			    AND     MATERIAL_REQUEST_ID = #{materialRequestId, jdbcType=VARCHAR}
		        ;
			        
			SELECT
				CASE 
					WHEN COUNT(MATERIAL_REQUEST_ID) != 0 THEN 'S'
					ELSE 'E' 
				END  
				INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
			FROM MOM_MATERIAL_REQUEST
			WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
			AND MATERIAL_REQUEST_ID = #{materialRequestId, jdbcType=VARCHAR}
			;
	END
	}
	</insert>
	
	<insert id="create_sampleRequestStatusClose" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  	
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  	
			 UPDATE MOM_MATERIAL_REQUEST
			 SET    REQUEST_STATE = 'R'
			 <if test="calcCancelQty != null and calcCancelQty != ''">
			 	 , CANCEL_QTY  = #{calcCancelQty, jdbcType=NUMERIC} 
			 </if>
			 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			 AND   COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
			 AND   MATERIAL_REQUEST_ID = #{materialRequestId, jdbcType=VARCHAR}
						 ;
			INSERT INTO MOM_MATERIAL_REQUEST_HIST
						(LAST_EVENT_SEQ
					   , DIVISION_CD
					   , COMPANY_CD
					   , MATERIAL_REQUEST_ID
					   , WORK_ORDER_ID
					   , ITEM_ID
					   , REQUEST_DATE
					   , REQUEST_QTY
					   , ISSUE_QTY
					   , CANCEL_QTY
					   , REQUEST_STATE
					   , IN_LOCATION_CD
					   , OUT_LOCATION_CD
					   , REQUEST_TYPE
					   , ISSUE_DATE
					   , UNIT_QTY
					   , ORIGIN_REQUEST_QTY
					   , REQUEST_GROUP_ID
					   , USE_YN
					   , DESCRIPTION
					   , REASON_CODE
					   , CREATE_DATE
					   , CREATE_BY
					   , UPDATE_DATE
					   , UPDATE_BY
					   , TID
					   , DEDUCT_FLAG
					   , REQUEST_CREATE_TYPE
					   , MARKET_CD
					   , CURRENCY_CD
					   , SALES_FREE_FLAG
						) 
				SELECT   S_ORDER_SEQ.NEXTVAL
					   , DIVISION_CD
					   , COMPANY_CD
					   , MATERIAL_REQUEST_ID
					   , WORK_ORDER_ID
					   , ITEM_ID
					   , REQUEST_DATE
					   , REQUEST_QTY
					   , ISSUE_QTY
					   , CANCEL_QTY
					   , REQUEST_STATE
					   , IN_LOCATION_CD
					   , OUT_LOCATION_CD
					   , REQUEST_TYPE
					   , ISSUE_DATE
					   , UNIT_QTY
					   , ORIGIN_REQUEST_QTY
					   , REQUEST_GROUP_ID
					   , USE_YN
					   , DESCRIPTION
					   , REASON_CODE
					   , CREATE_DATE
                       , CREATE_BY
					   , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
					   , #{userId, jdbcType=VARCHAR}
					   , TID
					   , DEDUCT_FLAG
					   , REQUEST_CREATE_TYPE
					   , MARKET_CD
					   , CURRENCY_CD
					   , SALES_FREE_FLAG
				FROM	MOM_MATERIAL_REQUEST
				WHERE   DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			    AND 	COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
			    AND     MATERIAL_REQUEST_ID = #{materialRequestId, jdbcType=VARCHAR}
		        ;
			        
			SELECT
				CASE 
					WHEN COUNT(MATERIAL_REQUEST_ID) != 0 THEN 'S'
					ELSE 'E' 
				END  
				INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
			FROM MOM_MATERIAL_REQUEST
			WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
			AND MATERIAL_REQUEST_ID = #{materialRequestId, jdbcType=VARCHAR}
			;
	END
	}
	</insert>
	
</mapper>