<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.close.materialMonthlyClosing">
	<select id="get_materialMonthlyClosing_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT Z.*
	     , TRUNC(Z.END_AMOUNT * Z.VAT_VALUE) AS END_VAT
	     , Z.END_AMOUNT + TRUNC(Z.END_AMOUNT * Z.VAT_VALUE) AS END_TOTAL_AMOUNT
	FROM (SELECT A.END_SEQ             
	           , TO_CHAR(A.END_DATE, 'yyyy-mm-dd') AS END_DATE            
	           , A.END_TYPE
	           , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'RESULT_END_FLAG', A.END_TYPE) FROM DUAL) AS END_TYPE_NAME            
	           , A.END_FLAG            
	           , A.VENDOR_CD
	           , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(A.DIVISION_CD, A.COMPANY_CD, A.VENDOR_CD) FROM DUAL) AS VENDOR_NAME
	           , A.END_GROUP           
	           , A.TAX_FLAG
	           , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'MATERIAL_TAX', A.TAX_FLAG) FROM DUAL) AS TAX_FLAG_NAME            
	           , A.CURRENCY_CD
	           , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'CURRENCY_CODE', A.CURRENCY_CD) FROM DUAL) AS CURRENCY_NAME   
	           , TRUNC(NVL(A.INOUT_AMOUNT, 0), 4)  AS INOUT_AMOUNT
	           , TRUNC(NVL(A.RETURN_AMOUNT, 0), 4) AS RETURN_AMOUNT
	           , TRUNC(NVL(A.ETC_AMOUNT, 0), 4) AS  ETC_AMOUNT         
	           , TRUNC(NVL(A.INOUT_AMOUNT, 0), 4) - TRUNC(NVL(A.RETURN_AMOUNT, 0), 4) + TRUNC(NVL(A.ETC_AMOUNT, 0), 4) AS END_AMOUNT          
	           , A.DESCRIPTION
	           , (SELECT  NVL(SUM(NVL(MIS.UNIT_PRICE, 0) * MIS.QTY) - SUM(MIS.UNIT_PRICE * MIL.QTY), 0)
	              FROM    MOM_ITEM_STOCK_INOUT MIS 
	                   , (SELECT ITEM_STOCK_INOUT_ID
                               , SUM (QTY) AS QTY
                          FROM   MOM_ITEM_LAST
                          WHERE  DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
                          AND    COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
                          GROUP BY ITEM_STOCK_INOUT_ID) MIL
	              WHERE   MIS.DIVISION_CD = A.DIVISION_CD
	              AND     MIS.COMPANY_CD  = A.COMPANY_CD
	              AND     MIS.IO_TYPE = #{inoutFlag, jdbcType=VARCHAR}
	              AND     MIS.ITEM_STOCK_INOUT_ID = MIL.ITEM_STOCK_INOUT_ID(+)
	              AND     MIS.IO_CATEGORY IN (SELECT CODE_ID
	                                          FROM   MOM_CODE
	                                          WHERE  DIVISION_CD   = MIS.DIVISION_CD
	                                          AND    COMPANY_CD    = MIS.COMPANY_CD
	                                          AND    CODE_CLASS_ID = 'IO_CATEGORY'
	                                           <if test='inoutFlag == "I"'>
	                                          AND    ATTRIBUTE9 = 'Y' 
	                                           </if>
	                                          <if test='inoutFlag == "O"'>
	                                          AND    ATTRIBUTE10 = 'Y'
	                                          </if>
	                                          AND    USE_YN = 'Y') 
	              AND     TRUNC(MIS.IO_TIME)  <![CDATA[<=]]>  TRUNC(LAST_DAY(TO_DATE(#{inMonth, jdbcType=VARCHAR},'YYYY-MM')))   
<!-- 	              AND     NOT EXISTS (SELECT '*'  -->
<!-- 	                                  FROM MOM_ITEM_LAST  -->
<!-- 	                                  WHERE DIVISION_CD = MIS.DIVISION_CD  -->
<!-- 	                                  AND COMPANY_CD = MIS.COMPANY_CD  -->
<!-- 	                                  AND ITEM_STOCK_INOUT_ID = MIS.ITEM_STOCK_INOUT_ID)  -->
	              AND    MIS.VENDOR_CD = A.VENDOR_CD
	              AND    NOT EXISTS (SELECT '*'
	                                 FROM   MOM_ITEM_STOCK_INOUT MIC
	                                 WHERE  MIC.DIVISION_CD = MIS.DIVISION_CD
	                                 AND    MIC.COMPANY_CD  = MIS.COMPANY_CD
	                                 AND    MIC.PREV_STOCK_INOUT_ID = MIS.ITEM_STOCK_INOUT_ID
	                                 AND    MIC.IO_TYPE             = MIS.IO_TYPE))                      AS NO_END_AMOUNT
	           , A.INOUT_FLAG
	           , (SELECT MOM_COMMON_PKG.FN_GET_CODE_VALUES(A.DIVISION_CD, A.COMPANY_CD, 'MATERIAL_TAX', TAX_FLAG) FROM DUAL) VAT_VALUE
	        FROM MOM_ITEM_MONTH_END A
	       WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	         AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	         AND A.INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR}
	         AND TO_CHAR(A.END_DATE, 'yyyy-mm') = #{inMonth, jdbcType=VARCHAR}) Z
	WHERE 1=1
	<if test="vendorName != null and vendorName != ''"> 
       AND Z.VENDOR_CD = #{vendorName, jdbcType=VARCHAR} 
 	</if>
 	<if test="inType != null and inType != ''">
	   AND Z.END_TYPE = #{inType, jdbcType=VARCHAR}
	</if>
	ORDER BY Z.END_SEQ DESC 
	</select>
	
	<select id="get_materialMonthlyClosingDetail_list" resultType="camelMap" parameterType="java.util.HashMap">
        SELECT A.ITEM_STOCK_INOUT_ID
             , A.MAGAM_DETAIL_SEQ
             , A.MAGAM_SEQ
             , A.LOCATION_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(A.DIVISION_CD, A.COMPANY_CD, A.LOCATION_CD) FROM DUAL) LOCATION_NAME
             , TO_CHAR(A.IO_TIME, 'yyyy-mm-dd') AS IO_TIME
             , A.VENDOR_CD
             , A.ITEM_INPUT_ID
             , A.ITEM_ID
             , B.ITEM_NAME
             , B.SPECIFICATION
             , A.QTY
             , A.CONVERSION_UNIT_QTY
             , A.CURRENCY_CD
             , NVL(A.EXCHANGE_RATE, 1) AS EXCHANGE_RATE
             , DECODE(A.CURRENCY_CD, P.CURRENCY_CD, A.UNIT_PRICE, A.FOREIGN_UNIT_PRICE) AS UNIT_PRICE
             , trunc(A.INOUT_PRICE) as INOUT_PRICE
             , DECODE(A.CURRENCY_CD, P.CURRENCY_CD, trunc(A.INOUT_PRICE), trunc(A.FOREIGN_TOTAL_PRICE, 4)) AS FOREIGN_TOTAL_PRICE
             , CASE
		         WHEN E.TAX_FLAG = 'TAX_FREE'
		    		OR E.TAX_FLAG = 'TAX_ZERO' THEN 0
		         ELSE trunc(A.INOUT_VAT)
		       END AS INOUT_VAT
             , A.TOTAL_AMOUNT
             , A.DESCRIPTION
             , P.CURRENCY_CD AS DEFAULT_CURRENCY
             , A.IO_CATEGORY
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'IO_CATEGORY', A.IO_CATEGORY) FROM DUAL) AS IO_CATEGORY_NAME
          FROM MOM_ITEM_LAST A
             , MOM_ITEM_DEFINITION B
             , MOM_PARAMETER P
             , MOM_ITEM_MONTH_END E
         WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND A.DIVISION_CD = B.DIVISION_CD(+)
           AND A.COMPANY_CD = B.COMPANY_CD(+)
           AND A.ITEM_ID = B.ITEM_ID(+)
           AND A.DIVISION_CD = P.DIVISION_CD
           AND A.COMPANY_CD = P.COMPANY_CD
           AND A.MAGAM_SEQ = #{endSeq, jdbcType=VARCHAR}
           AND A.VENDOR_CD = #{vendorCd, jdbcType=VARCHAR}
           AND A.IO_TYPE = #{inoutFlag, jdbcType=VARCHAR}
           AND E.INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR}
           AND A.IO_CATEGORY IN (SELECT CODE_ID
                                   FROM MOM_CODE
                                  WHERE CODE_CLASS_ID = 'IO_CATEGORY'
                                    AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
                                    AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
                                <if test='inoutFlag == "I"'>
                                    AND ATTRIBUTE9 = 'Y'
                                </if>
                                <if test='inoutFlag == "O"'>
                                    AND ATTRIBUTE10 = 'Y'
                                </if>
                                    AND USE_YN = 'Y')
           AND A.DIVISION_CD = E.DIVISION_CD
           AND A.COMPANY_CD = E.COMPANY_CD
           AND A.MAGAM_SEQ = E.END_SEQ
         ORDER BY A.IO_TIME, A.ITEM_STOCK_INOUT_ID
	</select>
	
	<select id="get_materialMonthlyClosingDetailNoEnd_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT Z.VENDOR_CD
	     , Z.VENDOR_NAME
	     , Z.LOCATION_CD
	     , Z.LOCATION_NAME
	     , Z.IO_TIME
	     , Z.IO_CATEGORY
	     , Z.IO_CATEGORY_NAME
	     , Z.ITEM_INPUT_ID
	     , Z.ITEM_ID
	     , Z.ITEM_NAME
	     , Z.SPECIFICATION
	     , Z.QTY
	     , Z.CURRENCY_CD
	     , Z.CONVERSION_UNIT_QTY
	     , Z.DESCRIPTION
	     , Z.EXCHANGE_RATE
	     , Z.UNIT_PRICE
	     , Z.UNIT_PRICE * Z.QTY AS INOUT_PRICE
         , DECODE (Z.CURRENCY_CD, Z.DEFAULT_CURRENCY, (Z.UNIT_PRICE * Z.QTY), (Z.FOREIGN_UNIT_PRICE * Z.QTY)) AS FOREIGN_TOTAL_PRICE
         , ROUND ((Z.UNIT_PRICE * Z.QTY) * 0.1, 0) AS INOUT_VAT
         , (Z.UNIT_PRICE * Z.QTY) + ROUND ((Z.UNIT_PRICE * Z.QTY) * 0.1, 0) AS TOTAL_AMOUNT
	     , Z.DEFAULT_CURRENCY
	     , Z.ITEM_STOCK_INOUT_ID
	  FROM (SELECT MIS.VENDOR_CD
	             , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(MIS.DIVISION_CD, MIS.COMPANY_CD, MIS.VENDOR_CD) FROM DUAL) AS VENDOR_NAME
	             , MIS.LOCATION_CD
	             , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MIS.DIVISION_CD, MIS.COMPANY_CD, MIS.LOCATION_CD) FROM DUAL) LOCATION_NAME
	             , TO_CHAR(MIS.IO_TIME, 'yyyy-mm-dd') AS IO_TIME
	             , MIS.IO_CATEGORY
	             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MIS.DIVISION_CD, MIS.COMPANY_CD, 'IO_CATEGORY', MIS.IO_CATEGORY) FROM DUAL) AS IO_CATEGORY_NAME
	             , MIS.ITEM_INPUT_ID
	             , MIS.ITEM_ID
	             , D.ITEM_NAME
	             , D.SPECIFICATION
	             , (MIS.QTY - NVL(MIL.QTY, 0)) AS QTY
	             , MIS.CURRENCY_CD
	             , (NVL(MIS.CONVERSION_UNIT_QTY, 0) - NVL(MIL.CONVERSION_UNIT_QTY, 0)) AS CONVERSION_UNIT_QTY
	             , MIS.DESCRIPTION
	             , NVL(MIS.EXCHANGE_RATE, 1) AS EXCHANGE_RATE
	             , MIS.UNIT_PRICE
                 , MIS.FOREIGN_UNIT_PRICE
	             , MP.CURRENCY_CD AS DEFAULT_CURRENCY
	             , MIS.ITEM_STOCK_INOUT_ID
	          FROM MOM_ITEM_STOCK_INOUT MIS
	             , (SELECT DIVISION_CD
	                     , COMPANY_CD
	                     , ITEM_STOCK_INOUT_ID
	                     , SUM (QTY) AS QTY
	                     , SUM (NVL(CONVERSION_UNIT_QTY,0)) AS CONVERSION_UNIT_QTY
	                  FROM MOM_ITEM_LAST
	                 GROUP BY DIVISION_CD, COMPANY_CD, ITEM_STOCK_INOUT_ID
	               ) MIL
	             , MOM_ITEM_DEFINITION D
	             , MOM_PARAMETER MP
	         WHERE MIS.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	           AND MIS.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	           AND MIS.IO_TYPE = #{inoutFlag, jdbcType=VARCHAR}
	           AND MIS.IO_CATEGORY IN (SELECT CODE_ID
                                         FROM MOM_CODE
                                        WHERE CODE_CLASS_ID = 'IO_CATEGORY'
                                          AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
                                          AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
                                       <if test='inoutFlag == "I"'>
                                          AND ATTRIBUTE9 = 'Y'
                                       </if>
                                       <if test='inoutFlag == "O"'>
                                          AND ATTRIBUTE10 = 'Y'
                                       </if>
                                          AND USE_YN = 'Y') 
	           AND MIS.DIVISION_CD = MIL.DIVISION_CD(+)
	           AND MIS.COMPANY_CD = MIL.COMPANY_CD(+)
	           AND MIS.ITEM_STOCK_INOUT_ID = MIL.ITEM_STOCK_INOUT_ID(+)
	           AND MIS.DIVISION_CD = D.DIVISION_CD(+)
	           AND MIS.COMPANY_CD = D.COMPANY_CD(+)
	           AND MIS.ITEM_ID = D.ITEM_ID(+)
	           AND TRUNC(MIS.IO_TIME) <![CDATA[<=]]> TRUNC(LAST_DAY(TO_DATE(#{inMonth, jdbcType=VARCHAR},'yyyy-mm')))
	           AND MIS.VENDOR_CD = #{vendorCd, jdbcType=VARCHAR}
	           AND MIS.DIVISION_CD = MP.DIVISION_CD
	           AND MIS.COMPANY_CD = MP.COMPANY_CD
	           AND NOT EXISTS (SELECT '*' 
                                 FROM MOM_ITEM_STOCK_INOUT MIC
                                WHERE MIC.DIVISION_CD = MIS.DIVISION_CD
                                  AND MIC.COMPANY_CD = MIS.COMPANY_CD
                                  AND MIC.IO_TYPE = MIS.IO_TYPE
                                  AND MIC.PREV_STOCK_INOUT_ID = MIS.ITEM_STOCK_INOUT_ID )
	       ) Z
	 WHERE 1=1
	   AND Z.QTY != 0
	 ORDER BY Z.IO_TIME, Z.ITEM_STOCK_INOUT_ID	
	</select>
	<select id="get_materialMonthlyClosingDetailPop_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT Z.*
		  FROM (SELECT MIS.VENDOR_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(MIS.DIVISION_CD, MIS.COMPANY_CD, MIS.VENDOR_CD) FROM DUAL) AS VENDOR_NAME
		             , MIS.ITEM_STOCK_INOUT_ID
		             , MIS.PREV_STOCK_INOUT_ID
		             , TO_CHAR(MIS.IO_TIME, 'yyyy-mm-dd') AS IO_TIME
		             , MIS.IO_CATEGORY
		             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MIS.DIVISION_CD, MIS.COMPANY_CD, 'IO_CATEGORY', MIS.IO_CATEGORY) FROM DUAL) AS IO_CATEGORY_NAME
		             , MIS.ITEM_INPUT_ID
		             , MIS.ITEM_ID
		             , D.ITEM_NAME
		             , D.SPECIFICATION
		             , MIS.QTY
		             , NVL(MIL.QTY, 0) AS ENDED_QTY
		             , (MIS.QTY - NVL(MIL.QTY, 0)) AS REMAIN_QTY
		             , MIS.MARKET_CD
		             , MIS.CURRENCY_CD
		             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MIS.DIVISION_CD, MIS.COMPANY_CD, 'MARKET_CODE', MIS.MARKET_CD) FROM DUAL) AS MARKET_NAME
		             , (NVL(MIS.CONVERSION_UNIT_QTY,0) - NVL(MIL.CONVERSION_UNIT_QTY,0)) AS CONVERSION_UNIT_QTY
		             , MIS.DESCRIPTION
		             , D.CONVERSION_UNIT_QTY AS ITEM_CONVERSION_UNIT_QTY
		             , MIS.ITEM_DEPARTURE_ID
		          FROM MOM_ITEM_STOCK_INOUT MIS
		             , (SELECT DIVISION_CD
		                     , COMPANY_CD
		                     , ITEM_STOCK_INOUT_ID
		                     , SUM(QTY) AS QTY
		                     , SUM(CONVERSION_UNIT_QTY) AS CONVERSION_UNIT_QTY 
		                  FROM MOM_ITEM_LAST
		                 GROUP BY DIVISION_CD, COMPANY_CD, ITEM_STOCK_INOUT_ID
		               ) MIL
		             , MOM_ITEM_DEFINITION D
		         WHERE MIS.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND MIS.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		           AND MIS.IO_TYPE = #{inoutFlag, jdbcType=VARCHAR} 
				   AND MIS.IO_CATEGORY IN (SELECT CODE_ID
			                                 FROM MOM_CODE
			                                WHERE CODE_CLASS_ID = 'IO_CATEGORY'
			                                  AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			                                  AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
			                              <if test='inoutFlag == "I"'>
			                                  AND ATTRIBUTE9 = 'Y'
			                              </if>
			                              <if test='inoutFlag == "O"'>
			                                  AND ATTRIBUTE10 = 'Y'
			                              </if>
			                                  AND USE_YN = 'Y') 
		           AND MIS.DIVISION_CD = MIL.DIVISION_CD(+)
		           AND MIS.COMPANY_CD = MIL.COMPANY_CD(+)
		           AND MIS.ITEM_STOCK_INOUT_ID = MIL.ITEM_STOCK_INOUT_ID(+)
		           AND MIS.DIVISION_CD = D.DIVISION_CD(+)
		           AND MIS.COMPANY_CD = D.COMPANY_CD(+)
		           AND MIS.ITEM_ID = D.ITEM_ID(+)
                   AND MIS.VENDOR_CD = #{vendorCd, jdbcType=VARCHAR}
                   AND NOT EXISTS (SELECT '*'
	                               FROM   MOM_ITEM_STOCK_INOUT MIC
	                               WHERE  MIC.DIVISION_CD = MIS.DIVISION_CD
	                               AND    MIC.COMPANY_CD  = MIS.COMPANY_CD
	                               AND    MIC.PREV_STOCK_INOUT_ID = MIS.ITEM_STOCK_INOUT_ID
	                               AND    MIC.IO_TYPE             = MIS.IO_TYPE)
		          <if test="fromDate != null and fromDate != '' and toDate != null and toDate != ''">
		           AND MIS.IO_TIME BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') 
		                               AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') + 23.9997/24
		          </if>
		          <if test="itemId != null and itemId != ''">
		           AND (MIS.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%'
		                OR D.ITEM_NAME LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%')	<!-- XMOMH / ljw / 검색조건 품명 추가 -->
		          </if>
		          <if test="market != null and market != ''">
		           AND MIS.MARKET_CD = #{market, jdbcType=VARCHAR}
		          </if>
		          <if test="largeGroup != null and largeGroup != ''">
		           AND D.ITEM_GROUP_LARGE = #{largeGroup, jdbcType=VARCHAR}
		          </if>
		          <if test="mediumGroup != null and mediumGroup != ''">
		           AND D.ITEM_GROUP_MEDIUM = #{mediumGroup, jdbcType=VARCHAR}
		          </if>
		          <if test="dDescription != null and dDescription != ''">
		           AND MIS.DESCRIPTION LIKE ('%' || #{dDescription, jdbcType=VARCHAR} || '%')
		          </if>
		          <if test="b2biDepartureNo != null and b2biDepartureNo != ''">
		           AND UPPER(MIS.ITEM_DEPARTURE_ID) LIKE '%' || TRIM(UPPER(#{b2biDepartureNo, jdbcType=VARCHAR})) || '%'
		          </if>
		          <if test="currencyCd != null and currencyCd != ''">
		           AND MIS.CURRENCY_CD = #{currencyCd, jdbcType=VARCHAR}
		          </if>
		       ) Z
		 WHERE 1=1
		   AND Z.REMAIN_QTY != 0
		 ORDER BY Z.IO_TIME, Z.ITEM_STOCK_INOUT_ID
 	</select>
	
	<select id="get_materialMonthlyClosingEtc_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT B.END_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD, 'RESULT_END_FLAG', B.END_TYPE) FROM DUAL) END_TYPE_NAME
		     , TO_CHAR(A.IO_TIME, 'YYYY-MM-DD') AS IO_TIME
		     , A.ITEM_ID
		     , A.QTY
		     , A.INOUT_PRICE
		     , A.INOUT_VAT
		     , A.DESCRIPTION
		     , A.MAGAM_SEQ
		     , A.MAGAM_DETAIL_SEQ
		  FROM MOM_ITEM_LAST A
		     , MOM_ITEM_MONTH_END B
		 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND A.MAGAM_SEQ = #{endSeq, jdbcType=VARCHAR}
		   AND A.DIVISION_CD = B.DIVISION_CD
		   AND A.COMPANY_CD = B.COMPANY_CD
		   AND A.MAGAM_SEQ = B.END_SEQ
		   AND A.IO_TYPE = #{inoutFlag, jdbcType=VARCHAR}
		   AND B.INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR}
		   AND A.IO_CATEGORY = 'ETC001' 
		 ORDER BY A.MAGAM_DETAIL_SEQ
	</select>
	
	<insert id="create_materialMonthlyClosingEtc" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ 
		CALL
		DECLARE
		    v_magam_detail_seq varchar2(40) := s_order_seq.nextval;
		BEGIN
			#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
			
		INSERT INTO MOM_ITEM_LAST
	        ( MAGAM_DETAIL_SEQ     
	        , MAGAM_SEQ            
	        , DIVISION_CD          
	        , COMPANY_CD           
	        , ITEM_STOCK_INOUT_ID  
	        , ITEM_STOCK_ID        
	        , ITEM_ID              
	        , LOCATION_CD          
	        , IO_TYPE              
	        , IO_TIME              
	        , IO_CATEGORY          
	        , QTY                  
	        , UNIT_PRICE           
	        , INOUT_PRICE          
	        , VENDOR_CD            
	        , CURRENCY_CD          
	        , MARKET_CD            
	        , DESCRIPTION          
	        , CREATE_DATE          
	        , CREATE_BY            
	        , UPDATE_DATE          
	        , UPDATE_BY            
	        , CONVERSION_UNIT_QTY  
	        , INOUT_VAT            
	        , TOTAL_AMOUNT  
	        )
	VALUES
	        ( v_magam_detail_seq
	        , #{magamSeq, jdbcType=VARCHAR}
	        , #{divisionCd, jdbcType=VARCHAR}
	        , #{companyCd, jdbcType=VARCHAR}
	        , '-'
	        , '-'
	        , nvl(#{itemId, jdbcType=VARCHAR}, '-')
	        , '-'
	        , #{inoutFlag, jdbcType=VARCHAR}
	        , TO_DATE(#{ioTime, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	        , 'ETC001'
	        , nvl(#{qty, jdbcType=NUMERIC}, 0)
	        , #{inoutPrice, jdbcType=NUMERIC} / decode(nvl(#{qty, jdbcType=NUMERIC}, 0), 0, 1, #{qty, jdbcType=NUMERIC})
	        , #{inoutPrice, jdbcType=NUMERIC}
	        , #{vendorCd, jdbcType=VARCHAR}
	        , #{currencyCd, jdbcType=VARCHAR}
	        , '2'
	        , #{description, jdbcType=VARCHAR}
	        , mom_common_pkg.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR},#{companyCd, jdbcType=VARCHAR})
	        , #{createBy, jdbcType=VARCHAR}
	        , mom_common_pkg.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR},#{companyCd, jdbcType=VARCHAR})
	        , #{createBy, jdbcType=VARCHAR}        
	        , #{qty, jdbcType=NUMERIC}
	        , #{inoutVat, jdbcType=NUMERIC}
	        , #{inoutPrice, jdbcType=NUMERIC} + #{inoutVat, jdbcType=NUMERIC}
	        );
	UPDATE MOM_ITEM_MONTH_END
	   SET ETC_AMOUNT = (SELECT SUM(INOUT_PRICE) 
	                       FROM MOM_ITEM_LAST
	                      WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	                        AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	                        AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
	                        AND IO_CATEGORY = 'ETC001'
	                        AND IO_TYPE = #{inoutFlag, jdbcType=VARCHAR}
	                      GROUP BY MAGAM_SEQ)
	     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
	     , UPDATE_BY = #{updateBy, jdbcType=VARCHAR}
	 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	   AND END_SEQ = #{magamSeq, jdbcType=VARCHAR}
	   AND INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR};
	   
	   SELECT
				CASE 
					WHEN COUNT(MAGAM_DETAIL_SEQ) = 0 THEN 'E'
					ELSE 'S' 
				END  
		 INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		 FROM MOM_ITEM_LAST
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		  AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		  AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
          AND MAGAM_DETAIL_SEQ = v_magam_detail_seq;
	END
	}
	        
	
	</insert>
	
	<update id="modify_materialMonthlyClosingEtcs" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ 
		CALL
		DECLARE
		BEGIN
			#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
		UPDATE MOM_ITEM_LAST
		   SET ITEM_ID = NVL(#{itemId, jdbcType=VARCHAR}, '-')
		     , QTY = #{qty, jdbcType=NUMERIC}
		     , INOUT_PRICE = #{inoutPrice, jdbcType=NUMERIC}
		     , UNIT_PRICE = #{inoutPrice, jdbcType=NUMERIC} / DECODE(NVL(#{qty, jdbcType=NUMERIC}, 0), 0, 1, #{qty, jdbcType=NUMERIC})
		     , INOUT_VAT = #{inoutVat, jdbcType=NUMERIC}
		     , IO_TIME = TO_DATE(#{ioTime, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		     , DESCRIPTION = #{description, jdbcType=VARCHAR}
		     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR},#{companyCd, jdbcType=VARCHAR})
		     , UPDATE_BY = #{updateBy, jdbcType=VARCHAR}
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
	  	   AND MAGAM_DETAIL_SEQ = #{magamDetailSeq, jdbcType=VARCHAR} ;
	  	   
		UPDATE MOM_ITEM_MONTH_END
		   SET ETC_AMOUNT = (SELECT SUM(INOUT_PRICE) 
		                       FROM MOM_ITEM_LAST
		                      WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		                        AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		                        AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
		                        AND IO_CATEGORY = 'ETC001'
		                        AND IO_TYPE = #{inoutFlag, jdbcType=VARCHAR}
		                      GROUP BY MAGAM_SEQ)
		     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR},#{companyCd, jdbcType=VARCHAR})
		     , UPDATE_BY = #{updateBy, jdbcType=VARCHAR}
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND END_SEQ = #{magamSeq, jdbcType=VARCHAR}
		   AND INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR};
		
		SELECT
				CASE 
					WHEN COUNT(MAGAM_DETAIL_SEQ) = 0 THEN 'E'
					ELSE 'S' 
				END  
		  INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		  FROM MOM_ITEM_LAST
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	       AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
           AND MAGAM_DETAIL_SEQ = #{magamDetailSeq, jdbcType=VARCHAR};
	END
	}
	</update>
	
	<delete id="remove_materialMonthlyClosingEtc" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ 
		CALL
		DECLARE
		BEGIN
			#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
		
		DELETE FROM MOM_ITEM_LAST
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
		   AND MAGAM_DETAIL_SEQ = #{magamDetailSeq, jdbcType=VARCHAR} ;
		   
		UPDATE MOM_ITEM_MONTH_END
		   SET ETC_AMOUNT = (SELECT SUM(INOUT_PRICE) 
		                       FROM MOM_ITEM_LAST
		                      WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		                        AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		                        AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
		                        AND IO_CATEGORY = 'ETC001'
		                        AND IO_TYPE = #{inoutFlag, jdbcType=VARCHAR}
		                      GROUP BY MAGAM_SEQ)
		     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR},#{companyCd, jdbcType=VARCHAR})
		     , UPDATE_BY = #{updateBy, jdbcType=VARCHAR}
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND END_SEQ = #{magamSeq, jdbcType=VARCHAR}
		   AND INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR};
		 
		 SELECT
				CASE 
					WHEN COUNT(MAGAM_DETAIL_SEQ) = 0 THEN 'S'
					ELSE 'E' 
				END  
		   INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		   FROM MOM_ITEM_LAST
		  WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		    AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		    AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
            AND MAGAM_DETAIL_SEQ = #{magamDetailSeq, jdbcType=VARCHAR};
	END
	}
	</delete>
	
	<insert id="create_materialMonthlyClosing" statementType="CALLABLE" parameterType="java.util.HashMap">
		INSERT INTO MOM_ITEM_MONTH_END (
			DIVISION_CD,		
			COMPANY_CD,		
			END_SEQ,		
			END_DATE,		
			INOUT_FLAG,		
			END_TYPE,		
			END_FLAG,		
			VENDOR_CD,		
			END_GROUP,		
			TAX_FLAG,	
			CURRENCY_CD,		
			INOUT_AMOUNT,	
			RETURN_AMOUNT,	
			ETC_AMOUNT,		
			END_AMOUNT,		
			END_VAT,			
			END_TOTAL_AMOUNT,
			DESCRIPTION,		
			CREATE_DATE,		
			CREATE_BY,		
			UPDATE_DATE,		
			UPDATE_BY,		
			TID				
		)
		VALUES (
			#{divisionCd, jdbcType=VARCHAR},
			#{companyCd, jdbcType=VARCHAR},
			MOM_COMMON_PKG.FN_GET_END_SEQ(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}, #{endMonth, jdbcType=VARCHAR}, #{inoutFlag, jdbcType=VARCHAR}),
			TO_DATE(#{endDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
			#{inoutFlag, jdbcType=VARCHAR},
			#{endType, jdbcType=VARCHAR},
			'N',
			#{vendorCd, jdbcType=VARCHAR},
			#{endGroup, jdbcType=VARCHAR},
			#{taxFlag, jdbcType=VARCHAR},
			#{currencyCd, jdbcType=VARCHAR},
			'',
			'',
			'',
			'',
			'',
			'',
			#{description, jdbcType=VARCHAR},
			MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			#{userId, jdbcType=VARCHAR},
			MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
			#{userId, jdbcType=VARCHAR},
			''
		)

	</insert>
	
	<update id="modify_materialMonthlyClosingConfirm" statementType="CALLABLE" parameterType="java.util.HashMap">
		UPDATE MOM_ITEM_MONTH_END
		   SET END_FLAG = #{endFlag, jdbcType=VARCHAR}
			 , END_AMOUNT = #{endAmount, jdbcType=NUMERIC}
		     , END_VAT = #{endVat, jdbcType=NUMERIC}
		     , END_TOTAL_AMOUNT = #{endTotalAmount, jdbcType=NUMERIC}
		     , UPDATE_BY = #{userId, jdbcType=VARCHAR}
		     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR},#{companyCd, jdbcType=VARCHAR})
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND END_SEQ = #{endSeq, jdbcType=VARCHAR}
		   AND INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR}
	</update>
	
	<update id="modify_materialMonthlyClosings" statementType="CALLABLE" parameterType="java.util.HashMap">
		UPDATE MOM_ITEM_MONTH_END
		SET    DESCRIPTION = #{description, jdbcType=VARCHAR}
		WHERE  DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND    END_SEQ = #{endSeq, jdbcType=VARCHAR}
        AND    INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR}
	</update>
	
	<delete id="remove_materialMonthlyClosing" statementType="CALLABLE" parameterType="java.util.HashMap">
		DELETE FROM MOM_ITEM_MONTH_END
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
		AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		AND END_SEQ = #{endSeq, jdbcType=VARCHAR}
        AND INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR}
		
	</delete>
	
	<delete id="remove_materialMonthlyClosingDetailPop" statementType="CALLABLE" parameterType="java.util.HashMap">
		DELETE FROM MOM_ITEM_LAST_TMP
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR}
	</delete>
	
	<insert id="create_materialMonthlyClosingDetailPopTemp" statementType="CALLABLE" parameterType="java.util.HashMap">
		INSERT INTO MOM_ITEM_LAST_TMP (
            MAGAM_SEQ,            
            DIVISION_CD,            
            COMPANY_CD,            
            INOUT_FLAG,
            ITEM_STOCK_INOUT_ID,    
            QTY,
            CLOSE_TYPE,
            CREATE_DATE,            
            CREATE_BY, 
            CONVERSION_UNIT_QTY                
        )
        VALUES (
            #{endSeq, jdbcType=VARCHAR},
            #{divisionCd, jdbcType=VARCHAR},
            #{companyCd, jdbcType=VARCHAR},
            #{inoutFlag, jdbcType=VARCHAR},
            #{itemStockInoutId, jdbcType=VARCHAR},
            #{qty, jdbcType=NUMERIC},
            #{closeType, jdbcType=VARCHAR},
            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}),
            #{userId, jdbcType=VARCHAR},
            #{conversionUnitQty, jdbcType=NUMERIC}
        )
	</insert>
	
	<update id="modify_materialMonthlyClosingDetailSave" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ 
        CALL
        DECLARE
        BEGIN
            #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
		
		UPDATE MOM_ITEM_LAST
		   SET EXCHANGE_RATE = #{exchangeRate, jdbcType=NUMERIC}
		     , UNIT_PRICE = #{unitPrice, jdbcType=NUMERIC}
		     , FOREIGN_UNIT_PRICE = #{foreignUnitPrice, jdbcType=NUMERIC}
		     , FOREIGN_TOTAL_PRICE = #{foreignTotalPrice, jdbcType=NUMERIC}
		     , INOUT_PRICE = #{inoutPrice, jdbcType=NUMERIC}
		     , INOUT_VAT = #{vatPrice, jdbcType=NUMERIC}
		     , TOTAL_AMOUNT = #{totalAmount, jdbcType=NUMERIC}
		     , DESCRIPTION = #{description, jdbcType=VARCHAR}
		     , UPDATE_BY = #{userId, jdbcType=VARCHAR}
		     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
		   AND MAGAM_DETAIL_SEQ = #{magamDetailSeq, jdbcType=VARCHAR}
		 ;
		 
		 UPDATE MOM_ITEM_MONTH_END
        <if test="category == 'INOUT'">
           SET INOUT_AMOUNT = (SELECT SUM(INOUT_PRICE) 
                                 FROM MOM_ITEM_LAST
                                WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
                                  AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
                                  AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
                                  AND IO_TYPE = #{inoutFlag, jdbcType=VARCHAR}
                                  AND IO_CATEGORY IN ( SELECT CODE_ID
			                                             FROM MOM_CODE
			                                            WHERE CODE_CLASS_ID = 'IO_CATEGORY'
			                                              AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			                                              AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
			                                          <if test='inoutFlag == "I" '>
			                                              AND ATTRIBUTE9 = 'Y'
			                                          </if>
			                                          <if test='inoutFlag == "O" '>
			                                              AND ATTRIBUTE10 = 'Y'
			                                          </if>
			                                              AND USE_YN = 'Y')
                              GROUP BY MAGAM_SEQ)
        </if> 
             , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR},#{companyCd, jdbcType=VARCHAR})
             , UPDATE_BY = #{updateBy, jdbcType=VARCHAR}
         WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND END_SEQ = #{magamSeq, jdbcType=VARCHAR}
           AND INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR};
	     
	     SELECT
	            CASE 
	                WHEN COUNT(MAGAM_DETAIL_SEQ) = 0 THEN 'E'
	                ELSE 'S' 
	            END  
	       INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
	       FROM MOM_ITEM_LAST
	      WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	        AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	        AND MAGAM_SEQ = #{magamSeq, jdbcType=VARCHAR}
            AND MAGAM_DETAIL_SEQ = #{magamDetailSeq, jdbcType=VARCHAR};
    END
    }
	</update>
	
	<delete id="remove_materialMonthlyClosingDetail" statementType="CALLABLE" parameterType="java.util.HashMap">
   		DELETE 
   		  FROM MOM_ITEM_LAST_TMP
   		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
   		   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
   		   AND INOUT_FLAG = #{inoutFlag, jdbcType=VARCHAR}
	</delete>
	
	<insert id="create_materialMonthlyClosingDetail" statementType="CALLABLE" parameterType="java.util.HashMap">
		INSERT INTO MOM_ITEM_LAST_TMP
			( DIVISION_CD
			, COMPANY_CD
			, MAGAM_SEQ
			, INOUT_FLAG
			, ITEM_STOCK_INOUT_ID
			, QTY
			, CLOSE_TYPE
			, CREATE_DATE
			, CREATE_BY
			, CONVERSION_UNIT_QTY
			, MAGAM_DETAIL_SEQ
			)
	VALUES( #{divisionCd, jdbcType=VARCHAR}
		  , #{companyCd, jdbcType=VARCHAR}
		  , #{magamSeq, jdbcType=VARCHAR}
		  , #{inoutFlag, jdbcType=VARCHAR}
		  , #{itemStockInoutId, jdbcType=VARCHAR}
		  , #{qty, jdbcType=INTEGER}
		  , #{closeType, jdbcType=VARCHAR}
		  , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR},#{companyCd, jdbcType=VARCHAR})
		  , #{userId, jdbcType=VARCHAR}
		  , #{conversionUnitQty, jdbcType=INTEGER}
		  , #{magamDetailSeq, jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="create_materialMonthlyClosingDetailCancel" statementType="CALLABLE">
	{
        CALL P_MONTHLY_CLOSE_C (
        	#{p_err_code, mode=OUT, jdbcType=VARCHAR}
           ,#{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           ,#{divisionCd, mode=IN, jdbcType=VARCHAR}
           ,#{companyCd, mode=IN, jdbcType=VARCHAR}
           ,#{inoutFlag, mode=IN, jdbcType=VARCHAR}
           ,#{closeType, mode=IN, jdbcType=VARCHAR}
           ,#{userId, mode=IN, jdbcType=VARCHAR}
        )
    }
	</insert>
	
	<insert id="create_materialMonthlyClosingDetailPop" statementType="CALLABLE">
	{
        CALL P_MONTHLY_CLOSE (
        	#{p_err_code, mode=OUT, jdbcType=VARCHAR}
           ,#{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           ,#{divisionCd, mode=IN, jdbcType=VARCHAR}
           ,#{companyCd, mode=IN, jdbcType=VARCHAR}
           ,#{inoutFlag, mode=IN, jdbcType=VARCHAR}
           ,#{closeType, mode=IN, jdbcType=VARCHAR}
           ,#{userId, mode=IN, jdbcType=VARCHAR}
        )
    }
    </insert>
	
	
	<select id="get_lastCloseMonth_list" resultType="camelMap" parameterType="java.util.HashMap">
        SELECT  NVL(MAX(YEAR_MONTH),'N') AS END_MONTH
          FROM  MOM_ITEM_LAST_END
         WHERE  DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND  COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
           AND  BUY_SALE_FLAG = #{buySaleFlag, jdbcType=VARCHAR}
           AND  END_FLAG = 'Y'
    </select>
	
	
</mapper>