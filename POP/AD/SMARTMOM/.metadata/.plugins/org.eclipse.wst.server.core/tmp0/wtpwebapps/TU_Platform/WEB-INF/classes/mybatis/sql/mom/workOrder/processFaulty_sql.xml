<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.workOrder.processFaulty">
	<select id="get_workOrder_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT *
		  FROM (
			SELECT MO.WORK_ORDER_ID 
			     , MO.ITEM_ID 
			     , (SELECT MOM_COMMON_PKG.FN_GET_ITEM_NAME (MO.DIVISION_CD 
			                                              , MO.COMPANY_CD 
			                                              , MO.ITEM_ID)
			          FROM DUAL) AS ITEM_NAME 
			     , MO.RESOURCE_CD
			     , (SELECT MOM_COMMON_PKG.FN_GET_RESOURCE_NAME (MO.DIVISION_CD 
			                                                  , MO.COMPANY_CD 
			                                                  , MO.RESOURCE_CD)
			        FROM DUAL) AS RESOURCE_NAME 
			     , MO.PRODUCT_ORDER_ID
			     , NVL (MO.WORK_ORDER_TYPE, 'SYSTEM') AS WORK_ORDER_TYPE
			     , MO.WO_STATE 
			     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MO.DIVISION_CD 
			                                              , MO.COMPANY_CD 
			                                              , 'WORK_ORDER_STATE' 
			                                              , MO.WO_STATE)
			          FROM DUAL) AS STATE_NAME
			     , NVL (MO.PLAN_QTY, '0') AS PLAN_QTY 
			     , NVL (MO.GOOD_QTY, '0') AS QTY
			     , NVL (MO.BAD_QTY, '0') AS BAD_QTY
			     , NVL (MO.CANCEL_QTY, '0') AS CANCEL_QTY
			     , NVL (MO.CONFIRM_QTY, '0') AS RESULT_QTY
			     , TO_CHAR (MO.PLAN_START_TIME, 'YYYY-MM-DD')  AS PLAN_START_TIME
			     , TO_CHAR (MO.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE 
			     , MO.PRIORITY
			  FROM MOM_WORK_ORDER MO
			 WHERE MO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			   AND MO.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
			   AND NOT EXISTS (SELECT '*'
			                     FROM MOM_CODE
			                    WHERE DIVISION_CD = MO.DIVISION_CD
			                      AND COMPANY_CD = MO.COMPANY_CD
			                      AND CODE_CLASS_ID = 'PRODUCT_ORDER_TYPE'
			                      AND ATTRIBUTE2 = 'Y'
			                      AND NVL(USE_YN, 'N') = 'Y'
			                      AND CODE_ID = MO.PRODUCT_ORDER_TYPE)
			  <if test="dateCombo != null and dateCombo != ''">
					<choose>
						<when test="dateCombo == 'SCHEDULE_START_TIME'">                    
			   AND MO.PLAN_START_TIME BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
			   						      AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997/24 
			  			</when>
			  			<when test="dateCombo == 'MODIFY_TIME'">
			   AND MO.UPDATE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
			   						  AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997/24			
			  			</when>
		  			</choose>
	  		  </if>
	  		  <choose>
				    <when test= "state != null and state != ''">
			   AND MO.WO_STATE IN (${state}) 
				    </when>
				    <otherwise>
			   AND MO.WO_STATE IN (SELECT CODE_ID
			                         FROM MOM_CODE
			                        WHERE CODE_CLASS_ID = 'WORK_ORDER_STATE'
			                          AND ATTRIBUTE3 = 'Y'
			                          AND USE_YN = 'Y'
			                          AND DIVISION_CD = MO.DIVISION_CD
			                          AND COMPANY_CD = MO.COMPANY_CD)
	                </otherwise>
	           </choose>
	           <if test= "resourceCd != null and resourceCd != ''">
			   AND MO.RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR} 
			   </if>
			   <if test= "workOrderId != null and workOrderId != ''">
			   AND MO.WORK_ORDER_ID LIKE '%' || TRIM(UPPER(#{workOrderId, jdbcType=VARCHAR})) || '%'
			   </if>
			   AND MO.ORDER_FLAG = 'IN' ) A
			 WHERE 1 = 1
			   <if test= "itemId != null and itemId != ''">
			   AND (A.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%'
						         OR UPPER(A.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%')
			   </if>
		 ORDER BY A.WORK_ORDER_ID, A.RESOURCE_NAME, A.PLAN_START_TIME, A.PRIORITY 
	</select>
	
	<select id="get_processFaulty_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT TO_CHAR(MDR.STATE_TIME, 'YYYY-MM-DD') AS STATE_TIME
			 , #{workOrderId, jdbcType=VARCHAR} AS WORK_ORDER_ID
			 , #{itemId, jdbcType=VARCHAR} AS PARENT_ITEM_ID
		     , MDR.ITEM_ID
		     , MDR.MEASURE_DETAIL_TYPE
		     , MDR.GAUGE_METHOD
		     , MDR.DEFECT_TYPE
		     , MDR.REASON_CODE  
		     , MDR.DEFECT_QTY 
		     , MDR.PROBLEM_REASON
		     , MDR.DEFECT_BY
		     , MDR.DESCRIPTION 
		  FROM MOM_DEFECT_RESULT MDR
		     , MOM_ITEM_DEFINITION MID
		 WHERE MDR.DIVISION_CD = MID.DIVISION_CD
		   AND MDR.COMPANY_CD = MID.COMPANY_CD
		   AND MDR.ITEM_ID = MID.ITEM_ID
		   AND MDR.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND MDR.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND MDR.WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR}
		   AND MDR.MEASURE_TYPE = 'PQC'
		   AND MDR.MATERIAL_FLAG = 'MATERIAL'
		   AND MDR.DEFECT_LEVEL = 1
		   AND MID.USE_YN = 'Y'
		 ORDER BY MDR.STATE_TIME, MDR.ITEM_ID
	</select>
	
	<insert id="create_processFaulty" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
      DECLARE
      	v_defect_result_id  varchar2(40) := S_ORDER_SEQ.NEXTVAL;
      BEGIN
      		#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
      		
		INSERT INTO MOM_DEFECT_RESULT
            ( DIVISION_CD
			, COMPANY_CD
			, DEFECT_RESULT_ID
			, DEFECT_LEVEL
			, MEASURE_TYPE
			, ITEM_ID
			, MEASURE_DETAIL_TYPE
			, MATERIAL_FLAG
			, MEASURE_METHOD
			, PARENT_ITEM_ID
			, VENDOR_CD
			, DEFECT_QTY
			, UNIT
			, TARGET
			, USL
			, LSL
			, AQL
			, GAUGE_METHOD
			, CHECK_METHOD
			, STATE_TIME
			, DEFECT_STATE
			, SAMPLING_BASE
			, STRICTNESS
			, DECISION_METHOD
			, HANDLING_TIME
			, CONFIRM_TIME
			, START_TIME
			, END_TIME
			, CHECK_TYPE
			, CHECK_LEVEL
			, MATERIAL_ORDER_ID
			, MATERIAL_DEPARTURE_ID
			, MATERIAL_LOT_ID
			, WORK_ORDER_ID
			, WORK_ORDER_RESULT_ID
			, CUSTOMER_PO_ID
			, LOT_ID
			, IS_DEFECT
			, IS_REPORT
			, IS_QULITY
			, IS_QA
			, OCCUR
			, OK_QTY
			, PRODUCT_QTY
			, JUDGMENT_ID
			, LOCATION_CD
			, DEFECT_BY
			, CONFIRMED_BY
			, PROBLEM_REASON
			, RESOURCE_CD
			, DEPT_CD
			, CUSTOM_RETURN_REASON
			, RETURN_REASON
			, PROCESS_DESCRIPTION
			, MODEL_SUFFIX
			, QA_REASON_CODE
			, DEFECT_TYPE
			, CUSTOMER_LINE_CODE
			, ITEM_VALUE1
			, ITEM_VALUE2
			, ITEM_VALUE3
			, ITEM_VALUE4
			, ITEM_VALUE5
			, ITEM_VALUE6
			, ITEM_VALUE7
			, ITEM_VALUE8
			, ITEM_VALUE9
			, ITEM_VALUE10
			, ITEM_VALUE11
			, ITEM_VALUE12
			, ITEM_VALUE13
			, ITEM_VALUE14
			, ITEM_VALUE15
			, ITEM_VALUE16
			, ITEM_VALUE17
			, ITEM_VALUE18
			, ITEM_VALUE19
			, ITEM_VALUE20
			, ITEM_VALUE21
			, ITEM_VALUE22
			, ITEM_VALUE23
			, ITEM_VALUE24
			, ITEM_VALUE25
			, ITEM_VALUE26
			, ITEM_VALUE27
			, ITEM_VALUE28
			, ITEM_VALUE29
			, ITEM_VALUE30
			, DESCRIPTION
			, REASON_CODE
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
			)
        values      
            ( #{divisionCd, jdbcType=VARCHAR}
			, #{companyCd, jdbcType=VARCHAR}
			, v_defect_result_id
			, '1'
			, 'PQC'
			, #{itemId, jdbcType=VARCHAR}
			, #{measureDetailType, jdbcType=VARCHAR}
			, 'MATERIAL'
			, #{measureMethod, jdbcType=VARCHAR}
			, #{parentItemId, jdbcType=VARCHAR}
			, #{vendorCd, jdbcType=VARCHAR}
			, #{defectQty, jdbcType=INTEGER}
			, #{unit, jdbcType=VARCHAR}
			, #{target, jdbcType=VARCHAR}
			, #{usl, jdbcType=VARCHAR}
			, #{lsl, jdbcType=VARCHAR}
			, #{aql, jdbcType=VARCHAR}
			, #{gaugeMethod, jdbcType=VARCHAR}
			, #{checkMethod, jdbcType=VARCHAR}
			, TO_DATE(#{stateTime, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			, #{defectState, jdbcType=VARCHAR}
			, #{samplingBase, jdbcType=VARCHAR}
			, #{strictness, jdbcType=VARCHAR}
			, #{decisionMethod, jdbcType=VARCHAR}
			, #{handlingTime, jdbcType=VARCHAR}
			, #{confirmTime, jdbcType=VARCHAR}
			, #{startTime, jdbcType=VARCHAR}
			, #{endTime, jdbcType=VARCHAR}
			, #{checkType, jdbcType=VARCHAR}
			, #{checkLevel, jdbcType=VARCHAR}
			, #{materialOrderId, jdbcType=VARCHAR}
			, #{materialDepartureId, jdbcType=VARCHAR}
			, #{materialLotId, jdbcType=VARCHAR}
			, #{workOrderId, jdbcType=VARCHAR}
			, #{workOrderResultId, jdbcType=VARCHAR}
			, #{customerPoId, jdbcType=VARCHAR}
			, #{lotId, jdbcType=VARCHAR}
			, #{isDefect, jdbcType=VARCHAR}
			, #{isReport, jdbcType=VARCHAR}
			, #{isQulity, jdbcType=VARCHAR}
			, #{isQa, jdbcType=VARCHAR}
			, #{occur, jdbcType=VARCHAR}
			, #{okQty, jdbcType=INTEGER}
			, #{productQty, jdbcType=INTEGER}
			, #{judgmentId, jdbcType=VARCHAR}
			, #{locationCd, jdbcType=VARCHAR}
			, #{defectBy, jdbcType=VARCHAR}
			, #{confirmedBy, jdbcType=VARCHAR}
			, #{problemReason, jdbcType=VARCHAR}
			, #{resourceCd, jdbcType=VARCHAR}
			, #{deptCd, jdbcType=VARCHAR}
			, #{customReturnReason, jdbcType=VARCHAR}
			, #{returnReason, jdbcType=VARCHAR}
			, #{processDescription, jdbcType=VARCHAR}
			, #{modelSuffix, jdbcType=VARCHAR}
			, #{qaResaonCode, jdbcType=VARCHAR}
			, #{defectType, jdbcType=VARCHAR}
			, #{customerLineCode, jdbcType=VARCHAR}
			, #{itemValue1, jdbcType=VARCHAR}
			, #{itemValue2, jdbcType=VARCHAR}
			, #{itemValue3, jdbcType=VARCHAR}
			, #{itemValue4, jdbcType=VARCHAR}
			, #{itemValue5, jdbcType=VARCHAR}
			, #{itemValue6, jdbcType=VARCHAR}
			, #{itemValue7, jdbcType=VARCHAR}
			, #{itemValue8, jdbcType=VARCHAR}
			, #{itemValue9, jdbcType=VARCHAR}
			, #{itemValue10, jdbcType=VARCHAR}
			, #{itemValue11, jdbcType=VARCHAR}
			, #{itemValue12, jdbcType=VARCHAR}
			, #{itemValue13, jdbcType=VARCHAR}
			, #{itemValue14, jdbcType=VARCHAR}
			, #{itemValue15, jdbcType=VARCHAR}
			, #{itemValue16, jdbcType=VARCHAR}
			, #{itemValue17, jdbcType=VARCHAR}
			, #{itemValue18, jdbcType=VARCHAR}
			, #{itemValue19, jdbcType=VARCHAR}
			, #{itemValue20, jdbcType=VARCHAR}
			, #{itemValue21, jdbcType=VARCHAR}
			, #{itemValue22, jdbcType=VARCHAR}
			, #{itemValue23, jdbcType=VARCHAR}
			, #{itemValue24, jdbcType=VARCHAR}
			, #{itemValue25, jdbcType=VARCHAR}
			, #{itemValue26, jdbcType=VARCHAR}
			, #{itemValue27, jdbcType=VARCHAR}
			, #{itemValue28, jdbcType=VARCHAR}
			, #{itemValue29, jdbcType=VARCHAR}
			, #{itemValue30, jdbcType=VARCHAR}
			, #{description, jdbcType=VARCHAR}
			, #{reasonCode, jdbcType=VARCHAR}
			, MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			, #{userId, jdbcType=VARCHAR}
			, MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			, #{userId, jdbcType=VARCHAR}
			, #{tid, jdbcType=VARCHAR}
            );
        
        INSERT INTO MOM_DEFECT_RESULT_HIST
            ( LAST_EVENT_SEQ
            , DIVISION_CD
			, COMPANY_CD
			, DEFECT_RESULT_ID
			, DEFECT_LEVEL
			, MEASURE_TYPE
			, ITEM_ID
			, MEASURE_DETAIL_TYPE
			, MATERIAL_FLAG
			, MEASURE_METHOD
			, PARENT_ITEM_ID
			, VENDOR_CD
			, DEFECT_QTY
			, UNIT
			, TARGET
			, USL
			, LSL
			, AQL
			, GAUGE_METHOD
			, CHECK_METHOD
			, STATE_TIME
			, DEFECT_STATE
			, SAMPLING_BASE
			, STRICTNESS
			, DECISION_METHOD
			, HANDLING_TIME
			, CONFIRM_TIME
			, START_TIME
			, END_TIME
			, CHECK_TYPE
			, CHECK_LEVEL
			, MATERIAL_ORDER_ID
			, MATERIAL_DEPARTURE_ID
			, MATERIAL_LOT_ID
			, WORK_ORDER_ID
			, WORK_ORDER_RESULT_ID
			, CUSTOMER_PO_ID
			, LOT_ID
			, IS_DEFECT
			, IS_REPORT
			, IS_QULITY
			, IS_QA
			, OCCUR
			, OK_QTY
			, PRODUCT_QTY
			, JUDGMENT_ID
			, LOCATION_CD
			, DEFECT_BY
			, CONFIRMED_BY
			, PROBLEM_REASON
			, RESOURCE_CD
			, DEPT_CD
			, CUSTOM_RETURN_REASON
			, RETURN_REASON
			, PROCESS_DESCRIPTION
			, MODEL_SUFFIX
			, QA_REASON_CODE
			, DEFECT_TYPE
			, CUSTOMER_LINE_CODE
			, ITEM_VALUE1
			, ITEM_VALUE2
			, ITEM_VALUE3
			, ITEM_VALUE4
			, ITEM_VALUE5
			, ITEM_VALUE6
			, ITEM_VALUE7
			, ITEM_VALUE8
			, ITEM_VALUE9
			, ITEM_VALUE10
			, ITEM_VALUE11
			, ITEM_VALUE12
			, ITEM_VALUE13
			, ITEM_VALUE14
			, ITEM_VALUE15
			, ITEM_VALUE16
			, ITEM_VALUE17
			, ITEM_VALUE18
			, ITEM_VALUE19
			, ITEM_VALUE20
			, ITEM_VALUE21
			, ITEM_VALUE22
			, ITEM_VALUE23
			, ITEM_VALUE24
			, ITEM_VALUE25
			, ITEM_VALUE26
			, ITEM_VALUE27
			, ITEM_VALUE28
			, ITEM_VALUE29
			, ITEM_VALUE30
			, DESCRIPTION
			, REASON_CODE
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID )
       SELECT S_ORDER_SEQ.NEXTVAL 
            , DIVISION_CD
			, COMPANY_CD
			, DEFECT_RESULT_ID
			, DEFECT_LEVEL
			, MEASURE_TYPE
			, ITEM_ID
			, MEASURE_DETAIL_TYPE
			, MATERIAL_FLAG
			, MEASURE_METHOD
			, PARENT_ITEM_ID
			, VENDOR_CD
			, DEFECT_QTY
			, UNIT
			, TARGET
			, USL
			, LSL
			, AQL
			, GAUGE_METHOD
			, CHECK_METHOD
			, STATE_TIME
			, DEFECT_STATE
			, SAMPLING_BASE
			, STRICTNESS
			, DECISION_METHOD
			, HANDLING_TIME
			, CONFIRM_TIME
			, START_TIME
			, END_TIME
			, CHECK_TYPE
			, CHECK_LEVEL
			, MATERIAL_ORDER_ID
			, MATERIAL_DEPARTURE_ID
			, MATERIAL_LOT_ID
			, WORK_ORDER_ID
			, WORK_ORDER_RESULT_ID
			, CUSTOMER_PO_ID
			, LOT_ID
			, IS_DEFECT
			, IS_REPORT
			, IS_QULITY
			, IS_QA
			, OCCUR
			, OK_QTY
			, PRODUCT_QTY
			, JUDGMENT_ID
			, LOCATION_CD
			, DEFECT_BY
			, CONFIRMED_BY
			, PROBLEM_REASON
			, RESOURCE_CD
			, DEPT_CD
			, CUSTOM_RETURN_REASON
			, RETURN_REASON
			, PROCESS_DESCRIPTION
			, MODEL_SUFFIX
			, QA_REASON_CODE
			, DEFECT_TYPE
			, CUSTOMER_LINE_CODE
			, ITEM_VALUE1
			, ITEM_VALUE2
			, ITEM_VALUE3
			, ITEM_VALUE4
			, ITEM_VALUE5
			, ITEM_VALUE6
			, ITEM_VALUE7
			, ITEM_VALUE8
			, ITEM_VALUE9
			, ITEM_VALUE10
			, ITEM_VALUE11
			, ITEM_VALUE12
			, ITEM_VALUE13
			, ITEM_VALUE14
			, ITEM_VALUE15
			, ITEM_VALUE16
			, ITEM_VALUE17
			, ITEM_VALUE18
			, ITEM_VALUE19
			, ITEM_VALUE20
			, ITEM_VALUE21
			, ITEM_VALUE22
			, ITEM_VALUE23
			, ITEM_VALUE24
			, ITEM_VALUE25
			, ITEM_VALUE26
			, ITEM_VALUE27
			, ITEM_VALUE28
			, ITEM_VALUE29
			, ITEM_VALUE30
			, DESCRIPTION
			, REASON_CODE
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
          FROM MOM_DEFECT_RESULT
         WHERE DEFECT_RESULT_ID = v_defect_result_id
           AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
         ;
         
        SELECT
			CASE 
				WHEN COUNT(DEFECT_RESULT_ID) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_DEFECT_RESULT
		WHERE 
			    DEFECT_RESULT_ID = v_defect_result_id
			AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
            AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		;
        END
    }
	</insert>
	
	<select id="get_materialRequsetItems_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT A.ITEM_ID AS CODE
	     , A.ITEM_ID || '(' || (SELECT MOM_COMMON_PKG.FN_GET_ITEM_NAME(A.DIVISION_CD 
	                                                                 , A.COMPANY_CD 
	                                                                 , A.ITEM_ID)
	                              FROM DUAL) || ')' AS NAME
	  FROM MOM_MATERIAL_REQUEST A
	 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	   AND A.WORK_ORDER_ID = #{workOrderId, jdbcType=VARCHAR}
	 ORDER BY A.ITEM_ID 
	</select>
</mapper>