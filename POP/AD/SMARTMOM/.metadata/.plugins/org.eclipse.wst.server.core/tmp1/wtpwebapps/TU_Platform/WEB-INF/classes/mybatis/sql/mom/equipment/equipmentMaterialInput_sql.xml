<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.equipment.equipmentMaterialInput">
	<select id="get_equipmentMaterialInput_list" resultType="camelMap" parameterType="java.util.HashMap">
		<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
		WITH TEMP1 AS (	
	    </if>
	    	SELECT A.EQUIPMENT_ORDER_ID
	             , A.VENDOR_CD
	             , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(A.DIVISION_CD 
	             										   , A.COMPANY_CD 
	             										   , A.VENDOR_CD)
	                  FROM DUAL) AS VENDOR_NAME
	             , A.DEPARTURE_VENDOR_CD
	             , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(A.DIVISION_CD 
	             										   , A.COMPANY_CD 
	             										   , A.DEPARTURE_VENDOR_CD)
	                  FROM DUAL) AS DEPARTURE_VENDOR_NAME
	             , A.ITEM_ID
	             , A.ITEM_NAME
	             , A.SPECIFICATION
	             , A.UNIT
	             , TO_CHAR(A.ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE
	             , A.ORDER_QTY
	             , A.CANCEL_QTY
	             , A.CLOSED_QTY
	             , (A.ORDER_QTY - NVL(A.CANCEL_QTY, 0) - NVL(A.CLOSED_QTY, 0)) AS REMAIN_QTY
	             , NVL(A.CONVERSION_UNIT_QTY, 1) * (A.ORDER_QTY - NVL(A.CANCEL_QTY, 0) - NVL(A.CLOSED_QTY, 0)) AS CONVERSION_UNIT_QTY
	             , A.CONVERSION_UNIT_QTY AS ITEM_CONVERSION_UNIT_QTY
	             , A.LOCATION_CD
	             , TO_CHAR(MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR}), 'YYYY-MM-DD') AS DELIVERY_DATE
	             , (A.ORDER_QTY - NVL(A.CANCEL_QTY, 0) - NVL(A.CLOSED_QTY, 0)) AS INPUT_QTY
	             , A.MARKET_CD
	             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD 
	             										 , A.COMPANY_CD 
	             										 ,'MARKET_CODE' 
	             										 , A.MARKET_CD )
	                  FROM DUAL) AS MARKET_NAME
	             , A.CURRENCY_CD
	             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD 
	             										 , A.COMPANY_CD 
	             										 ,'CURRENCY_CODE' 
	             										 , A.MARKET_CD )
	                  FROM DUAL) AS CURRENCY_NAME
	             , (SELECT MOM_COMMON_PKG.FN_GET_MATERIAL_PRICE(A.DIVISION_CD 
	             											  , A.COMPANY_CD 
	             											  , A.VENDOR_CD 
	             											  , A.ITEM_ID 
	             											  , A.MARKET_CD 
	             											  , A.CURRENCY_CD 
	             											  , TRUNC(MOM_COMMON_PKG.FN_GET_LOCAL_TIME(A.DIVISION_CD, A.COMPANY_CD)) )
	                  FROM DUAL) AS UNIT_PRICE
	             , A.DESCRIPTION
	             , TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
	             , A.CREATE_BY
	             , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME( A.DIVISION_CD 
	             										  , A.COMPANY_CD 
	             										  , A.CREATE_BY)
	                  FROM DUAL) AS CREATE_BY_NAME
	          FROM(SELECT A.DIVISION_CD
	                     , A.COMPANY_CD
	                     , A.EQUIPMENT_ORDER_ID
	                     , A.VENDOR_CD
	                     , A.DEPARTURE_VENDOR_CD
	                     , A.ITEM_ID
	                     , B.ITEM_NAME
	                     , B.SPECIFICATION
	                     , B.UNIT
	                     , A.ORDER_DATE
	                     , A.ORDER_QTY
	                     , A.CANCEL_QTY
	                     , A.CLOSED_QTY
	                     , B.CONVERSION_UNIT_QTY
	                     , A.LOCATION_CD
	                     , A.DELIVERY_DATE
	                     , A.MARKET_CD
	                     , A.CURRENCY_CD
	                     , A.DESCRIPTION
	                     , A.CREATE_DATE
	                     , A.CREATE_BY
	                  FROM MOM_EQM_ITEM_ORDER A
	                     , MOM_ITEM_DEFINITION B
	                 WHERE A.DIVISION_CD = B.DIVISION_CD
	                   AND A.COMPANY_CD = B. COMPANY_CD
	                   AND A.ITEM_ID = B.ITEM_ID
	                   AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	                   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	                   AND A.ORDER_STATE IN (SELECT CODE_ID
					                           FROM MOM_CODE
					                          WHERE CODE_CLASS_ID = 'MATERIAL_ORDER_STATE'
					                            AND ATTRIBUTE7 = 'Y'
					                            AND USE_YN = 'Y')
	                    <if test="dateCombo == 'CUSTOMER_DUE_DATE'">
				  	   AND A.ORDER_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR},'YYYY-MM-DD') + 23.9997 / 24
		 			   </if>
		 			   <if test="dateCombo == 'ORDER_DATE'">
		 			   AND A.CREATE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'YYYY-MM-DD') AND TO_DATE(#{toDate, jdbcType=VARCHAR},'YYYY-MM-DD') + 23.9997 / 24
 			   		   </if>
 			   		   <if test="specification != null and specification != ''">
				       AND UPPER(B.SPECIFICATION) LIKE '%' || TRIM(UPPER(#{specification, jdbcType=VARCHAR})) || '%'
				       </if>
				       <if test="orderNo != null and orderNo != ''">
				       AND A.EQUIPMENT_ORDER_ID LIKE '%' || TRIM(UPPER(#{orderNo, jdbcType=VARCHAR})) || '%'
				       </if>
				        <if test="fromLocation != null and fromLocation != ''">
				        AND A.VENDOR_CD = #{fromLocation, jdbcType=VARCHAR}
				        </if>
				        <if test="toLocation != null and toLocation != ''">
				        AND A.DEPARTURE_VENDOR_CD = #{toLocation, jdbcType=VARCHAR}
				        </if>
 			   		   ) A
	         WHERE 1 = 1
	         <if test="item != null and item != ''">
	           AND (A.ITEM_ID LIKE '%' || TRIM(UPPER(#{item, jdbcType=VARCHAR})) || '%'
	             OR A.ITEM_NAME LIKE '%' || TRIM(UPPER(#{item, jdbcType=VARCHAR})) || '%')
	         </if>
 			 ORDER BY A.EQUIPMENT_ORDER_ID
	   <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
				)
	      SELECT A.*
	           , B.ROW_COUNT
	      FROM (SELECT A.*
	                 , ROWNUM GRIDROW
	              FROM TEMP1 A) A
	         , (SELECT COUNT(*) ROW_COUNT
	              FROM TEMP1) B 
	      WHERE GRIDROW BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
       </if>
    </select>
    
   <insert id="create_materialInputCreate" statementType="CALLABLE">
	{
        CALL SP_MOM_EQUIPMENT_PKG.P_CREATE_EQM_GOODS_RECEIPT (
        	#{p_err_code, mode=OUT, jdbcType=VARCHAR}
           ,#{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           ,#{divisionCd, mode=IN, jdbcType=VARCHAR}
           ,#{companyCd, mode=IN, jdbcType=VARCHAR}
           ,#{equipmentOrderId, mode=IN, jdbcType=VARCHAR}
           ,#{inputQty, mode=IN, jdbcType=NUMERIC}
           ,#{locationCd, mode=IN, jdbcType=VARCHAR}
           ,TO_DATE(#{deliveryDate, mode=IN, jdbcType=VARCHAR}, 'YYYY-MM-DD')
           ,#{conversionUnitQty, mode=IN, jdbcType=NUMERIC}
           ,#{description, mode=IN, jdbcType=VARCHAR}
           ,#{userId, mode=IN, jdbcType=VARCHAR}
           ,#{eqmInputGroupId, mode=IN, jdbcType=VARCHAR}
           ,#{transSeq, mode=IN, jdbcType=NUMERIC}
        )
    }
    </insert>

	<select id="get_eqmInputGroupId_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MOM_COMMON_PKG.FN_GET_EQM_SEQ_ID(#{divisionCd, jdbcType=VARCHAR}
											  , #{companyCd, jdbcType=VARCHAR}
											  , 'EQM_GOODS_RECEIPT'
											  , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
											  , ''
											  , '' ) AS EQM_INPUT_GROUP_ID 
		  FROM DUAL
	</select>
</mapper>