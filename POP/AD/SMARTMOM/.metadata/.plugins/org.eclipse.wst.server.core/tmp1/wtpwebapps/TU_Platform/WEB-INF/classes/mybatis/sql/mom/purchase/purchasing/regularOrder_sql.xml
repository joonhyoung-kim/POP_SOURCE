<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.purchase.purchasing.regularOrder">
	<select id="get_regularOrder_list" resultType="camelMap" parameterType="java.util.HashMap">
	 WITH TEMP1 AS
		 (SELECT A.PLAN_ID
               , A.ITEM_ID
               , A.SEQ
               , TO_CHAR(A.PLAN_DATE, 'yyyymmdd') PLAN_DATE
               , A.QTY
               , (SELECT MOM_COMMON_PKG.FN_GET_MULTI_LANG( A.MASTER_ID
                                                         , #{companyCd, jdbcType=VARCHAR}
                                                         , A.CATEGORY
                                                         , 'FRONT'
                                                         , #{locale, jdbcType=VARCHAR}) 
                    FROM DUAL) CATEGORY
		    FROM TH_EXP_PSI_MOM A
		       , TH_EXP_PSI_MOM_DETAIL B
		   WHERE A.MASTER_ID = B.MASTER_ID
		     AND A.PLAN_ID = B.PLAN_ID
		     AND A.ITEM_ID = B.ITEM_ID
		     AND A.SEQ = B.SEQ
		     AND A.MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
		     AND A.PLAN_ID = #{planId, jdbcType=VARCHAR}
		    <if test="itemId != null and itemId != ''">
		     AND (A.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%'
			     OR UPPER(B.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%')
		    </if>
		    <if test="vendorId != null and vendorId != ''">
		     AND B.VENDOR_ID = #{vendorId, jdbcType=VARCHAR}
		    </if>                            
		    <if test="itemType != null and itemType != ''">
		     AND B.ITEM_TYPE = #{itemType, jdbcType=VARCHAR}
		    </if>         
		    <if test="planner  != null and planner != ''">
		     AND UPPER(B.PLANNER) LIKE '%' || TRIM(UPPER(#{planner, jdbcType=VARCHAR})) || '%'
		    </if>
		    <if test="userName  != null and userName != ''">
		     AND UPPER(B.PLANNER) LIKE '%' || TRIM(UPPER(#{userName, jdbcType=VARCHAR})) || '%'
		    </if>    
		    <if test="locationId  != null and locationId != ''">
		     AND B.LOCATION_ID = #{locationId, jdbcType=VARCHAR}
		    </if>         
		    <if test="orderMethod  != null and orderMethod != ''">
		     AND B.ORDER_METHOD = #{orderMethod, jdbcType=VARCHAR}
		    </if>
			<if test="planType != null and planType != ''">
			 AND B.PLAN_TYPE = #{planType, jdbcType=VARCHAR}
			</if>         
		    <if test='shortage == "Y"'>
		     AND A.ITEM_ID IN
		          (SELECT DISTINCT M.ITEM_ID
		             FROM TH_EXP_PSI_MOM M
		            WHERE M.MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
		              AND M.PLAN_ID = #{planId, jdbcType=VARCHAR}
		              AND M.SEQ = 8
		              AND M.PLAN_DATE <![CDATA[<=]]> TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + #{shortagePeriod, jdbcType=VARCHAR}
		              AND NVL(M.QTY, 0) <![CDATA[<]]> 0)
		    </if>
		     AND A.PLAN_DATE >= TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		     AND A.PLAN_DATE <![CDATA[<=]]> TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')),
		TEMP2 as
		 (select FLOOR((ROWNUM - 1) / 6) + 1 RNUM,
		         ROWNUM JQGRIDROW,
		         a.*
		    from (select decode(a.seq, 2,b.part_no,5,b.lead_time,6, b.item_type_nm,7,b.safety_stock_qty, 8, b.specification, 9, '-' ) as col1,
		                 decode(a.seq, 2,b.item_name, 5, b.moq,6, (SELECT mom_common_pkg.fn_get_user_name(b.master_id, #{companyCd, jdbcType=VARCHAR}, b.planner) FROM DUAL),7, b.in_order_qty, 8,b.defect_rate, 9, '-' ) as col2,
		                 decode(a.seq, 2, b.vendor_id, 5, b.onhand_qty, 6, b.warehouse, 7, b.order_method_nm, 8, b.vendor_nm, 9, '-') as col3,
		                 a.*,
		                 B.VENDOR_ID,
		                 B.PLANNER
		            from (select *
		                    from (select plan_id,
		                                 item_id,
		                                 a.seq,
		                                 max(category) category,
		                                 TRUNC(plan_date) plan_date,
		                                 sum(qty) qty
		                            from temp1 a
		                           where a.seq in(2, 5, 6, 7, 8, 9)
		                           group by a.plan_id, a.item_id, a.seq,  a.plan_date)
		                          <if test="pivot != null and pivot != '' "> 
		                           PIVOT(SUM(QTY) FOR PLAN_DATE IN(${pivot}))
		                          </if>
		                           ) a,
		                 th_exp_psi_mom_detail b
		           where a.plan_id = b.plan_id
		             and a.item_id = b.item_id
		             and b.master_id = #{divisionCd, jdbcType=VARCHAR}
		             and a.seq = b.seq
		           order by a.item_id, a.seq) a)
		SELECT A.*, B.CNT CNT
		  FROM(
				SELECT A.*
				  FROM TEMP2 A) A
		      ,(
				SELECT COUNT(*) CNT
				  FROM TEMP2) B
	</select>

	<!-- PlanID 조회 -->
	<select id="get_planId_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT PLAN_ID CODE, PLAN_ID NAME
	      FROM TH_MST_PLAN A
	     WHERE MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
	     ORDER BY A.PLAN_ID DESC
	</select>

   <!-- 날짜 조회 From , To -->
   <select id="get_planId_date_list" resultType="camelMap" parameterType="java.util.HashMap">
	   SELECT TO_CHAR(A.SOLAR_DATE, 'YYYYMMDD') PLAN_DATE
	   		, TO_CHAR(B.START_DATE, 'YYYY-MM-DD') START_DATE
	   		, TO_CHAR(B.END_DATE, 'YYYY-MM-DD') END_DATE
	     FROM MOM_CALENDA A
	        , (SELECT MIN(PLAN_START_DTTM) START_DATE
	        , MAX(PLAN_START_DTTM) + MAX(DEMAND_HORIZON) END_DATE
	             FROM TH_MST_PLAN A
	            WHERE PLAN_ID = #{planId, jdbcType=VARCHAR}
	      		  AND MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
	       	  ) B
	    WHERE A.SOLAR_DATE >= START_DATE
	      AND A.SOLAR_DATE &lt;= START_DATE + 30
	    ORDER BY 1
   </select>
   
   <!-- 메인 그리드에서 발주 버튼 클릭 시 -->
   <select id="get_reqularOrderDetail_list" resultType="camelMap" parameterType="java.util.HashMap">
	   WITH TEMP1 AS ( SELECT A.VENDOR_NM
	                         , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(A.MASTER_ID, A.COMPANY_CD, A.DEPARTURE_VENDOR_CD) FROM DUAL) DEPARTURE_VENDOR_NM
	                         , A.PLANNER
	                         , A.ITEM_ID
	                         , A.ITEM_NAME
	                         , A.SPECIFICATION
	                         , A.WAREHOUSE
	                         , NVL((SELECT MOM_COMMON_PKG.FN_GET_MATERIAL_PRICE_MKT(A.MASTER_ID
				                                                                  , A.COMPANY_CD
				                                                                  , A.VENDOR_ID
				                                                                  , A.ITEM_ID
				                                                                  , (SELECT MOM_COMMON_PKG.FN_GET_ORDER_DUEDATE(A.MASTER_ID
				                                                                                                              , A.PLAN_ID
				                                                                                                              , A.ITEM_ID
				                                                                                                              , A.CNT)
				                                                                       FROM DUAL ))
				                      FROM DUAL), A.MKT) AS MARKET_CD
	                         , A.TEST_REPORT_FLAG AS INSPECTION_FLAG
	                         , NVL(A.ONHAND_QTY, 0) ONHAND_QTY
	                         , NVL(A.QTY, 0) AS SUGGEST_QTY
	                         , NVL(A.QTY, 0) AS REQUEST_QTY
							 , TO_CHAR((SELECT MOM_COMMON_PKG.FN_GET_ORDER_DUEDATE(A.MASTER_ID, A.PLAN_ID, A.ITEM_ID, A.CNT)
                                  		  FROM DUAL )
                                  	  , 'YYYY-MM-DD') AS REQUEST_DATE
	                         , A.DESCRIPTION
	                         , A.VENDOR_ID AS VENDOR_CD
	                         , A.DEPARTURE_VENDOR_CD
	                         , NVL((SELECT MOM_COMMON_PKG.FN_GET_MATERIAL_PRICE (A.MASTER_ID
			                                                                   , A.COMPANY_CD
			                                                                   , A.VENDOR_ID
			                                                                   , A.ITEM_ID
			                                                                   , A.MKT
			                                                                   , A.CURRENCY
			                                                                   , MOM_COMMON_PKG.FN_GET_LOCAL_TIME (A.MASTER_ID, A.COMPANY_CD))
			                          FROM DUAL), 0)
			                          AS UNIT_PRICE
	                         , A.LOCATION_ID AS IN_LOCATION_ID
	                         , A.MASTER_ID
	                         , A.PLAN_ID
	                         , A.PLAN_DATE
	                         , NVL((SELECT MOM_COMMON_PKG.FN_GET_MATERIAL_PRICE_CURRENCY(A.MASTER_ID
				                                                                       , A.COMPANY_CD
				                                                                       , A.VENDOR_ID
				                                                                       , A.ITEM_ID
				                                                                       , (SELECT MOM_COMMON_PKG.FN_GET_ORDER_DUEDATE(A.MASTER_ID
				                                                                                                                   , A.PLAN_ID
				                                                                                                                   , A.ITEM_ID
				                                                                                                                   , A.CNT)
				                                                                            FROM DUAL ))
				                      FROM DUAL), A.CURRENCY) AS CURRENCY_CD
	                         , NVL(A.IQC_FLAG, 'N') AS IQC_FLAG
	                         , A.VENDOR_ID AS VENDOR_ID_REAL
	                         , A.COMPANY_CD
	                      FROM (SELECT B.VENDOR_ID
	                                 , NVL(B.VENDOR_NM, V.VENDOR_NAME) AS VENDOR_NM
	                                 , NVL(C.DEPARTURE_VENDOR_CD, C.VENDOR_CD) AS DEPARTURE_VENDOR_CD
	                                 , B.PLANNER
	                                 , A.ITEM_ID
	                                 , B.ITEM_NAME
	                                 , C.SPECIFICATION
	                                 , B.WAREHOUSE
	                                 , B.ONHAND_QTY
	                                 , A.QTY
	                                 , A.PLAN_DATE
	                                 , '' AS DESCRIPTION
	                                 , B.ITEM_TYPE
	                                 , ROW_NUMBER() OVER(PARTITION BY A.ITEM_ID ORDER BY A.PLAN_DATE) AS CNT
	                                 , A.MASTER_ID
	                                 , A.PLAN_ID
	                                 , P.MARKET_CD AS MKT
	                                 , P.CURRENCY_CD  AS CURRENCY
                                     , C.TEST_REPORT_FLAG
	                                 , B.LOCATION_ID
	                                 , C.IQC_FLAG
	                                 , C.COMPANY_CD
	                              FROM TH_EXP_PSI_MOM A
	                                 , TH_EXP_PSI_MOM_DETAIL B
	                                 , MOM_ITEM_DEFINITION C
	                                 , MOM_PARAMETER P
	                                 , MOM_VENDOR V
	                             WHERE A.MASTER_ID = B.MASTER_ID
	                               AND A.PLAN_ID = B.PLAN_ID
	                               AND A.ITEM_ID = B.ITEM_ID
	                               AND A.SEQ = B.SEQ
	                               AND A.MASTER_ID = C.DIVISION_CD(+)
	                               AND A.ITEM_ID = C.ITEM_ID(+)
	                               AND A.MASTER_ID = P.DIVISION_CD
	                               AND B.MASTER_ID = V.DIVISION_CD(+)
	                               AND B.VENDOR_ID = V.VENDOR_CD(+)
	                               AND A.MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
	                               AND A.PLAN_ID = #{planId, jdbcType=VARCHAR}
	                              <if test="pVendorId != null and pVendorId != ''">
 								   AND B.VENDOR_ID IN ${pVendorId}
	                              </if>
	                               AND A.SEQ = 9
	                               AND A.PLAN_DATE >= TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	                               AND A.PLAN_DATE <![CDATA[<=]]> TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + #{shortagePeriod, jdbcType=VARCHAR}
	                               AND A.ITEM_ID IN (SELECT DISTINCT M.ITEM_ID
				                                       FROM TH_EXP_PSI_MOM M
				                                      WHERE M.MASTER_ID = A.MASTER_ID
				                                        AND M.PLAN_ID = A.PLAN_ID
				                                        AND M.SEQ = 8
				                                        AND M.PLAN_DATE >= TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
				                                        AND M.PLAN_DATE <![CDATA[<=]]> TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + #{shortagePeriod, jdbcType=VARCHAR}
				                                        AND NVL(M.QTY, 0) <![CDATA[<]]> 0 )
	                              <if test="pPartNo != null and pPartNo != ''">
	                              		AND (A.ITEM_ID LIKE '%' || TRIM(UPPER(#{pPartNo, jdbcType=VARCHAR})) || '%'
		                                      OR  UPPER(B.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{pPartNo, jdbcType=VARCHAR})) || '%')
	                              </if>
	                              ) A
	                           ORDER BY A.VENDOR_NM, A.PLAN_DATE )
	            SELECT A.*
	                 , B.CNT CNT
	              FROM (SELECT A.*
	                         , ROWNUM JQGRIDROW
	                      FROM TEMP1 A) A
	                 , (SELECT COUNT(*) CNT
	                      FROM TEMP1) B
   </select>
   
   <!-- 발주 팝업 내 업체 리스트 조회 -->
   <!-- 
   <select id="get_popVendor_list" resultType="camelMap" parameterType="java.util.HashMap">
	   WITH TEMP1 AS (SELECT (SELECT NVL(MOM_COMMON_PKG.FN_GET_VENDOR_NAME(MASTER_ID, #{companyCd, jdbcType=VARCHAR}, COMPANY_ID), 'NO_VENDOR')
	                              FROM DUAL) VENDOR_NAME
	                         , COMPANY_ID VENDOR_ID
	                      FROM (SELECT (SELECT D.VENDOR_CD
	                                      FROM MOM_ITEM_DEFINITION D
	                                     WHERE D.DIVISION_CD = B.MASTER_ID
	                                       AND D.ITEM_ID = B.ITEM_ID
	                                     <if test="pPartNo != null and pPartNo != ''">
	                                       AND (UPPER(D.ITEM_DEFINITION_ID) LIKE ('%' || #{pPartNo, jdbcType=VARCHAR} || '%')
	                                            OR UPPER(D.ITEM_DEFINITION_NAME) LIKE ('%' || #{pPartNo, jdbcType=VARCHAR} || '%')
	                                            OR UPPER(D.SPECIFICATION) LIKE ('%' || #{pPartNo, jdbcType=VARCHAR} || '%'))
	                                     </if>    
	                                     ) AS COMPANY_ID
	                                 , B.ITEM_ID
	                                 , B.MASTER_ID
	                              FROM TH_MST_PLAN A
	                                 , TH_EXP_PSI_MOM B
	                             WHERE A.MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
	                               AND B.PLAN_ID = #{planId, jdbcType=VARCHAR}
	                               AND B.MASTER_ID = A.MASTER_ID
	                               AND B.PLAN_ID = A.PLAN_ID
	                               AND B.PLAN_DATE BETWEEN A.PLAN_START_DTTM AND A.PLAN_START_DTTM + #{shortagePeriod, jdbcType=VARCHAR}
	                               AND B.SEQ = 9
	                               AND B.QTY > 0
	                             GROUP BY B.MASTER_ID, B.PLAN_ID, B.ITEM_ID )
	                    <if test="pVendorName == null and pVendorName == ''">
	                     WHERE COMPANY_ID IS NOT NULL
	                    </if>
	                    <if test="pVendorName != null and pVendorName != ''">
	                     WHERE COMPANY_ID = #{pVendorName, jdbcType=VARCHAR}
	                    </if>
	                     GROUP BY MASTER_ID, COMPANY_ID
	                     ORDER BY DECODE(NVL(COMPANY_ID,'9999'), '9999', 2, 1), 1 )
	    SELECT A.*
	         , B.CNT CNT
	      FROM (SELECT A.*
	                 , ROWNUM JQGRIDROW
	              FROM TEMP1 A) A
	         , (SELECT COUNT(*) CNT
	              FROM TEMP1) B
   </select>
    -->
   
   <!-- 발주 팝업 내 업체 검색조건 세팅 -->
   <select id="get_vendorSet_list" resultType="camelMap" parameterType="java.util.HashMap">
	   SELECT DISTINCT M.VENDOR_ID AS CODE
	                 , M.VENDOR_ID || '('|| NVL(M.VENDOR_NM, V.VENDOR_NAME) ||')' AS NAME
	          FROM TH_EXP_PSI_MOM_DETAIL M
	             , MOM_VENDOR V
	             , MOM_ITEM_PRICE I
	         WHERE M.MASTER_ID = V.DIVISION_CD(+)
	           AND M.VENDOR_ID = V.VENDOR_CD(+)
	           AND M.MASTER_ID = I.DIVISION_CD(+)
         	   AND M.VENDOR_ID = I.VENDOR_CD(+)
	           AND M.MASTER_ID = #{divisionCd, jdbcType=VARCHAR}
	           AND M.PLAN_ID = #{planId, jdbcType=VARCHAR}
	           AND M.SEQ = 8
	           AND M.ITEM_ID IN (SELECT DISTINCT B.ITEM_ID
				                   FROM TH_EXP_PSI_MOM B
				                  WHERE B.MASTER_ID = M.MASTER_ID
				                    AND B.PLAN_ID = M.PLAN_ID
				                    AND B.SEQ = 9
				                    AND B.PLAN_DATE >= TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
				                    AND B.PLAN_DATE &lt;= TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + #{shortagePeriod, jdbcType=VARCHAR}
				                    AND NVL(B.QTY, 0) > 0)
	          <if test="vendorId != null and vendorId != ''">
	           AND M.VENDOR_ID = #{vendorId, jdbcType=VARCHAR}
	          </if>
               AND NVL(V.USE_YN, 'N') = 'Y'
	           AND NVL(I.USE_YN, 'N') = 'Y'
	           AND I.INOUT_FLAG = 'IN'
	         ORDER BY M.VENDOR_ID
   </select>

   <insert id="create_materialOrderMrp" statementType="CALLABLE">
   {
		  CALL SP_RCCP_PROCESS.SP_RCCP_EXP_PSI ( 
		  	 #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{planId, mode=IN, jdbcType=VARCHAR}
<!--            , #{userId, mode=IN, jdbcType=VARCHAR} -->
           ) 
	}
   </insert>
</mapper>