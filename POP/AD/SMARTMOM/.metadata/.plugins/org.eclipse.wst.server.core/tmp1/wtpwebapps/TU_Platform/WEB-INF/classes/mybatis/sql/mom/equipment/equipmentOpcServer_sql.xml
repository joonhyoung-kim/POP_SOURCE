<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.equipment.equipmentOpcServer">
	 <select id="get_equipmentOpcServer_list" resultType="camelMap" parameterType="java.util.HashMap">
	 
	 SELECT  OPC_ID
		     , DIVISION_CD
		     , COMPANY_CD
		     , OPC_TYPE
		     , OPC_NAME 
		     , PROGRAM_NAME
		     , BATCH_SIZE
			 , MAX_REQUEST_SIZE 
		     , REQUEST_TIME_OUT
		     , QUIRKS_YN
		     , IP_ADDRESS
		     , USE_YN
		     , CREATE_BY
		     , TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
		     , UPDATE_BY
		     , TO_CHAR(UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		  FROM TU_OPC_SERVER
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		  <if test="programName != null and programName != '' ">
		   AND PROGRAM_NAME = #{programName, jdbcType=VARCHAR}
		  </if>
		  <if test="opcType != null and opcType != '' ">		  
		   AND OPC_TYPE = #{opcType, jdbcType=VARCHAR}
		  </if>
		 ORDER BY OPC_ID
	</select>
	
	<insert id="create_equipmentOpcServer" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  		#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
	  		
	  		INSERT INTO TU_OPC_SERVER (
	  			OPC_ID
	  		  , DIVISION_CD
	  		  , COMPANY_CD
	  		  , OPC_TYPE
	  		  , OPC_NAME
	  		  , PROGRAM_NAME
	  		  , BATCH_SIZE
	  		  , MAX_REQUEST_SIZE
	  		  , REQUEST_TIME_OUT
	  		  , QUIRKS_YN
	  		  , IP_ADDRESS
	  		  , USE_YN
	  		  , CREATE_BY
	  		  , CREATE_DATE
	  		  , UPDATE_BY
	  		  , UPDATE_DATE
	  		)
	  		VALUES (
	  			UPPER(TRIM(#{opcId, jdbcType=VARCHAR}))
	  		  , #{divisionCd, jdbcType=VARCHAR}
	  		  , #{companyCd, jdbcType=VARCHAR}
	  		  , #{opcType, jdbcType=VARCHAR}
	  		  , #{opcName, jdbcType=VARCHAR}
	  		  , #{programName, jdbcType=VARCHAR}
	  		  , #{batchSize, jdbcType=NUMERIC}
	  		  , #{maxRequestSize, jdbcType=NUMERIC}
	  		  , #{requestTimeOut, jdbcType=NUMERIC}
	  		  , 'N'
	  		  , #{ipAddress, jdbcType=VARCHAR}
	  		  , 'Y'
	  		  , #{createBy, jdbcType=VARCHAR}
			  , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
 			  , #{updateBy, jdbcType=VARCHAR}
			  , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			)
			;
		INSERT INTO TU_OPC_SERVER_HIST (
			    LAST_EVENT_SEQ
			  , OPC_ID
	  		  , DIVISION_CD
	  		  , COMPANY_CD
	  		  , OPC_TYPE
	  		  , OPC_NAME
	  		  , PROGRAM_NAME
	  		  , BATCH_SIZE
	  		  , MAX_REQUEST_SIZE
	  		  , REQUEST_TIME_OUT
	  		  , QUIRKS_YN
	  		  , IP_ADDRESS
	  		  , USE_YN
	  		  , CREATE_BY
	  		  , CREATE_DATE
	  		  , UPDATE_BY
	  		  , UPDATE_DATE
		)
		SELECT S_ORDER_SEQ.NEXTVAL
			 , OPC_ID
		     , DIVISION_CD
		     , COMPANY_CD
		     , OPC_TYPE
		     , OPC_NAME 
		     , PROGRAM_NAME
		     , BATCH_SIZE
			 , MAX_REQUEST_SIZE 
		     , REQUEST_TIME_OUT
		     , QUIRKS_YN
		     , IP_ADDRESS
		     , USE_YN
		     , CREATE_BY
		     , CREATE_DATE
		     , UPDATE_BY
		     , UPDATE_DATE
		  FROM TU_OPC_SERVER
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		   AND OPC_ID      = UPPER(TRIM(#{opcId, jdbcType=VARCHAR}))
		 ;
		 
		SELECT
			CASE 
				WHEN COUNT(OPC_ID) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM TU_OPC_SERVER
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		  AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		  AND OPC_ID      = UPPER(TRIM(#{opcId, jdbcType=VARCHAR}))
		;
      END
    }
	</insert>
	
	<update id="modify_equipmentOpcServer" statementType="CALLABLE" parameterType="java.util.HashMap">
		{ CALL
		  DECLARE
		  BEGIN
		  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
		  	
			UPDATE 	TU_OPC_SERVER 
			SET     OPC_TYPE         = #{opcType, jdbcType=VARCHAR}
				  , OPC_NAME         = #{opcName, jdbcType=VARCHAR}
				  , PROGRAM_NAME     = #{programName, jdbcType=VARCHAR}
				  , BATCH_SIZE       = #{batchSize, jdbcType=NUMERIC}
				  , MAX_REQUEST_SIZE = #{maxRequestSize, jdbcType=NUMERIC}
				  , REQUEST_TIME_OUT = #{requestTimeOut, jdbcType=NUMERIC}
				  , IP_ADDRESS       = #{ipAddress, jdbcType=VARCHAR}
				  , USE_YN           = NVL(UPPER(TRIM(#{useYn, jdbcType=VARCHAR})), 'Y')
				  , UPDATE_BY        = #{updateBy, jdbcType=VARCHAR}
				  , UPDATE_DATE      = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
  			  AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
  			  AND OPC_ID      = UPPER(TRIM(#{opcId, jdbcType=VARCHAR}))
  			;
  			
  			INSERT INTO TU_OPC_SERVER_HIST (
				LAST_EVENT_SEQ
			  , OPC_ID
	  		  , DIVISION_CD
	  		  , COMPANY_CD
	  		  , OPC_TYPE
	  		  , OPC_NAME
	  		  , PROGRAM_NAME
	  		  , BATCH_SIZE
	  		  , MAX_REQUEST_SIZE
	  		  , REQUEST_TIME_OUT
	  		  , QUIRKS_YN
	  		  , IP_ADDRESS
	  		  , USE_YN
	  		  , CREATE_BY
	  		  , CREATE_DATE
	  		  , UPDATE_BY
	  		  , UPDATE_DATE
  			)
  			SELECT S_ORDER_SEQ.NEXTVAL
  				, OPC_ID
	  		  	, DIVISION_CD
	  		 	, COMPANY_CD
	  		  	, OPC_TYPE
	  		  	, OPC_NAME
	  		  	, PROGRAM_NAME
	  		  	, BATCH_SIZE
	  		  	, MAX_REQUEST_SIZE
	  		    , REQUEST_TIME_OUT
	  		    , QUIRKS_YN
	  		    , IP_ADDRESS
	  		    , USE_YN
	  		    , CREATE_BY
	  		    , CREATE_DATE
	  		    , UPDATE_BY
	  		    , UPDATE_DATE 
	  		FROM TU_OPC_SERVER
			WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	  		  AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	  		  AND OPC_ID      = UPPER(TRIM(#{opcId, jdbcType=VARCHAR}))
	  	;
	  	
	  		SELECT
				CASE 
					WHEN COUNT(OPC_ID) = 0 THEN 'E'
					ELSE 'S' 
				END  
				INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
			FROM TU_OPC_SERVER
			WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			  AND COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
			  AND OPC_ID      = UPPER(TRIM(#{opcId, jdbcType=VARCHAR}))
			;
		END
		}
	</update>
	 	
</mapper>