<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.equipment.emRelease">
	<select id="get_emReleaseUp_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT EW.EQM_WO_ID
	         , EW.EQM_WO_NAME
	         , EW.EQM_TYPE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (EW.DIVISION_CD
	                                                  , EW.COMPANY_CD
	                                                  , 'EQ_WO_TYPE'
	                                                  , EW.EQM_TYPE)
	              FROM DUAL) AS EQM_TYPE_NAME
	         , EW.STATUS
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (EW.DIVISION_CD
	                                                  , EW.COMPANY_CD
	                                                  , 'EQM_WORK_ORDER_STATUS'
	                                                  , EW.STATUS)
	              FROM DUAL) AS STATUS_NAME
	         , EW.EQUIPMENT_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_EQUIPMENT_NAME (EW.DIVISION_CD
	                                                       , EW.COMPANY_CD
	                                                       , EW.EQUIPMENT_CD)
	              FROM DUAL) AS EQUIPMENT_NAME
	         , EW.EQM_QTY
	         , EW.CANCEL_QTY
	         , TO_CHAR (EW.PLAN_START_DATE, 'yyyy-mm-dd') AS PLAN_START_DATE
	         , EW.DESCRIPTION
	         , EW.REASON_CODE
	      FROM MOM_EQM_WORK_ORDER EW
	     WHERE EW.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND EW.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	       AND EW.STATUS != 'C'
	       AND EW.PLAN_START_DATE BETWEEN TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd')
	                                  AND TO_DATE (#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') + 23.9997 / 24
	      <if test="equipmentCd != '' and equipmentCd != null">
	       AND EW.EQUIPMENT_CD = #{equipmentCd, jdbcType=VARCHAR}
	      </if>
	      <if test="status != '' and status != null">
	       AND EW.STATUS = #{status, jdbcType=VARCHAR}
	      </if>
	      <if test="eqmType != '' and eqmType != null">
	       AND EW.EQM_TYPE = #{eqmType, jdbcType=VARCHAR}
	      </if>
	      <if test="eqmWoId != '' and eqmWoId != null">
	       AND (EW.EQM_WO_ID LIKE '%' || TRIM(UPPER(#{eqmWoId, jdbcType=VARCHAR})) || '%'
	            OR UPPER(EW.EQM_WO_NAME) LIKE '%' || TRIM(UPPER(#{eqmWoId, jdbcType=VARCHAR})) || '%')
	      </if>
	     ORDER BY EW.PLAN_START_DATE, EW.EQM_WO_ID
	</select>
	
	<select id="get_emReleaseDown_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT EI.EQM_WO_ID
	         , EI.ITEM_ID
	         , MI.ITEM_NAME
	         , MI.SPECIFICATION
	         , MI.UNIT
	         , EI.REQUEST_STATE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (EI.DIVISION_CD
	                                                  , EI.COMPANY_CD
	                                                  , 'EQM_REQ_STATE'
	                                                  , EI.REQUEST_STATE)
	              FROM DUAL) AS REQUEST_STATE_NAME
	         , EI.IN_LOCATION_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (EI.DIVISION_CD
	                                                      , EI.COMPANY_CD
	                                                      , EI.IN_LOCATION_CD)
	              FROM DUAL) AS IN_LOCATION_NAME
	         , EI.OUT_LOCATION_CD
	         , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (EI.DIVISION_CD
	                                                      , EI.COMPANY_CD
	                                                      , EI.OUT_LOCATION_CD)
	              FROM DUAL) AS OUT_LOCATION_CD_NAME
	         , TO_CHAR (EI.REQUEST_DATE, 'YYYY-MM-DD') AS REQUEST_DATE
	         , (SELECT MOM_COMMON_PKG.FN_GET_CURRENT_STOCK (EI.DIVISION_CD
	                                                      , EI.COMPANY_CD
	                                                      , EI.ITEM_ID
	                                                      , EI.OUT_LOCATION_CD)
	              FROM DUAL) AS CURRENT_QTY
	         , NVL (MI.STANDARD_OUT_QTY, 0) AS STANDARD_OUT_QTY
	         , EI.REQUEST_QTY
	         , EI.REQUEST_QTY AS AFTER_REQ_QTY
	         , NVL (EI.ISSUE_QTY, 0) AS ISSUE_QTY
	         , NVL (EI.CANCEL_QTY, 0) AS CANCEL_QTY
	         , EI.REQUEST_QTY - NVL (EI.ISSUE_QTY, 0) - NVL (EI.CANCEL_QTY, 0) AS REMAIN_QTY
	         , EI.UNIT_QTY
	         , EI.DESCRIPTION
	         , EI.ISSUE_REQUEST_ID
	         , EI.REQUEST_GROUP_ID
	      FROM MOM_EQM_ISSUE_REQUEST EI, MOM_ITEM_DEFINITION MI
	     WHERE EI.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND EI.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	       AND REQUEST_STATE IN (SELECT CODE_ID
			                       FROM MOM_CODE
				                  WHERE DIVISION_CD = EI.DIVISION_CD
				                    AND COMPANY_CD = EI.COMPANY_CD
				                    AND CODE_CLASS_ID = 'EQM_REQ_STATE'
				                    AND USE_YN = 'Y'
				                    AND ATTRIBUTE2 = 'Y')
	       AND EI.DIVISION_CD = MI.DIVISION_CD
	       AND EI.COMPANY_CD = MI.COMPANY_CD
	       AND EI.ITEM_ID = MI.ITEM_ID
	       AND MI.USE_YN = 'Y'
	       AND EI.EQM_WO_ID = #{eqmWoId, jdbcType=VARCHAR}
	     ORDER BY EI.ISSUE_REQUEST_ID
	</select>
	
	<insert id="create_emRelease" statementType="CALLABLE">
	{
        CALL SP_MOM_EQUIPMENT_PKG.P_UPSERT_EQM_ISSUE_REQUEST (
        	#{p_err_code, mode=OUT, jdbcType=VARCHAR}
          , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
          , #{divisionCd, mode=IN, jdbcType=VARCHAR}
          , #{companyCd, mode=IN, jdbcType=VARCHAR}
          , #{eqmWoId, mode=IN, jdbcType=VARCHAR}
          , #{itemId, mode=IN, jdbcType=VARCHAR}
          , #{inLocationCd, mode=IN, jdbcType=VARCHAR}
          , #{outLocationCd, mode=IN, jdbcType=VARCHAR}
          , TO_DATE(#{requestDate, mode=IN, jdbcType=VARCHAR}, 'YYYY-MM-DD')
          , #{afterReqQty, mode=IN, jdbcType=NUMERIC}
          , #{unitQty, mode=IN, jdbcType=NUMERIC}
          , #{description, mode=IN, jdbcType=VARCHAR}
          , #{updateBy, mode=IN, jdbcType=VARCHAR}
          , #{groupId, mode=IN, jdbcType=VARCHAR}
          , #{transactionSeq, mode=IN, jdbcType=NUMERIC}
        )
    }
	</insert>
	
	<delete id="remove_emReleaseDown" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL
	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
		
	   INSERT INTO MOM_EQM_ISSUE_REQUEST_HIST (
			  LAST_EVENT_SEQ
			, DIVISION_CD
			, COMPANY_CD
			, EQM_WO_ID
			, ITEM_ID
			, REQUEST_QTY
			, REQUEST_DATE
			, ISSUE_QTY
			, CANCEL_QTY
			, IN_LOCATION_CD
			, OUT_LOCATION_CD
			, REQUEST_TYPE
			, DESCRIPTION
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY
			, TID
			, ISSUE_REQUEST_ID
			, REQUEST_GROUP_ID
			, UNIT_QTY
			, REQUEST_STATE
			, ISSUE_DATE
		)
		SELECT S_ORDER_SEQ.NEXTVAL
			 , DIVISION_CD
			 , COMPANY_CD
			 , EQM_WO_ID
			 , ITEM_ID
			 , REQUEST_QTY
			 ,  REQUEST_DATE
			 , ISSUE_QTY
			 , CANCEL_QTY
			 , IN_LOCATION_CD
			 , OUT_LOCATION_CD
			 , REQUEST_TYPE
			 , 'Delete Data'
			 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , #{userId, jdbcType=VARCHAR}
             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
             , #{userId, jdbcType=VARCHAR}
			 , TID
			 , ISSUE_REQUEST_ID
			 , REQUEST_GROUP_ID
			 , UNIT_QTY
			 , REQUEST_STATE
			 , ISSUE_DATE
		FROM   MOM_EQM_ISSUE_REQUEST
		WHERE  DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    EQM_WO_ID = #{eqmWoId, jdbcType=VARCHAR}
	    AND    ITEM_ID = #{itemId, jdbcType=VARCHAR}
        ;
		
		DELETE MOM_EQM_ISSUE_REQUEST
		WHERE  DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    EQM_WO_ID = #{eqmWoId, jdbcType=VARCHAR}
	    AND    ITEM_ID = #{itemId, jdbcType=VARCHAR}
        ;
		
		SELECT
			CASE 
				WHEN COUNT(*) = 0 THEN 'S'
				ELSE 'E' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_EQM_ISSUE_REQUEST
		WHERE  DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND    COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    EQM_WO_ID = #{eqmWoId, jdbcType=VARCHAR}
	    AND    ITEM_ID = #{itemId, jdbcType=VARCHAR}
		;
	END
	}
	</delete>
	
</mapper>