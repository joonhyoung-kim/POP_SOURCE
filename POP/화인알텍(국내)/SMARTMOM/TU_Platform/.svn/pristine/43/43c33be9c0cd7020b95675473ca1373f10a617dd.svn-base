<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.eis.resourceUtilizationRate">
	<select id="get_resourceUtilizationRate_list" resultType="camelMap" parameterType="java.util.HashMap">
		<if test="isResourceGroup == null or isResourceGroup == ''"> 
		<!-- 설비별 -->
		SELECT D.PLACE_CD
		     , MAX(D.PLACE_NAME) AS PLACE_NAME
		     , MAX(D.PLACE_SEQ) AS PLACE_SEQ
		     , D.RESOURCE_GROUP_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_RESOURCE_GROUP_NAME ( #{divisionCd, jdbcType=VARCHAR}
		                                                         , #{companyCd, jdbcType=VARCHAR}
		                                                         , D.RESOURCE_GROUP_CD) 
		          FROM DUAL) AS RESOURCE_GROUP_NAME
        
		     , D.RESOURCE_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_RESOURCE_NAME ( #{divisionCd, jdbcType=VARCHAR}
                                                           , #{companyCd, jdbcType=VARCHAR}
                                                           , D.RESOURCE_CD) 
                  FROM DUAL) AS RESOURCE_NAME
		     , D.DATA_TYPE
		     , MAX(D.DATA_NAME) AS DATA_NAME
		     , MAX(D.DATA_TYPE_SEQ) AS DATA_TYPE_SEQ
		     ${pivot1}
		     ${pivot2}
		     ${pivot3}
		  FROM (SELECT A.PLACE_CD
		             , P.CODE_NAME  AS PLACE_NAME
		             , P.UI_SEQUENCE  AS PLACE_SEQ
		             , A.RESOURCE_GROUP_CD
		             , A.RESOURCE_CD
		             , A.DATA_TYPE
		             , MC.CODE_NAME  AS DATA_NAME
		             , MC.UI_SEQUENCE AS DATA_TYPE_SEQ
		             , MC.CODE_VALUES
		             , DECODE (SEQ, 1, TRUNC(A.DAY_DATA,1), 0) AS D1
		             , DECODE (SEQ, 2, TRUNC(A.DAY_DATA,1), 0) AS D2
		             , DECODE (SEQ, 3, TRUNC(A.DAY_DATA,1), 0) AS D3
		             , DECODE (SEQ, 4, TRUNC(A.DAY_DATA,1), 0) AS D4
		             , DECODE (SEQ, 5, TRUNC(A.DAY_DATA,1), 0) AS D5
		             , DECODE (SEQ, 6, TRUNC(A.DAY_DATA,1), 0) AS D6
		             , DECODE (SEQ, 7, TRUNC(A.DAY_DATA,1), 0) AS D7
		             , 0 AS W1
		             , 0 AS W2
		             , 0 AS W3
		             , 0 AS W4
		             , 0 AS W5
		             , 0 AS M1
		             , 0 AS M2
		             , 0 AS M3
		         FROM  MOM_EIS_RESOURCE_EFF A
		             , MOM_CODE MC
		             , MOM_CODE P
		        WHERE A.DIVISION_CD = MC.DIVISION_CD 
		          AND A.COMPANY_CD = MC.COMPANY_CD
		          AND A.DATA_TYPE = MC.CODE_ID
		          AND MC.CODE_CLASS_ID = 'TOTAL_RESOURCE_EFF'
		          AND MC.USE_YN = 'Y'   
		          AND A.DIVISION_CD = P.DIVISION_CD
		          AND A.COMPANY_CD = P.COMPANY_CD
		          AND A.PLACE_CD = P.CODE_ID
		          AND P.CODE_CLASS_ID = 'EQM_LOCATION'
		          AND P.USE_YN = 'Y' 
		          AND A.W_START_DATE = (SELECT TO_CHAR (WEEKSTART_DATE, 'yyyymmdd')
			                              FROM TH_MST_TIME
			                             WHERE DATE_ID = TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'))
			      AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
			      AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	              <if test="placeCd != null and placeCd != ''">
	              AND A.PLACE_CD = #{placeCd, jdbcType=VARCHAR}
	              </if>
	              <if test="resourceGroupCd != null and resourceGroupCd != ''">
	              AND A.RESOURCE_GROUP_CD = #{resourceGroupCd, jdbcType=VARCHAR}
	              </if>
	              <if test="resourceCd != null and resourceCd != ''">
	              AND A.RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
	              </if>
		       UNION ALL
		       SELECT A.PLACE_CD
		            , P.CODE_NAME  AS PLACE_NAME
		            , P.UI_SEQUENCE  AS PLACE_SEQ
		            , A.RESOURCE_GROUP_CD
		            , A.RESOURCE_CD
		            , A.DATA_TYPE
		            , MC.CODE_NAME  AS DATA_NAME
		            , MC.UI_SEQUENCE AS DATA_TYPE_SEQ
		            , MC.CODE_VALUES
		            , 0 AS D1
		            , 0 AS D2
		            , 0 AS D3
		            , 0 AS D4
		            , 0 AS D5
		            , 0 AS D6
		            , 0 AS D7
		            , DECODE (B.W_SEQ, 1, TRUNC(A.WEEK_DATA,1), 0) AS W1
		            , DECODE (B.W_SEQ, 2, TRUNC(A.WEEK_DATA,1), 0) AS W2
		            , DECODE (B.W_SEQ, 3, TRUNC(A.WEEK_DATA,1), 0) AS W3
		            , DECODE (B.W_SEQ, 4, TRUNC(A.WEEK_DATA,1), 0) AS W4
		            , DECODE (B.W_SEQ, 5, TRUNC(A.WEEK_DATA,1), 0) AS W5
		            , 0 AS M1
		            , 0 AS M2
		            , 0 AS M3
		        FROM  MOM_EIS_RESOURCE_EFF A
		            , ( SELECT WEEKSTART_DATE, DENSE_RANK () OVER (ORDER BY WEEKSTART_DATE) AS W_SEQ
		                FROM TH_MST_TIME
		                WHERE WEEKSTART_DATE BETWEEN TO_DATE (SUBSTR (#{fromDate, jdbcType=VARCHAR}, 0, 6), 'yyyymm') 
		                                         AND TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'yyyymmdd')
		                GROUP BY WEEKSTART_DATE) B
		            , MOM_CODE MC
		            , MOM_CODE P
		       WHERE A.DIVISION_CD = MC.DIVISION_CD 
		         AND A.COMPANY_CD = MC.COMPANY_CD
		         AND A.DATA_TYPE = MC.CODE_ID
		         AND MC.CODE_CLASS_ID = 'TOTAL_RESOURCE_EFF'
		         AND MC.USE_YN = 'Y'   
		         AND A.DIVISION_CD = P.DIVISION_CD
		         AND A.COMPANY_CD = P.COMPANY_CD
		         AND A.PLACE_CD = P.CODE_ID
		         AND P.CODE_CLASS_ID = 'EQM_LOCATION'
		         AND P.USE_YN = 'Y'   
		         AND A.W_START_DATE = TO_CHAR (B.WEEKSTART_DATE, 'yyyymmdd') 
		         AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
		         AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR} 
                  <if test="placeCd != null and placeCd != ''">
                  AND A.PLACE_CD = #{placeCd, jdbcType=VARCHAR}
                  </if>
                  <if test="resourceGroupCd != null and resourceGroupCd != ''">
                  AND A.RESOURCE_GROUP_CD = #{resourceGroupCd, jdbcType=VARCHAR}
                  </if>
                  <if test="resourceCd != null and resourceCd != ''">
                  AND A.RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
                  </if>
		       UNION ALL       
		       SELECT A.PLACE_CD
		            , P.CODE_NAME  AS PLACE_NAME
		            , P.UI_SEQUENCE  AS PLACE_SEQ
		            , A.RESOURCE_GROUP_CD
		            , A.RESOURCE_CD
		            , A.DATA_TYPE
		            , MC.CODE_NAME  AS DATA_NAME
		            , MC.UI_SEQUENCE AS DATA_TYPE_SEQ
		            , MC.CODE_VALUES
		            , 0 AS D1
		            , 0 AS D2
		            , 0 AS D3
		            , 0 AS D4
		            , 0 AS D5
		            , 0 AS D6
		            , 0 AS D7
		            , 0 AS W1
		            , 0 AS W2
		            , 0 AS W3
		            , 0 AS W4
		            , 0 AS W5
		            , DECODE (B.M_SEQ, 1, TRUNC(A.MONTH_DATA,1), 0) AS M1
		            , DECODE (B.M_SEQ, 2, TRUNC(A.MONTH_DATA,1), 0) AS M2
		            , DECODE (B.M_SEQ, 3, TRUNC(A.MONTH_DATA,1), 0) AS M3
		        FROM  MOM_EIS_RESOURCE_EFF A
		            , ( SELECT YEAR || MONTH AS YYYYMM, DENSE_RANK () OVER (ORDER BY YEAR || MONTH) AS M_SEQ, MAX (DATE_ID) AS DATE_ID
		                FROM TH_MST_TIME
		                WHERE DATE_ID BETWEEN ADD_MONTHS (TO_DATE (SUBSTR (#{fromDate, jdbcType=VARCHAR}, 0, 6), 'yyyymm'), -2) 
		                                  AND TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'yyyymmdd')
		                GROUP BY YEAR, MONTH) B
		            , MOM_CODE MC
		            , MOM_CODE P
		       WHERE A.DIVISION_CD = MC.DIVISION_CD 
		         AND A.COMPANY_CD = MC.COMPANY_CD
		         AND A.DATA_TYPE = MC.CODE_ID
		         AND MC.CODE_CLASS_ID = 'TOTAL_RESOURCE_EFF'
		         AND MC.USE_YN = 'Y'   
		         AND A.DIVISION_CD = P.DIVISION_CD
		         AND A.COMPANY_CD = P.COMPANY_CD
		         AND A.PLACE_CD = P.CODE_ID
		         AND P.CODE_CLASS_ID = 'EQM_LOCATION'
		         AND P.USE_YN = 'Y'      
		         AND A.YYYYMM = B.YYYYMM 
		         AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
		         AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR} 
                  <if test="placeCd != null and placeCd != ''">
                  AND A.PLACE_CD = #{placeCd, jdbcType=VARCHAR}
                  </if>
                  <if test="resourceGroupCd != null and resourceGroupCd != ''">
                  AND A.RESOURCE_GROUP_CD = #{resourceGroupCd, jdbcType=VARCHAR}
                  </if>
                  <if test="resourceCd != null and resourceCd != ''">
                  AND A.RESOURCE_CD = #{resourceCd, jdbcType=VARCHAR}
                  </if>
		      ) D
		 GROUP BY D.PLACE_CD, D.RESOURCE_GROUP_CD, D.RESOURCE_CD, D.DATA_TYPE
         ORDER BY PLACE_SEQ, D.RESOURCE_GROUP_CD, D.RESOURCE_CD, DATA_TYPE_SEQ
		</if>
		<if test="isResourceGroup != null and isResourceGroup != ''">
        <!-- 설비그룹별 -->
        SELECT D.PLACE_CD
             , MAX(D.PLACE_NAME) AS PLACE_NAME
             , MAX(D.PLACE_SEQ) AS PLACE_SEQ
             , D.RESOURCE_GROUP_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_RESOURCE_GROUP_NAME ( #{divisionCd, jdbcType=VARCHAR}
                                                                 , #{companyCd, jdbcType=VARCHAR}
                                                                 , D.RESOURCE_GROUP_CD) 
                  FROM DUAL) AS RESOURCE_GROUP_NAME
        
             , D.DATA_TYPE
             , MAX(D.DATA_NAME) AS DATA_NAME
             , MAX(D.DATA_TYPE_SEQ) AS DATA_TYPE_SEQ
             ${pivot1}
             ${pivot2}
             ${pivot3}
          FROM (SELECT A.PLACE_CD
                     , P.CODE_NAME  AS PLACE_NAME
                     , P.UI_SEQUENCE  AS PLACE_SEQ
                     , A.RESOURCE_GROUP_CD
                     , A.DATA_TYPE
                     , MC.CODE_NAME  AS DATA_NAME
                     , MC.UI_SEQUENCE AS DATA_TYPE_SEQ
                     , MC.CODE_VALUES
                     , DECODE (SEQ, 1, TRUNC(A.DAY_DATA,1), 0) AS D1
                     , DECODE (SEQ, 2, TRUNC(A.DAY_DATA,1), 0) AS D2
                     , DECODE (SEQ, 3, TRUNC(A.DAY_DATA,1), 0) AS D3
                     , DECODE (SEQ, 4, TRUNC(A.DAY_DATA,1), 0) AS D4
                     , DECODE (SEQ, 5, TRUNC(A.DAY_DATA,1), 0) AS D5
                     , DECODE (SEQ, 6, TRUNC(A.DAY_DATA,1), 0) AS D6
                     , DECODE (SEQ, 7, TRUNC(A.DAY_DATA,1), 0) AS D7
                     , 0 AS W1
                     , 0 AS W2
                     , 0 AS W3
                     , 0 AS W4
                     , 0 AS W5
                     , 0 AS M1
                     , 0 AS M2
                     , 0 AS M3
                 FROM  MOM_EIS_RESOURCE_GROUP_EFF A
                     , MOM_CODE MC
                     , MOM_CODE P
                WHERE A.DIVISION_CD = MC.DIVISION_CD 
                  AND A.COMPANY_CD = MC.COMPANY_CD
                  AND A.DATA_TYPE = MC.CODE_ID
                  AND MC.CODE_CLASS_ID = 'TOTAL_RESOURCE_EFF'
                  AND MC.USE_YN = 'Y'   
                  AND A.DIVISION_CD = P.DIVISION_CD
                  AND A.COMPANY_CD = P.COMPANY_CD
                  AND A.PLACE_CD = P.CODE_ID
                  AND P.CODE_CLASS_ID = 'EQM_LOCATION'
                  AND P.USE_YN = 'Y' 
                  AND A.W_START_DATE = (SELECT TO_CHAR (WEEKSTART_DATE, 'yyyymmdd')
                                          FROM TH_MST_TIME
                                         WHERE DATE_ID = TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD'))
                  AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
                  AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
                  <if test="placeCd != null and placeCd != ''">
                  AND A.PLACE_CD = #{placeCd, jdbcType=VARCHAR}
                  </if>
                  <if test="resourceGroupCd != null and resourceGroupCd != ''">
                  AND A.RESOURCE_GROUP_CD = #{resourceGroupCd, jdbcType=VARCHAR}
                  </if>
               UNION ALL
               SELECT A.PLACE_CD
                    , P.CODE_NAME  AS PLACE_NAME
                    , P.UI_SEQUENCE  AS PLACE_SEQ
                    , A.RESOURCE_GROUP_CD
                    , A.DATA_TYPE
                    , MC.CODE_NAME  AS DATA_NAME
                    , MC.UI_SEQUENCE AS DATA_TYPE_SEQ
                    , MC.CODE_VALUES
                    , 0 AS D1
                    , 0 AS D2
                    , 0 AS D3
                    , 0 AS D4
                    , 0 AS D5
                    , 0 AS D6
                    , 0 AS D7
                    , DECODE (B.W_SEQ, 1, TRUNC(A.WEEK_DATA,1), 0) AS W1
                    , DECODE (B.W_SEQ, 2, TRUNC(A.WEEK_DATA,1), 0) AS W2
                    , DECODE (B.W_SEQ, 3, TRUNC(A.WEEK_DATA,1), 0) AS W3
                    , DECODE (B.W_SEQ, 4, TRUNC(A.WEEK_DATA,1), 0) AS W4
                    , DECODE (B.W_SEQ, 5, TRUNC(A.WEEK_DATA,1), 0) AS W5
                    , 0 AS M1
                    , 0 AS M2
                    , 0 AS M3
                FROM  MOM_EIS_RESOURCE_GROUP_EFF A
                    , ( SELECT WEEKSTART_DATE, DENSE_RANK () OVER (ORDER BY WEEKSTART_DATE) AS W_SEQ
                        FROM TH_MST_TIME
                        WHERE WEEKSTART_DATE BETWEEN TO_DATE (SUBSTR (#{fromDate, jdbcType=VARCHAR}, 0, 6), 'yyyymm') 
                                                 AND TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'yyyymmdd')
                        GROUP BY WEEKSTART_DATE) B
                    , MOM_CODE MC
                    , MOM_CODE P
               WHERE A.DIVISION_CD = MC.DIVISION_CD 
                 AND A.COMPANY_CD = MC.COMPANY_CD
                 AND A.DATA_TYPE = MC.CODE_ID
                 AND MC.CODE_CLASS_ID = 'TOTAL_RESOURCE_EFF'
                 AND MC.USE_YN = 'Y'   
                 AND A.DIVISION_CD = P.DIVISION_CD
                 AND A.COMPANY_CD = P.COMPANY_CD
                 AND A.PLACE_CD = P.CODE_ID
                 AND P.CODE_CLASS_ID = 'EQM_LOCATION'
                 AND P.USE_YN = 'Y'   
                 AND A.W_START_DATE = TO_CHAR (B.WEEKSTART_DATE, 'yyyymmdd') 
                 AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
                 AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR} 
                  <if test="placeCd != null and placeCd != ''">
                  AND A.PLACE_CD = #{placeCd, jdbcType=VARCHAR}
                  </if>
                  <if test="resourceGroupCd != null and resourceGroupCd != ''">
                  AND A.RESOURCE_GROUP_CD = #{resourceGroupCd, jdbcType=VARCHAR}
                  </if>
               UNION ALL       
               SELECT A.PLACE_CD
                    , P.CODE_NAME  AS PLACE_NAME
                    , P.UI_SEQUENCE  AS PLACE_SEQ
                    , A.RESOURCE_GROUP_CD
                    , A.DATA_TYPE
                    , MC.CODE_NAME  AS DATA_NAME
                    , MC.UI_SEQUENCE AS DATA_TYPE_SEQ
                    , MC.CODE_VALUES
                    , 0 AS D1
                    , 0 AS D2
                    , 0 AS D3
                    , 0 AS D4
                    , 0 AS D5
                    , 0 AS D6
                    , 0 AS D7
                    , 0 AS W1
                    , 0 AS W2
                    , 0 AS W3
                    , 0 AS W4
                    , 0 AS W5
                    , DECODE (B.M_SEQ, 1, TRUNC(A.MONTH_DATA,1), 0) AS M1
                    , DECODE (B.M_SEQ, 2, TRUNC(A.MONTH_DATA,1), 0) AS M2
                    , DECODE (B.M_SEQ, 3, TRUNC(A.MONTH_DATA,1), 0) AS M3
                FROM  MOM_EIS_RESOURCE_GROUP_EFF A
                    , ( SELECT YEAR || MONTH AS YYYYMM, DENSE_RANK () OVER (ORDER BY YEAR || MONTH) AS M_SEQ, MAX (DATE_ID) AS DATE_ID
                        FROM TH_MST_TIME
                        WHERE DATE_ID BETWEEN ADD_MONTHS (TO_DATE (SUBSTR (#{fromDate, jdbcType=VARCHAR}, 0, 6), 'yyyymm'), -2) 
                                          AND TO_DATE (#{fromDate, jdbcType=VARCHAR}, 'yyyymmdd')
                        GROUP BY YEAR, MONTH) B
                    , MOM_CODE MC
                    , MOM_CODE P
               WHERE A.DIVISION_CD = MC.DIVISION_CD 
                 AND A.COMPANY_CD = MC.COMPANY_CD
                 AND A.DATA_TYPE = MC.CODE_ID
                 AND MC.CODE_CLASS_ID = 'TOTAL_RESOURCE_EFF'
                 AND MC.USE_YN = 'Y'   
                 AND A.DIVISION_CD = P.DIVISION_CD
                 AND A.COMPANY_CD = P.COMPANY_CD
                 AND A.PLACE_CD = P.CODE_ID
                 AND P.CODE_CLASS_ID = 'EQM_LOCATION'
                 AND P.USE_YN = 'Y'      
                 AND A.YYYYMM = B.YYYYMM 
                 AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
                 AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR} 
                  <if test="placeCd != null and placeCd != ''">
                  AND A.PLACE_CD = #{placeCd, jdbcType=VARCHAR}
                  </if>
                  <if test="resourceGroupCd != null and resourceGroupCd != ''">
                  AND A.RESOURCE_GROUP_CD = #{resourceGroupCd, jdbcType=VARCHAR}
                  </if>
              ) D
         GROUP BY D.PLACE_CD, D.RESOURCE_GROUP_CD, D.DATA_TYPE
         ORDER BY PLACE_SEQ, D.RESOURCE_GROUP_CD, DATA_TYPE_SEQ
         </if>
	</select>
	
	<select id="get_resourceGroup_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT RESOURCE_GROUP_CD
             , RESOURCE_GROUP_NAME
             , DESCRIPTION
	      FROM MOM_RESOURCE_GROUP
	     WHERE DIVISION_CD = #{divisionCd,jdbcType=VARCHAR}
	       AND COMPANY_CD  = #{companyCd,jdbcType=VARCHAR}
	       AND USE_YN = 'Y'
	     ORDER BY RESOURCE_GROUP_NAME
	</select>
	
	<select id="get_resource_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT PLACE_CD
		     , RESOURCE_GROUP_CD
		     , TARGET_DATA
		     , DESCRIPTION
		     , TO_CHAR(UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE
		     , UPDATE_BY
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME( DIVISION_CD
	                                                  , COMPANY_CD  
	                                                  , UPDATE_BY)
	              FROM DUAL) AS UPDATE_BY_NAME 
		  FROM MOM_EIS_RESOURCE_TAR
		 WHERE DIVISION_CD = #{divisionCd,jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd,jdbcType=VARCHAR}
		   AND RESOURCE_GROUP_CD = #{resourceGroupCd,jdbcType=VARCHAR}
	</select>
	
	<insert id="create_resource" parameterType="java.util.HashMap">
		INSERT INTO MOM_EIS_RESOURCE_TAR
		(      DIVISION_CD
			 , COMPANY_CD
			 , PLACE_CD
			 , RESOURCE_GROUP_CD
			 , TARGET_DATA
			 , DESCRIPTION
			 , CREATE_DATE
			 , CREATE_BY
			 , UPDATE_DATE
			 , UPDATE_BY
		 )
	  VALUES( #{divisionCd, jdbcType=VARCHAR}
			, #{companyCd, jdbcType=VARCHAR}
			, #{placeCd, jdbcType=VARCHAR}
			, #{resourceGroupCd, jdbcType=VARCHAR}
			, #{targetData, jdbcType=INTEGER}
			, #{description, jdbcType=VARCHAR}
			, MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			, #{userId, jdbcType=VARCHAR}
			, MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			, #{userId, jdbcType=VARCHAR}
		 )
	</insert>
	
	<update id="modify_resource" parameterType="java.util.HashMap">
		UPDATE MOM_EIS_RESOURCE_TAR
		   SET TARGET_DATA = #{targetData, jdbcType=VARCHAR}
		     , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
		     , UPDATE_BY = #{userId, jdbcType=VARCHAR}
		 WHERE DIVISION_CD = #{divisionCd,jdbcType=VARCHAR}
		   AND COMPANY_CD = #{companyCd,jdbcType=VARCHAR}
		   AND PLACE_CD = #{placeCd,jdbcType=VARCHAR}
		   AND RESOURCE_GROUP_CD = #{resourceGroupCd,jdbcType=VARCHAR}
	</update>
	
	<delete id="remove_resource" parameterType="java.util.HashMap">
	DELETE FROM MOM_EIS_RESOURCE_TAR
     WHERE DIVISION_CD = #{divisionCd,jdbcType=VARCHAR}
	  AND COMPANY_CD = #{companyCd,jdbcType=VARCHAR}
	  AND PLACE_CD = #{placeCd,jdbcType=VARCHAR}
	  AND RESOURCE_GROUP_CD = #{resourceGroupCd,jdbcType=VARCHAR}
	</delete>
</mapper>