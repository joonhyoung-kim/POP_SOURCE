<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.purchase.materialLedger.materialMoveCancel">
	<select id="get_materialMoveCancel_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MI.ITEM_STOCK_INOUT_ID   
		     , MI.ITEM_ID               
		     , MD.ITEM_NAME             
		     , MD.SPECIFICATION         
		     , MD.ITEM_TYPE             
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MD.DIVISION_CD
		     										 , MD.COMPANY_CD
		     										 , 'ITEM_TYPE'
		     										 , MD.ITEM_TYPE)
		          FROM   DUAL )        AS ITEM_TYPE_NAME
		     , MD.UNIT                 
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MD.DIVISION_CD
		     										 , MD.COMPANY_CD
		     										 , 'ITEM_UNIT'
		     										 , MD.UNIT)
		          FROM   DUAL )        AS UNIT_NAME     
		     , MI.PREV_STOCK_INOUT_ID
		     , TO_CHAR(MI.IO_TIME, 'YYYY-MM-DD')  AS IO_TIME          
		     , MI.PREV_LOCATION_CD   AS FROM_LOCATION_CD    
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MI.DIVISION_CD
		     											 , MI.COMPANY_CD
		     											 , MI.PREV_LOCATION_CD)
		          FROM   DUAL )        AS FROM_LOCATION_NAME
		     , MI.LOCATION_CD        AS TO_LOCATION_CD                   
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MI.DIVISION_CD
		     											 , MI.COMPANY_CD
		     											 , MI.LOCATION_CD)
		          FROM   DUAL )        AS TO_LOCATION_NAME
		     , (SELECT MOM_COMMON_PKG.FN_GET_CURRENT_STOCK(MI.DIVISION_CD
		     											 , MI.COMPANY_CD
		     											 , MI.ITEM_ID
		     											 , MI.LOCATION_CD)
		          FROM   DUAL )        AS CURRENT_QTY   
		     , MI.QTY                                 
		     , (SELECT MOM_COMMON_PKG.FN_GET_INOUT_CANCEL_QTY( MI.DIVISION_CD
		     												 , MI.COMPANY_CD
		     												 , MI.IO_TYPE
		     												 , MI.IO_CATEGORY
		     												 , MI.PREV_STOCK_INOUT_ID)
		          FROM   DUAL)                 AS CANCEL_QTY
		     , MI.CURRENCY_CD                              
		      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD
		      										  , MI.COMPANY_CD
		      										  , 'CURRENCY_CD'
		      										  , MI.CURRENCY_CD)
		           FROM   DUAL )        AS CURRENCY_NAME
		     , MI.MARKET_CD                                
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD
		     										 , MI.COMPANY_CD
		     										 , 'MARKET_CD'
		     										 , MI.MARKET_CD)
		          FROM   DUAL )        AS MARKET_NAME
		     , MI.IO_TYPE                                                
		     , MI.IO_CATEGORY                                      
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.DIVISION_CD
		     										 , MI.COMPANY_CD
		     										 , 'IO_CATEGORY'
		     										 , MI.IO_CATEGORY)
		          FROM   DUAL )        AS IO_CATEGORY_NAME
		     , MI.DESCRIPTION
		     , MR.WORK_ORDER_ID
     		 , MR.MATERIAL_REQUEST_ID
		FROM   MOM_ITEM_STOCK_INOUT MI
		     , MOM_ITEM_DEFINITION MD
		     , MOM_MATERIAL_REQUEST MR
		WHERE  MI.DIVISION_CD = MD.DIVISION_CD
		AND    MI.COMPANY_CD  = MD.COMPANY_CD
		AND    MI.ITEM_ID     = MD.ITEM_ID
		AND    MI.DIVISION_CD = MR.DIVISION_CD
        AND    MI.COMPANY_CD = MR.COMPANY_CD
        AND    MI.WORK_ORDER_ID = MR.WORK_ORDER_ID
        AND    MI.ITEM_ID = MR.ITEM_ID
		AND    MI.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		AND    MI.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		AND    MI.IO_TIME BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		                      AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997/24
		AND    MI.IO_TYPE = 'I'
		AND    MI.IO_CATEGORY IN (SELECT MC.CODE_ID
		                          FROM   MOM_CODE MC
		                          WHERE  MC.DIVISION_CD = MI.DIVISION_CD
		                          AND    MC.COMPANY_CD  = MI.COMPANY_CD
		                          AND    MC.CODE_CLASS_ID = 'IO_CATEGORY'
		                          AND    MC.USE_YN = 'Y'
		                          AND    MC.ATTRIBUTE2 = 'Y' )
		AND    NOT EXISTS (SELECT '*'
		                   FROM   MOM_ITEM_STOCK_INOUT B
		                   WHERE  B.DIVISION_CD         = MI.DIVISION_CD 
		                   AND    B.COMPANY_CD          = MI.COMPANY_CD
		                   AND    B.IO_TYPE             = MI.IO_TYPE
		                   AND    B.PREV_STOCK_INOUT_ID = MI.ITEM_STOCK_INOUT_ID   )
	   <if test = "fromLocation != null and fromLocation != ''"> 
	    AND    MI.PREV_LOCATION_CD = #{fromLocation, jdbcType=VARCHAR}
	   </if>
	   <if test = "toLocation != null and toLocation != ''">
		AND    MI.LOCATION_CD = #{toLocation, jdbcType=VARCHAR}
	   </if>
	   <if test = "itemName != null and itemName != ''">
		AND    (MI.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
				OR UPPER(MD.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')
	   </if>
	   <if test = "itemType != null and itemType != ''">
		AND    MD.ITEM_TYPE = #{itemType, jdbcType=VARCHAR}
	   </if>
	   <if test= "workOrderId != null and workOrderId != ''">
	    AND    MR.WORK_ORDER_ID LIKE '%' || TRIM(UPPER(#{workOrderId, jdbcType=VARCHAR})) || '%'
	   </if>
	    ORDER BY MI.IO_TIME DESC, MR.WORK_ORDER_ID, MR.ITEM_ID
	</select>

	<select id="get_materialMoveCancelHist_list" resultType="camelMap" parameterType="java.util.HashMap">
<!-- 		SELECT A.ITEM_STOCK_INOUT_ID   -->
<!-- 		     , A.ITEM_STOCK_ID -->
<!-- 		     , A.ITEM_ID                -->
<!-- 		     , A.ITEM_NAME              -->
<!-- 		     , A.IO_TIME              -->
<!-- 		     , A.IN_LOCATION_CD     -->
<!-- 		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME( A.DIVISION_CD  -->
<!-- 		                                                  , A.COMPANY_CD -->
<!-- 		                                                  , A.IN_LOCATION_CD ) -->
<!-- 		        FROM   DUAL )  AS IN_LOCATION_NAME -->
<!-- 		     , A.OUT_LOCATION_CD        -->
<!-- 		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME( A.DIVISION_CD  -->
<!-- 		                                                  , A.COMPANY_CD -->
<!-- 		                                                  , A.OUT_LOCATION_CD ) -->
<!-- 		        FROM   DUAL )  AS OUT_LOCATION_NAME -->
<!-- 		     , A.QTY                  -->
<!-- 		     , A.CANCEL_QTY           -->
<!-- 		     , A.QTY - NVL(A.CANCEL_QTY,0)  AS  CANCEL_TXN_QTY    -->
<!-- 		     , A.IO_CATEGORY   -->
<!-- 		FROM   (SELECT MI.ITEM_STOCK_INOUT_ID -->
<!-- 		             , MI.ITEM_STOCK_ID -->
<!-- 		             , MI.ITEM_ID -->
<!-- 		             , MD.ITEM_NAME -->
<!-- 		             , MI.IO_TIME -->
<!-- 		             , (SELECT MIP.LOCATION_CD -->
<!-- 		                FROM   MOM_ITEM_STOCK_INOUT MIP -->
<!-- 		                WHERE  MIP.DIVISION_CD = MI.DIVISION_CD  -->
<!-- 		                AND    MIP.COMPANY_CD  = MI.COMPANY_CD -->
<!-- 		                AND    MIP.ITEM_STOCK_INOUT_ID = MI.PREV_STOCK_INOUT_ID)  AS  IN_LOCATION_CD -->
<!-- 		             , (SELECT SUM(MIC.QTY) -->
<!-- 		                FROM   MOM_ITEM_STOCK_INOUT MIC -->
<!-- 		                WHERE  MIC.DIVISION_CD = MI.DIVISION_CD  -->
<!-- 		                AND    MIC.COMPANY_CD  = MI.COMPANY_CD -->
<!-- 		                AND    MIC.PREV_STOCK_INOUT_ID = MI.ITEM_STOCK_INOUT_ID)  AS  CANCEL_QTY        -->
<!-- 		             , MI.LOCATION_CD   AS OUT_LOCATION_CD -->
<!-- 		             , MI.QTY -->
<!-- 		             , MI.IO_CATEGORY  -->
<!-- 		             , MI.DIVISION_CD -->
<!-- 		             , MI.COMPANY_CD   -->
<!-- 		        FROM   MOM_ITEM_STOCK_INOUT MI -->
<!-- 		             , MOM_ITEM_DEFINITION MD -->
<!-- 		        WHERE  MI.DIVISION_CD = MD.DIVISION_CD  -->
<!-- 		        AND    MI.COMPANY_CD  = MD.COMPANY_CD -->
<!-- 		        AND    MI.ITEM_ID     = MD.ITEM_ID -->
<!-- 		        AND    MI.DIVISION_CD =  #{divisionCd, jdbcType=VARCHAR} -->
<!-- 		        AND    MI.COMPANY_CD  =  #{companyCd, jdbcType=VARCHAR} -->
<!-- 		       <if test="itemId != null and itemId != ''"> -->
<!-- 		        AND   MI.ITEM_ID = #{itemId, jdbcType=VARCHAR}  -->
<!-- 		       </if> -->
<!-- 		       <if test="toLocation != null and toLocation != ''"> -->
<!-- 		        AND    MI.LOCATION_CD = #{toLocation, jdbcType=VARCHAR}    -->
<!-- 		       </if> -->
<!-- 		       <if test="fromDate != null and fromDate != ''"> -->
<!-- 		        AND    MI.IO_TIME BETWEEN TO_DATE( #{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') -->
<!-- 		                          AND     TO_DATE( #{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')  -->
<!-- 		       </if> -->
<!-- 		        AND    MI.IO_TYPE = 'I' -->
<!-- 		        AND    MI.QTY > 0 -->
<!-- 		        AND    MI.PREV_STOCK_INOUT_ID IS NOT NULL  -->
<!-- 		       ) A -->
<!-- 		WHERE  1 = 1  -->
<!-- 	   <if test="fromLocation != null and fromLocation != ''"> -->
<!-- 		AND    A.IN_LOCATION_CD = #{fromLocation, jdbcType=VARCHAR} -->
<!-- 	   </if> -->
<!-- 		AND     EXISTS ( SELECT '*' -->
<!-- 			             FROM   MOM_FACILITY MF -->
<!-- 			             WHERE  MF.DIVISION_CD = A.DIVISION_CD  -->
<!-- 			             AND    MF.COMPANY_CD  = A.COMPANY_CD -->
<!-- 			             AND    MF.FACILITY_CD = A.IN_LOCATION_CD -->
<!-- 			             AND    MF.FACILITY_TYPE = 'FAC200' -->
<!-- 			             AND    MF.USE_YN  = 'Y') -->
<!-- 		ORDER BY A.IO_TIME DESC, A.ITEM_STOCK_INOUT_ID DESC -->
	</select>
	
	<insert id="create_materialMoveCancelProc" statementType="CALLABLE">
	{
        CALL SP_MOM_MATERIAL_PKG.P_CANCLE_MATERIAL_ISSUE (
        	#{p_err_code, mode=OUT, jdbcType=VARCHAR}
           ,#{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           ,#{divisionCd, mode=IN, jdbcType=VARCHAR}
           ,#{companyCd, mode=IN, jdbcType=VARCHAR}
           ,#{menuId, mode=IN, jdbcType=VARCHAR}
           ,#{tableId, mode=IN, jdbcType=VARCHAR}
           ,#{createBy, mode=IN, jdbcType=VARCHAR}
        )
    }
    </insert>
	
</mapper>