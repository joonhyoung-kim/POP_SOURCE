<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.eis.salesAnalysis">
	<select id="get_salesAnalysis_list" resultType="camelMap" parameterType="java.util.HashMap">
		 SELECT ITEM_GROUP_LARGE
		  	  , MODEL
		      , MAX(PLAN_M1) AS PLAN_M1
		      , MAX(SALES_M1) AS SALES_M1
		      , TRUNC(MAX(SALES_M1) / DECODE(MAX(PLAN_M1), 0, 1, MAX(PLAN_M1)) * 100, 1) AS RATE_M1
		      , MAX(PLAN_M2) AS PLAN_M2
		      , MAX(SALES_M2) AS SALES_M2
		      , TRUNC(MAX(SALES_M2) / DECODE(MAX(PLAN_M2), 0, 1, MAX(PLAN_M2)) * 100, 1) AS RATE_M2
		      , MAX(PLAN_M3) AS PLAN_M3
		      , MAX(SALES_M3) AS SALES_M3
		      , TRUNC(MAX(SALES_M3) / DECODE(MAX(PLAN_M3), 0, 1, MAX(PLAN_M3)) * 100, 1) AS RATE_M3
		      , MAX(PLAN_M4) AS PLAN_M4
		      , MAX(SALES_M4) AS SALES_M4
		      , TRUNC(MAX(SALES_M4) / DECODE(MAX(PLAN_M4), 0, 1, MAX(PLAN_M4)) * 100, 1) AS RATE_M4
		      , MAX(PLAN_M5) AS PLAN_M5
		      , MAX(SALES_M5) AS SALES_M5
		      , TRUNC(MAX(SALES_M5) / DECODE(MAX(PLAN_M5), 0, 1, MAX(PLAN_M5)) * 100, 1) AS RATE_M5
		      , MAX(PLAN_M6) AS PLAN_M6
		      , MAX(SALES_M6) AS SALES_M6
		      , TRUNC(MAX(SALES_M6) / DECODE(MAX(PLAN_M6), 0, 1, MAX(PLAN_M6)) * 100, 1) AS RATE_M6
		      , MAX(PLAN_M7) AS PLAN_M7
		      , MAX(SALES_M7) AS SALES_M7
		      , TRUNC(MAX(SALES_M7) / DECODE(MAX(PLAN_M7), 0, 1, MAX(PLAN_M7)) * 100, 1) AS RATE_M7
		      , MAX(PLAN_M8) AS PLAN_M8
		      , MAX(SALES_M8) AS SALES_M8
		      , TRUNC(MAX(SALES_M8) / DECODE(MAX(PLAN_M8), 0, 1, MAX(PLAN_M8)) * 100, 1) AS RATE_M8
		      , MAX(PLAN_M9) AS PLAN_M9
		      , MAX(SALES_M9) AS SALES_M9
		      , TRUNC(MAX(SALES_M9) / DECODE(MAX(PLAN_M9), 0, 1, MAX(PLAN_M9)) * 100, 1) AS RATE_M9
		      , MAX(PLAN_M10) AS PLAN_M10
		      , MAX(SALES_M10) AS SALES_M10
		      , TRUNC(MAX(SALES_M10) / DECODE(MAX(PLAN_M10), 0, 1, MAX(PLAN_M10)) * 100, 1) AS RATE_M10
		      , MAX(PLAN_M11) AS PLAN_M11
		      , MAX(SALES_M11) AS SALES_M11
		      , TRUNC(MAX(SALES_M11) / DECODE(MAX(PLAN_M11), 0, 1, MAX(PLAN_M11)) * 100, 1) AS RATE_M11
		      , MAX(PLAN_M12) AS PLAN_M12
		      , MAX(SALES_M12) AS SALES_M12
		      , TRUNC(MAX(SALES_M12) / DECODE(MAX(PLAN_M12), 0, 1, MAX(PLAN_M12)) * 100, 1) AS RATE_M12
		   FROM (
		        SELECT ITEM_GROUP_LARGE, MODEL
		             , DECODE(B.M_SEQ, 1, PLAN_AMT, 0) AS PLAN_M1
		             , DECODE(B.M_SEQ, 2, PLAN_AMT, 0) AS PLAN_M2
		             , DECODE(B.M_SEQ, 3, PLAN_AMT, 0) AS PLAN_M3
		             , DECODE(B.M_SEQ, 4, PLAN_AMT, 0) AS PLAN_M4
		             , DECODE(B.M_SEQ, 5, PLAN_AMT, 0) AS PLAN_M5
		             , DECODE(B.M_SEQ, 6, PLAN_AMT, 0) AS PLAN_M6
		             , DECODE(B.M_SEQ, 7, PLAN_AMT, 0) AS PLAN_M7
		             , DECODE(B.M_SEQ, 8, PLAN_AMT, 0) AS PLAN_M8
		             , DECODE(B.M_SEQ, 9, PLAN_AMT, 0) AS PLAN_M9
		             , DECODE(B.M_SEQ, 10, PLAN_AMT, 0) AS PLAN_M10
		             , DECODE(B.M_SEQ, 11, PLAN_AMT, 0) AS PLAN_M11
		             , DECODE(B.M_SEQ, 12, PLAN_AMT, 0) AS PLAN_M12
		             , 0 AS SALES_M1
		             , 0 AS SALES_M2
		             , 0 AS SALES_M3
		             , 0 AS SALES_M4
		             , 0 AS SALES_M5
		             , 0 AS SALES_M6
		             , 0 AS SALES_M7
		             , 0 AS SALES_M8
		             , 0 AS SALES_M9
		             , 0 AS SALES_M10
		             , 0 AS SALES_M11
		             , 0 AS SALES_M12
		          FROM MOM_EIS_SALES_STATUS A
		             , (SELECT YEAR||MONTH AS YYYYMM
		                     , DENSE_RANK() OVER(ORDER BY YEAR||MONTH) AS M_SEQ 
		                  FROM TH_MST_TIME
		                 WHERE TO_DATE(YEAR||MONTH, 'yyyymm') BETWEEN ADD_MONTHS(TO_DATE(#{yyyymm, jdbcType=VARCHAR}, 'yyyymm'), - 11) AND TO_DATE(#{yyyymm, jdbcType=VARCHAR}, 'yyyymm')
		                 GROUP BY YEAR, MONTH) B
		         WHERE A.YYYYMM = B.YYYYMM 
		           AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		       UNION ALL
		        SELECT ITEM_GROUP_LARGE, MODEL
		             , 0 AS PLAN_M1
		             , 0 AS PLAN_M2
		             , 0 AS PLAN_M3
		             , 0 AS PLAN_M4
		             , 0 AS PLAN_M5
		             , 0 AS PLAN_M6
		             , 0 AS PLAN_M7
		             , 0 AS PLAN_M8
		             , 0 AS PLAN_M9
		             , 0 AS PLAN_M10
		             , 0 AS PLAN_M11
		             , 0 AS PLAN_M12
		             , DECODE(B.M_SEQ, 1, SALES_AMT, 0) AS SALES_M1
		             , DECODE(B.M_SEQ, 2, SALES_AMT, 0) AS SALES_M2
		             , DECODE(B.M_SEQ, 3, SALES_AMT, 0) AS SALES_M3
		             , DECODE(B.M_SEQ, 4, SALES_AMT, 0) AS SALES_M4
		             , DECODE(B.M_SEQ, 5, SALES_AMT, 0) AS SALES_M5
		             , DECODE(B.M_SEQ, 6, SALES_AMT, 0) AS SALES_M6
		             , DECODE(B.M_SEQ, 7, SALES_AMT, 0) AS SALES_M7
		             , DECODE(B.M_SEQ, 8, SALES_AMT, 0) AS SALES_M8
		             , DECODE(B.M_SEQ, 9, SALES_AMT, 0) AS SALES_M9
		             , DECODE(B.M_SEQ, 10, SALES_AMT, 0) AS SALES_M10
		             , DECODE(B.M_SEQ, 11, SALES_AMT, 0) AS SALES_M11
		             , DECODE(B.M_SEQ, 12, SALES_AMT, 0) AS SALES_M12
		          FROM MOM_EIS_SALES_STATUS A
		             , (SELECT YEAR||MONTH AS YYYYMM
		                     , DENSE_RANK() OVER(ORDER BY YEAR||MONTH) AS M_SEQ 
		                  FROM TH_MST_TIME
		                 WHERE TO_DATE(YEAR||MONTH, 'yyyymm') BETWEEN ADD_MONTHS(TO_DATE(#{yyyymm, jdbcType=VARCHAR}, 'yyyymm'), - 11) AND TO_DATE(#{yyyymm, jdbcType=VARCHAR}, 'yyyymm')
		                 GROUP BY YEAR, MONTH) B
		         WHERE A.YYYYMM = B.YYYYMM 
		           AND DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		           AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		        )
		    GROUP BY ITEM_GROUP_LARGE, MODEL
		    ORDER BY ITEM_GROUP_LARGE, MODEL

	</select>
	
	<select id="get_yyyymm_list" resultType="camelMap" parameterType="java.util.HashMap">
	SELECT DISTINCT YYYYMM AS CODE
	     , SUBSTR(YYYYMM, 0,4)|| '-'||SUBSTR(YYYYMM, 5,2) AS NAME
	  FROM MOM_EIS_SALES_STATUS
	 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	   AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	 ORDER BY YYYYMM DESC
	</select>
	
</mapper>