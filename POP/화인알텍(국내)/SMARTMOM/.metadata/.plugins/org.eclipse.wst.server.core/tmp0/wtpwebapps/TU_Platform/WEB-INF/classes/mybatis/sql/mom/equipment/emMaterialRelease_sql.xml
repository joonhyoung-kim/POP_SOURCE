<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.equipment.emMaterialRelease">
	<select id="get_emMaterialRelease_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT EI.EQM_WO_ID
		     , EW.EQM_WO_NAME
		     , EW.EQUIPMENT_CD
     		 , (SELECT MOM_COMMON_PKG.FN_GET_EQUIPMENT_NAME (EW.DIVISION_CD
		                                                   , EW.COMPANY_CD
		                                                   , EW.EQUIPMENT_CD)
                  FROM DUAL) AS EQUIPMENT_NAME
		     , EI.ITEM_ID
		     , MI.ITEM_NAME
		     , MI.SPECIFICATION
		     , MI.UNIT
		     , TO_CHAR(EI.REQUEST_DATE, 'yyyy-mm-dd') AS REQUEST_DATE
		     , EI.IN_LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (EI.DIVISION_CD
		                                                  , EI.COMPANY_CD
		                                                  , EI.IN_LOCATION_CD)
		          FROM DUAL) AS IN_LOCATION_NAME
		     , EI.OUT_LOCATION_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (EI.DIVISION_CD
		                                                  , EI.COMPANY_CD
		                                                  , EI.OUT_LOCATION_CD)
		          FROM DUAL) AS OUT_LOCATION_NAME
		     , (SELECT MOM_COMMON_PKG.FN_GET_CURRENT_STOCK(EI.DIVISION_CD
		                                                 , EI.COMPANY_CD
		                                                 , EI.ITEM_ID
		                                                 , EI.OUT_LOCATION_CD)
		          FROM DUAL) AS CURRENT_QTY
		     , MI.STANDARD_OUT_QTY
		     , EI.REQUEST_QTY
		     , NVL(EI.ISSUE_QTY, 0) AS ISSUE_QTY
		     , NVL(EI.CANCEL_QTY, 0) AS CANCEL_QTY
		     , EI.REQUEST_QTY - NVL(EI.ISSUE_QTY, 0) - NVL(EI.CANCEL_QTY, 0) AS REMAIN_QTY
		     , EI.REQUEST_QTY - NVL(EI.ISSUE_QTY, 0) - NVL(EI.CANCEL_QTY, 0) AS OUTPUT_QTY
		     , TO_CHAR((SELECT MOM_COMMON_PKG.FN_GET_LOCAL_TIME(EI.DIVISION_CD, EI.COMPANY_CD) 
		                FROM DUAL), 'YYYY-MM-DD') AS ISSUE_DATE
		     , (EI.REQUEST_QTY - NVL(EI.ISSUE_QTY, 0) - NVL(EI.CANCEL_QTY, 0)) * MI.CONVERSION_UNIT_QTY AS CONVERSION_QTY
		     , MI.CONVERSION_UNIT
		     , EI.REQUEST_TYPE
		     , EI.REQUEST_STATE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (EI.DIVISION_CD
		                                              , EI.COMPANY_CD
		                                              , 'EQM_REQ_STATE'
		                                              , EI.REQUEST_STATE)
		          FROM DUAL) AS REQUEST_STATE_NAME
		     , '' AS DESCRIPTION
		     , EI.UPDATE_BY
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME (EI.DIVISION_CD
		                                              , EI.COMPANY_CD
		                                              , EI.UPDATE_BY)
		          FROM DUAL) AS UPDATE_BY_NAME 
		     , TO_CHAR(EI.UPDATE_DATE, 'yyyy-mm-dd') AS UPDATE_DATE
		     , EI.ISSUE_REQUEST_ID
		  FROM MOM_EQM_ISSUE_REQUEST EI
		     , MOM_EQM_WORK_ORDER EW
		     , MOM_ITEM_DEFINITION MI
		 WHERE EI.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		   AND EI.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND EI.DIVISION_CD = EW.DIVISION_CD
		   AND EI.COMPANY_CD = EW.COMPANY_CD
		   AND EI.EQM_WO_ID = EW.EQM_WO_ID
		   AND EI.DIVISION_CD = MI.DIVISION_CD
		   AND EI.COMPANY_CD = MI.COMPANY_CD
		   AND EI.ITEM_ID = MI.ITEM_ID
		   AND EI.REQUEST_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd')
		  <if test="outLocationCd != null and outLocationCd != ''">
		   AND EI.OUT_LOCATION_CD = #{outLocationCd, jdbcType=VARCHAR}
		  </if>
		  <if test="inLocationCd != null and inLocationCd != ''">
		   AND EI.IN_LOCATION_CD = #{inLocationCd, jdbcType=VARCHAR}
		  </if>
		  <if test="itemId != null and itemId != ''">
		   AND (EI.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%'
		        OR UPPER(MI.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%')
		  </if>
		  <if test="specification != null and specification != ''">
		   AND UPPER(MI.SPECIFICATION) LIKE '%' || TRIM(UPPER(#{specification, jdbcType=VARCHAR})) || '%'
		  </if>
		  <if test="eqmWoId != null and eqmWoId != ''">
		   AND (EI.EQM_WO_ID LIKE '%' || TRIM(UPPER(#{eqmWoId, jdbcType=VARCHAR})) || '%'
		        OR UPPER(EW.EQM_WO_NAME) LIKE '%' || TRIM(UPPER(#{eqmWoId, jdbcType=VARCHAR})) || '%')
		  </if>
		  <if test="equipmentCd != null and equipmentCd != ''">
		   AND EW.EQUIPMENT_CD = #{equipmentCd, jdbcType=VARCHAR}
		  </if>
		 ORDER BY EI.EQM_WO_ID, EI.ISSUE_REQUEST_ID
	</select>
	
	<update id="modify_emMaterialReleaseState" statementType="CALLABLE" parameterType="java.util.HashMap">
	{ CALL 
  	  DECLARE
	  BEGIN
	  	#{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String} := 'E';
		
		UPDATE MOM_EQM_ISSUE_REQUEST
	    SET REQUEST_STATE = CASE WHEN NVL(ISSUE_QTY, 0) > 0 THEN 'E'
	                                                       ELSE 'C'
	                        END
	                      , CANCEL_QTY = REQUEST_QTY - NVL(ISSUE_QTY, 0)
	                      , DESCRIPTION = 'Forced Closing'
	    WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	    AND EQM_WO_ID = #{eqmWoId, jdbcType=VARCHAR}
	    AND ITEM_ID = #{itemId, jdbcType=VARCHAR}
	    ;
	    
	    INSERT INTO MOM_EQM_ISSUE_REQUEST_HIST (
	    	LAST_EVENT_SEQ
		  , DIVISION_CD
		  , COMPANY_CD
		  , EQM_WO_ID
		  , ITEM_ID
		  , REQUEST_QTY
		  , REQUEST_DATE
		  , ISSUE_QTY
		  , CANCEL_QTY
		  , IN_LOCATION_CD
		  , OUT_LOCATION_CD
		  , REQUEST_TYPE
		  , DESCRIPTION
		  , CREATE_DATE
		  , CREATE_BY
		  , UPDATE_DATE
		  , UPDATE_BY
		  , TID
		  , ISSUE_REQUEST_ID
		  , REQUEST_GROUP_ID
		  , UNIT_QTY
		  , REQUEST_STATE
		  , ISSUE_DATE
	    )
	    SELECT S_ORDER_SEQ.NEXTVAL
	    	 , DIVISION_CD
			 , COMPANY_CD
			 , EQM_WO_ID
			 , ITEM_ID
			 , REQUEST_QTY
			 , REQUEST_DATE
			 , ISSUE_QTY
			 , CANCEL_QTY
			 , IN_LOCATION_CD
			 , OUT_LOCATION_CD
			 , REQUEST_TYPE
			 , DESCRIPTION
			 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			 , #{userId, jdbcType=VARCHAR}
			 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})
			 , #{userId, jdbcType=VARCHAR}
			 , TID
			 , ISSUE_REQUEST_ID
			 , REQUEST_GROUP_ID
			 , UNIT_QTY
			 , REQUEST_STATE
			 , ISSUE_DATE
	      FROM MOM_EQM_ISSUE_REQUEST
		 WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	       AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	       AND EQM_WO_ID = #{eqmWoId, jdbcType=VARCHAR}
	       AND ITEM_ID = #{itemId, jdbcType=VARCHAR}
	    ;
	    
		SELECT
			CASE 
				WHEN COUNT(*) = 0 THEN 'E'
				ELSE 'S' 
			END  
			INTO #{p_err_code, mode=OUT, jdbcType=VARCHAR, javaType=String}
		FROM MOM_EQM_ISSUE_REQUEST
		WHERE DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	    AND COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	    AND EQM_WO_ID = #{eqmWoId, jdbcType=VARCHAR}
	    AND ITEM_ID = #{itemId, jdbcType=VARCHAR}
	    ;
     END
    }
	</update>
	
	<insert id="create_emMaterialRelease" statementType="CALLABLE">
	{
        CALL SP_MOM_EQUIPMENT_PKG.P_CREATE_EQM_ISSUE (
        	#{p_err_code, mode=OUT, jdbcType=VARCHAR}
          , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
          , #{divisionCd, mode=IN, jdbcType=VARCHAR}
          , #{companyCd, mode=IN, jdbcType=VARCHAR}
          , #{eqmWoId, mode=IN, jdbcType=VARCHAR}
          , #{issueRequestId, mode=IN, jdbcType=VARCHAR}
          , #{outputQty, mode=IN, jdbcType=NUMERIC}
          , #{outLocationCd, mode=IN, jdbcType=VARCHAR}
          , TO_DATE(#{issueDate, mode=IN, jdbcType=VARCHAR}, 'YYYY-MM-DD')
          , #{conversionQty, mode=IN, jdbcType=NUMERIC}
          , #{description, mode=IN, jdbcType=VARCHAR}
          , #{updateBy, mode=IN, jdbcType=VARCHAR}
          , #{materialReleaseGroupId, mode=IN, jdbcType=VARCHAR}
          , #{transactionSeq, mode=IN, jdbcType=NUMERIC}
        )
    }
	</insert>
	
	<select id="get_emMaterialReleaseGroupId_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MOM_COMMON_PKG.FN_GET_EQM_SEQ_ID(#{divisionCd, mode=IN, jdbcType=VARCHAR}
           									  , #{companyCd, mode=IN, jdbcType=VARCHAR}
           									  , 'EQM_ISSUE_REQUEST'
           									  , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})) AS MATERIAL_RELEASE_GROUP_ID
		  FROM DUAL
	</select>
	
</mapper>