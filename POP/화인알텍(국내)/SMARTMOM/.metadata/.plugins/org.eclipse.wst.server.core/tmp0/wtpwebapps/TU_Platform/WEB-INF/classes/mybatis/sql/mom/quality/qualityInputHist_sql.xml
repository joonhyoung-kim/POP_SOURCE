<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.quality.qualityInputHist">
	
	<!-- modify_hists 
    * XMOMA11 / 20191106 / gyp / SQL 정리, TRIM 추가
     -->
	<select id="get_qualityInputHistUp_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.MATERIAL_DEPARTURE_ID    				
		     , TO_CHAR(A.STATE_TIME, 'yyyy-mm-dd') AS STATE_TIME
		     , NVL(MR.DEPARTURE_VENDOR_CD,MR.VENDOR_CD )   AS VENDOR_CD          			
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(MR.DIVISION_CD, MR.COMPANY_CD, NVL(MR.DEPARTURE_VENDOR_CD,MR.VENDOR_CD ) )				
		        FROM   DUAL )  AS VENDOR_NAME				
		     , MR.ITEM_ID				
		     , MD.ITEM_NAME      			
		     , MD.SPECIFICATION  			
		     , DECODE(A.DEFECT_QTY, 0, #{MESSAGES30064, jdbcType=VARCHAR}, #{MESSAGES30063, jdbcType=VARCHAR}) AS JUDGMENT				
		     , A.DEPARTURE_QTY    			
		     , A.DEFECT_QTY      				
		     , A.DEFECT_BY   			
		     , A.VENDOR_LOT
		     , A.DEPARTURE_STATE
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD, A.COMPANY_CD,'MATERIAL_DEPARTURE_STATE', A.DEPARTURE_STATE) FROM DUAL) AS DEPARTURE_STATE_NAME
		FROM   (SELECT MD.DIVISION_CD				
		             , MD.COMPANY_CD				
		             , MD.MATERIAL_DEPARTURE_ID				
		             , MD.MATERIAL_ORDER_ID
		             , MD.DEPARTURE_STATE				
		             , MAX(MR.STATE_TIME)  AS STATE_TIME				
		             , SUM(MR.DEFECT_QTY)  AS DEFECT_QTY				
		             , MAX(MD.DEPARTURE_QTY)  AS DEPARTURE_QTY				
		             , MAX(MR.DEFECT_BY)  AS DEFECT_BY				
		             , MAX(MD.VENDOR_LOT)  AS  VENDOR_LOT				
		        FROM   MOM_DEFECT_RESULT MR				
		             , MOM_MATERIAL_DEPARTURE MD				
		        WHERE  MR.DIVISION_CD = MD.DIVISION_CD				
		        AND    MR.COMPANY_CD  = MD.COMPANY_CD				
		        AND    MR.MATERIAL_DEPARTURE_ID = MD.MATERIAL_DEPARTURE_ID				
		        AND    MR.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}				
		        AND    MR.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}				
		        AND    MR.MEASURE_TYPE = 'IQC'				
		        AND    MR.DEFECT_STATE  = 'FINISHED'		
		        AND    MR.STATE_TIME  BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') 
		                                  AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997/24
		        GROUP BY MD.DIVISION_CD				
		               , MD.COMPANY_CD				
		               , MD.MATERIAL_DEPARTURE_ID				
		               , MD.MATERIAL_ORDER_ID
		               , MD.DEPARTURE_STATE  ) A				
		     , MOM_MATERIAL_ORDER MR    				
		     , MOM_ITEM_DEFINITION MD     				
		WHERE  A.DIVISION_CD = MR.DIVISION_CD				
		AND    A.COMPANY_CD  = MR.COMPANY_CD				
		AND    A.MATERIAL_ORDER_ID  = MR.MATERIAL_ORDER_ID  				
		AND    MR.DIVISION_CD  = MD.DIVISION_CD  				
		AND    MR.COMPANY_CD   = MD.COMPANY_CD				
		AND    MR.ITEM_ID      = MD.ITEM_ID   			
	   <if test="itemName != null and itemName != ''">
		AND (MR.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
			OR UPPER(MD.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')
	   </if>
	   <if test="departureNo != null and departureNo != ''">
		AND A.MATERIAL_DEPARTURE_ID LIKE '%' || TRIM(UPPER(#{departureNo, jdbcType=VARCHAR})) || '%'
	   </if>
	   <if test="vendorName != null and vendorName != ''">
		AND MR.VENDOR_CD = #{vendorName, jdbcType=VARCHAR}
	   </if>
	   <if test="judgment != null and judgment != ''">
		AND A.JUDGMENT_ID = #{judgment, jdbcType=VARCHAR}
	   </if>
	   <if test="orderType != null and orderType != ''">
      	AND MR.ORDER_FLAG = #{orderType, jdbcType=VARCHAR}
	   </if>
	    ORDER BY A.STATE_TIME DESC, A.MATERIAL_DEPARTURE_ID
	</select>

	<select id="get_qualityInputHistDown_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT MR.MEASURE_METHOD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MR.DIVISION_CD, MR.COMPANY_CD, 'MEASURE_METHOD', MR.MEASURE_METHOD)	
		        FROM   DUAL )  AS MEASURE_METHOD_NAME	
		     , MR.GAUGE_METHOD	
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MR.DIVISION_CD, MR.COMPANY_CD, 'GAUGE_METHOD', MR.GAUGE_METHOD)	
		        FROM   DUAL )  AS GAUGE_METHOD_NAME	
		     , MS.MEASURE_SPEC
		     , MS.CHECK_METHOD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MS.DIVISION_CD, MS.COMPANY_CD, 'CHECK_METHOD', MS.CHECK_METHOD)	
		        FROM   DUAL )  AS CHECK_METHOD_NAME	
		     , MR.TARGET	
		     , MR.USL	
		     , MR.LSL 	
		     , MR.ITEM_VALUE1	
		     , MR.ITEM_VALUE2	
		     , MR.ITEM_VALUE3	
		     , MR.ITEM_VALUE4	
		     , MR.ITEM_VALUE5	
		     , MID.UNIT	
		     , LEAST(MS.SAMPLE_CNT, MD.DEPARTURE_QTY) AS SAMPLE_CNT	
		     , MR.DEFECT_QTY 	
		     , MR.PROCESS_DESCRIPTION	
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MR.DIVISION_CD, MR.COMPANY_CD, 'IQC_REASON_CODE', MR.REASON_CODE) 
		        FROM   DUAL) AS QA_REASON_NAME
		     , MR.DESCRIPTION 	
		     , TO_CHAR(MR.HANDLING_TIME, 'yyyy-mm-dd') AS HANDLING_TIME
		     , MD.DEPARTURE_QTY
		     , MR.DEFECT_RESULT_ID
		     , DECODE(NVL((SELECT 'Y'
				             FROM MOM_FILE
				            WHERE ENTITY_ID = MR.DEFECT_RESULT_ID
				              AND USE_YN = 'Y'
				              AND DIVISION_CD = MR.DIVISION_CD
				              AND COMPANY_CD = MR.COMPANY_CD
				              AND ROWNUM = 1), 'N')
			          , 'Y', 'Y', 'N') AS IS_FILE
			 , MD.MATERIAL_DEPARTURE_ID
		FROM   MOM_DEFECT_RESULT MR	
		     , MOM_MEASURE_SPEC MS
		     , MOM_MATERIAL_DEPARTURE MD
		     , MOM_ITEM_DEFINITION MID
		WHERE  MR.DIVISION_CD = MS.DIVISION_CD	
		AND    MR.COMPANY_CD  = MS.COMPANY_CD	
		AND    MR.ITEM_ID     = MS.ITEM_ID	
		AND    MR.MEASURE_TYPE = MS.MEASURE_TYPE	
		AND    MR.GAUGE_METHOD = MS.GAUGE_METHOD
		AND    MR.DIVISION_CD = MD.DIVISION_CD
        AND    MR.COMPANY_CD = MD.COMPANY_CD
        AND    MR.MATERIAL_DEPARTURE_ID = MD.MATERIAL_DEPARTURE_ID
        AND    MR.DIVISION_CD = MID.DIVISION_CD
        AND    MR.COMPANY_CD = MID.COMPANY_CD
        AND    MR.ITEM_ID = MID.ITEM_ID
		AND    MR.DIVISION_CD = #{divisionCd, jdbcType =VARCHAR}
		AND    MR.COMPANY_CD  = #{companyCd, jdbcType =VARCHAR}	
		AND    MR.MEASURE_TYPE = 'IQC'	
		AND    MR.DEFECT_STATE  = 'FINISHED'	
		AND    MR.MATERIAL_DEPARTURE_ID = #{materialDepartureId, jdbcType =VARCHAR}	
		ORDER BY MR.DEFECT_RESULT_ID
	</select>
	
	 <insert id="create_qualityInputDel" statementType="CALLABLE">
    {
    	CALL SP_MOM_QA_PKG.P_CANCEL_IQC (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{materialDepartureId, mode=IN, jdbcType=VARCHAR}
           , #{userId, mode=IN, jdbcType=VARCHAR}
        )
    }
    </insert>

</mapper>