<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.equipment.emOrderHist">
	<select id="get_emOrderHist_list" resultType="camelMap" parameterType="java.util.HashMap">
        SELECT MO.EQUIPMENT_ORDER_ID
		     , MO.EQM_REQUEST_ID
		     , MO.VENDOR_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME (MO.DIVISION_CD
		                                                , MO.COMPANY_CD
		                                                , MO.VENDOR_CD) 
		          FROM DUAL) AS VENDOR_NAME
		     , MO.DEPARTURE_VENDOR_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME (MO.DIVISION_CD
		                                                , MO.COMPANY_CD
		                                                , MO.DEPARTURE_VENDOR_CD) 
		          FROM DUAL) AS DEPARTURE_VENDOR_NAME
		     , MO.ITEM_ID
		     , MI.ITEM_NAME
		     , MI.SPECIFICATION
		     , MI.UNIT
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MI.DIVISION_CD
		                                              , MI.COMPANY_CD
		                                              , 'ITEM_UNIT'
		                                              , MI.UNIT)
		          FROM DUAL) AS UNIT_NAME
		     , MO.ORDER_TYPE
		     , MO.ORDER_STATE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MO.DIVISION_CD
		                                              , MO.COMPANY_CD
		                                              , 'MATERIAL_ORDER_STATE'
		                                              , MO.ORDER_STATE)
		          FROM DUAL) AS ORDER_STATE_NAME
		     , MO.ORDER_QTY
		     , NVL (MO.CLOSED_QTY, 0) AS CLOSED_QTY
		     , NVL (MO.CANCEL_QTY, 0) AS CANCEL_QTY
		     , MO.ORDER_QTY - NVL(MO.CLOSED_QTY, 0) - NVL(MO.CANCEL_QTY, 0) AS REMAIN_QTY
		     , TO_CHAR (MO.ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE
		     , MO.LOCATION_CD
                , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME(MO.DIVISION_CD
                                                            , MO.COMPANY_CD
                                                            , MO.LOCATION_CD)
                     FROM DUAL) AS LOCATION_NAME
		     , MO.UNIT_PRICE
		     , MO.MARKET_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MO.DIVISION_CD
		                                              , MO.COMPANY_CD
		                                              , 'MARKET_CODE'
		                                              , MO.MARKET_CD)
		          FROM DUAL) AS MARKET_NAME
		     , MO.CURRENCY_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (MO.DIVISION_CD
		                                              , MO.COMPANY_CD
		                                              , 'CURRENCY_CODE'
		                                              , MO.CURRENCY_CD)
		          FROM DUAL) AS CURRENCY_NAME
		     , MO.ORDER_GROUP_ID
		     , MO.ORDER_GROUP_SEQ
		     , MO.DESCRIPTION
		     , TO_CHAR (MO.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
		     , MO.CREATE_BY
		     , TO_CHAR (MO.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE
		     , MO.UPDATE_BY
		     , MO.TRANSACTION_SEQ
		  FROM MOM_EQM_ITEM_ORDER MO
		     , MOM_ITEM_DEFINITION MI
		 WHERE MO.DIVISION_CD = MI.DIVISION_CD 
		   AND MO.COMPANY_CD = MI.COMPANY_CD 
		   AND MO.ITEM_ID = MI.ITEM_ID
		   AND MI.USE_YN = 'Y' 
		   AND MO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
		   AND MO.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		  <if test="dateCombo == 'CUSTOMER_DUE_DATE'">
		   AND MO.ORDER_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		                     AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997 / 24
		  </if>
		  <if test="dateCombo == 'ORDER_DATE'">
		   AND MO.CREATE_DATE BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')
		                      AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 23.9997 / 24
		  </if>
		  <if test="vendorCd != '' and vendorCd != null">
		   AND MO.VENDOR_CD = #{vendorCd, jdbcType=VARCHAR}
		  </if>
		  <if test="departureVendorCd != '' and departureVendorCd != null">
		   AND MO.DEPARTURE_VENDOR_CD = #{departureVendorCd, jdbcType=VARCHAR}
		  </if>
		  <if test="specification != '' and specification != null">
		   AND UPPER(MI.SPECIFICATION) LIKE '%' || TRIM(UPPER(#{specification, jdbcType=VARCHAR})) || '%'
		  </if>
		  <if test="equipmentOrderId != '' and equipmentOrderId != null">
		   AND MO.EQUIPMENT_ORDER_ID LIKE '%' || TRIM(UPPER(#{equipmentOrderId, jdbcType=VARCHAR})) || '%'
		  </if>
		  <if test="state != '' and state != null">
		   AND MO.ORDER_STATE = #{state, jdbcType=VARCHAR}
		  </if>
		  <if test="itemId != '' and itemId != null">
           AND (MO.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%'
               OR UPPER(MI.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%')
          </if> 
		 ORDER BY MO.EQUIPMENT_ORDER_ID, MO.VENDOR_CD, MO.DEPARTURE_VENDOR_CD, MO.ITEM_ID
	</select>
	
	<insert id="create_emOrderCancel" statementType="CALLABLE">
	{
        CALL SP_MOM_EQUIPMENT_PKG.P_CANCEL_EQM_ORDER ( 
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
		   , #{menuId, mode=IN, jdbcType=VARCHAR}
           , #{tableId, mode=IN, jdbcType=VARCHAR}
           , #{updateBy, mode=IN, jdbcType=VARCHAR}
        )
    }
	</insert>
	
	<select id="get_emOrderExcelPrintCount_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT COUNT(*) AS ROW_COUNT
		  FROM MOM_EQM_ITEM_ORDER MO
		 WHERE MO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} 
		   AND MO.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		   AND MO.ORDER_GROUP_ID IN(${orderGroupIds})
	</select>
	
	<select id="get_emOrderExcelPrint_list" resultType="camelMap" parameterType="java.util.HashMap">
		WITH TEMP1 AS (
		    SELECT MO.ORDER_GROUP_ID
		    	 , MO.ORDER_GROUP_ID AS 그룹번호
		         , MO.VENDOR_CD AS 업체코드
		         , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME(MO.DIVISION_CD,
		                                                     MO.COMPANY_CD,
		                                                     MO.VENDOR_CD)
		              FROM DUAL) AS 업체명
		         , NVL(V.FAX_NO, '-') AS 업체FAX
		         , NVL(MV.ADDRESS, '-') AS 납품처주소
		         , NVL(MV.VENDOR_NAME, '-') AS 납품처명
		         , NVL(MV.CEO_NAME, '-') AS 납품처대표
		         , MO.ITEM_ID AS PLIST_ITEM_ID
		         , MI.ITEM_NAME AS PLIST_ITEM_NAME
		         , MI.UNIT AS PLIST_UNIT
		         , MO.ORDER_QTY AS PLIST_QTY
		         , TO_CHAR(MO.ORDER_DATE, 'MM/DD') AS PLIST_ORDER_DATE
		         , MO.TRANSACTION_SEQ
                 , MO.DIVISION_CD
                 , MO.COMPANY_CD
		      FROM MOM_EQM_ITEM_ORDER MO
		         , MOM_ITEM_DEFINITION MI
		         , MOM_VENDOR V
		         , (SELECT *
		              FROM MOM_VENDOR
		             WHERE VENDOR_CD = #{divisionCd, jdbcType=VARCHAR}
		               AND ROWNUM = 1) MV
		     WHERE MO.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		       AND MO.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		       AND MO.DIVISION_CD = MI.DIVISION_CD
		       AND MO.COMPANY_CD = MI.COMPANY_CD
		       AND MO.ITEM_ID = MI.ITEM_ID
		       AND MO.DIVISION_CD = V.DIVISION_CD(+)
		       AND MO.COMPANY_CD = V.COMPANY_CD(+)
		       AND MO.DIVISION_CD = V.VENDOR_CD(+)
		       AND MI.USE_YN = 'Y'
		       AND MO.ORDER_GROUP_ID IN(${orderGroupIds})
		       AND MO.ORDER_STATE != 'CANCEL'
		    )
		    SELECT A.*
		         , CASE
		             WHEN MOD (PLIST_CELLROW, LIST_ALLCOUNT) = 1
		             THEN
		                 (CEIL (PLIST_CELLROW / LIST_ALLCOUNT)) || '/' || (CEIL (GROUP_COUNT / LIST_ALLCOUNT))
		             ELSE
		                 ''
		           END AS PLIST_PAGING
		      FROM (SELECT A.*
		                 , ROW_NUMBER() OVER(PARTITION BY A.ORDER_GROUP_ID ORDER BY A.ORDER_GROUP_ID, A.TRANSACTION_SEQ) PLIST_CELLROW
		                 , COUNT(*) OVER(PARTITION BY A.ORDER_GROUP_ID) AS GROUP_COUNT 
		                 , (SELECT LIST_ALLCOUNT
		                      FROM MOM_EXCEL
		                     WHERE DIVISION_CD = A.DIVISION_CD
		                       AND COMPANY_CD = A.COMPANY_CD
		                       AND EXCEL_ID = #{excelId, jdbcType=VARCHAR}) AS LIST_ALLCOUNT
		              FROM TEMP1 A
		           ) A
	</select>
	
</mapper>