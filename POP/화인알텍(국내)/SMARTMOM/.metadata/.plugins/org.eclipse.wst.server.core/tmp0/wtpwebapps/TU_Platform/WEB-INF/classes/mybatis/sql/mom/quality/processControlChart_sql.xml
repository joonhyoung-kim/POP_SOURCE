<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.quality.processControlChart">
	<select id="get_processControlChart_list" resultType="camelMap" parameterType="java.util.HashMap">
		SELECT A.WORK_ORDER_ID 
             , A.DEFECT_LEVEL
             , A.ITEM_ID
             , C.ITEM_NAME
             , C.SPECIFICATION
             , A.DEFECT_QTY
             , A.TARGET
             , A.USL
             , A.LSL
             , A.MEASURE_METHOD
             , A.GAUGE_METHOD
             , A.CHECK_METHOD
             , TO_CHAR(A.STATE_TIME, 'yyyy-mm-dd') AS STATE_TIME
             , A.PRODUCT_QTY
             , A.ITEM_VALUE1
             , A.ITEM_VALUE2
             , A.ITEM_VALUE3
             , A.ITEM_VALUE4
             , A.ITEM_VALUE5
             , B.SAMPLE_CNT
             , A.JUDGMENT_ID
             , A.DEFECT_BY
        FROM MOM_DEFECT_RESULT A
           , MOM_MEASURE_SPEC B
           , MOM_ITEM_DEFINITION C
       WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
         AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
         AND A.MEASURE_TYPE = 'PQC'
         AND A.MEASURE_METHOD = 'NUMBERLESS'
         AND A.DEFECT_STATE = 'FINISH'
         AND A.DIVISION_CD = B.DIVISION_CD(+)
         AND A.COMPANY_CD = B.COMPANY_CD(+)
         AND A.DIVISION_CD = C.DIVISION_CD(+)
         AND A.COMPANY_CD = C.COMPANY_CD(+)
         AND A.ITEM_ID = B.ITEM_ID(+)
         AND A.ITEM_ID = C.ITEM_ID(+)
         AND A.MEASURE_TYPE = B.MEASURE_TYPE(+)
         AND A.MEASURE_METHOD = B.MEASURE_METHOD(+)
         AND A.GAUGE_METHOD = B.GAUGE_METHOD(+)
         AND A.CHECK_METHOD = B.CHECK_METHOD(+)
         AND A.STATE_TIME BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'yyyy-mm-dd') AND TO_DATE(#{toDate, jdbcType=VARCHAR},'yyyy-mm-dd') + 23.9997/24
         AND A.ITEM_ID = #{itemId, jdbcType=VARCHAR}
         AND A.GAUGE_METHOD = #{gaugeMethod, jdbcType=VARCHAR}
         AND A.TARGET != 0
         AND A.JUDGMENT_ID = 'Y'
       ORDER BY A.WORK_ORDER_ID, A.ITEM_ID, A.CHECK_METHOD, A.DEFECT_LEVEL
	</select>

	<select id="get_processControlChartGraph_list" resultType="camelMap" parameterType="java.util.HashMap">
    WITH REL_TAB AS (
       SELECT A.WORK_ORDER_ID 
            , A.DEFECT_LEVEL
            , CASE WHEN B.SAMPLE_CNT = 1 THEN A.ITEM_VALUE1 / B.SAMPLE_CNT
                   WHEN B.SAMPLE_CNT = 2 THEN (A.ITEM_VALUE1 + A.ITEM_VALUE2) / B.SAMPLE_CNT
                   WHEN B.SAMPLE_CNT = 3 THEN (A.ITEM_VALUE1 + A.ITEM_VALUE2 + A.ITEM_VALUE3) / B.SAMPLE_CNT
                   WHEN B.SAMPLE_CNT = 4 THEN (A.ITEM_VALUE1 + A.ITEM_VALUE2 + A.ITEM_VALUE3 + A.ITEM_VALUE4) / B.SAMPLE_CNT
                   WHEN B.SAMPLE_CNT = 5 THEN (A.ITEM_VALUE1 + A.ITEM_VALUE2 + A.ITEM_VALUE3 + A.ITEM_VALUE4 + A.ITEM_VALUE5) / B.SAMPLE_CNT
               END AS XBAR
            , CASE WHEN B.SAMPLE_CNT = 1 THEN A.ITEM_VALUE1
                   WHEN B.SAMPLE_CNT = 2 THEN GREATEST(A.ITEM_VALUE1, A.ITEM_VALUE2)
                   WHEN B.SAMPLE_CNT = 3 THEN GREATEST(A.ITEM_VALUE1, A.ITEM_VALUE2, A.ITEM_VALUE3) 
                   WHEN B.SAMPLE_CNT = 4 THEN GREATEST(A.ITEM_VALUE1, A.ITEM_VALUE2, A.ITEM_VALUE3, A.ITEM_VALUE4) 
                   WHEN B.SAMPLE_CNT = 5 THEN GREATEST(A.ITEM_VALUE1, A.ITEM_VALUE2, A.ITEM_VALUE3, A.ITEM_VALUE4, A.ITEM_VALUE5) 
               END AS MAX_VALUE
            , CASE WHEN B.SAMPLE_CNT = 1 THEN A.ITEM_VALUE1
                   WHEN B.SAMPLE_CNT = 2 THEN LEAST(A.ITEM_VALUE1, A.ITEM_VALUE2)
                   WHEN B.SAMPLE_CNT = 3 THEN LEAST(A.ITEM_VALUE1, A.ITEM_VALUE2, A.ITEM_VALUE3) 
                   WHEN B.SAMPLE_CNT = 4 THEN LEAST(A.ITEM_VALUE1, A.ITEM_VALUE2, A.ITEM_VALUE3, A.ITEM_VALUE4) 
                   WHEN B.SAMPLE_CNT = 5 THEN LEAST(A.ITEM_VALUE1, A.ITEM_VALUE2, A.ITEM_VALUE3, A.ITEM_VALUE4, A.ITEM_VALUE5) 
               END AS MIN_VALUE
        FROM MOM_DEFECT_RESULT A
           , MOM_MEASURE_SPEC B
       WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
         AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
         AND A.MEASURE_TYPE = 'PQC'
         AND A.MEASURE_METHOD = 'NUMBERLESS'
         AND A.DEFECT_STATE = 'FINISH'
         AND A.DIVISION_CD = B.DIVISION_CD(+)
         AND A.COMPANY_CD = B.COMPANY_CD(+)
         AND A.ITEM_ID = B.ITEM_ID(+)
         AND A.MEASURE_TYPE = B.MEASURE_TYPE(+)
         AND A.MEASURE_METHOD = B.MEASURE_METHOD(+)
         AND A.GAUGE_METHOD = B.GAUGE_METHOD(+)
         AND A.CHECK_METHOD = B.CHECK_METHOD(+)
         AND A.STATE_TIME BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR},'yyyy-mm-dd') AND TO_DATE(#{toDate, jdbcType=VARCHAR},'yyyy-mm-dd') + 23.9997/24
         AND A.ITEM_ID = #{itemId, jdbcType=VARCHAR}
         AND A.GAUGE_METHOD = #{gaugeMethod, jdbcType=VARCHAR}
         AND A.TARGET != 0
         AND A.JUDGMENT_ID = 'Y'
       GROUP BY A.WORK_ORDER_ID
              , A.DEFECT_LEVEL
              , A.ITEM_VALUE1
              , A.ITEM_VALUE2
              , A.ITEM_VALUE3
              , A.ITEM_VALUE4
              , A.ITEM_VALUE5
              , B.SAMPLE_CNT
    )
   , CPK_TAB AS (
       SELECT B.XBAR_AVG
            , B.XBAR_MIN
            , B.STDV
            , (B.XBAR_MIN + B.XBAR_GAP/8 * 0) AS XBAR_GRADE0
            , (B.XBAR_MIN + B.XBAR_GAP/8 * 1) AS XBAR_GRADE1
            , (B.XBAR_MIN + B.XBAR_GAP/8 * 2) AS XBAR_GRADE2
            , (B.XBAR_MIN + B.XBAR_GAP/8 * 3) AS XBAR_GRADE3
            , (B.XBAR_MIN + B.XBAR_GAP/8 * 4) AS XBAR_GRADE4
            , (B.XBAR_MIN + B.XBAR_GAP/8 * 5) AS XBAR_GRADE5
            , (B.XBAR_MIN + B.XBAR_GAP/8 * 6) AS XBAR_GRADE6
            , (B.XBAR_MIN + B.XBAR_GAP/8 * 7) AS XBAR_GRADE7
         FROM (SELECT AVG(XBAR) AS XBAR_AVG
                    , STDDEV_POP(XBAR) AS STDV
                    , MAX(XBAR) AS XBAR_MAX
                    , MIN(XBAR) AS XBAR_MIN
                    , (MAX(XBAR) - MIN(XBAR)) AS XBAR_GAP 
                 FROM REL_TAB R2
              ) B
    )
    SELECT XBAR_AVG
         , STDV
         , LEV  
         , GRADE
         , COUNT(GRADE) AS CNT 
         , 1 / (STDV * SQRT(2 * ACOS(-1))) * EXP(-POWER((GRADE - XBAR_AVG), 2) / (2 * POWER(STDV, 2))) AS NORM_DIST
     FROM (       
            SELECT XBAR_AVG
                 , STDV
                 , LEV
                 , CASE WHEN LEV = 1 THEN XBAR_GRADE0
                        WHEN LEV = 2 THEN XBAR_GRADE1
                        WHEN LEV = 3 THEN XBAR_GRADE2
                        WHEN LEV = 4 THEN XBAR_GRADE3
                        WHEN LEV = 5 THEN XBAR_GRADE4
                        WHEN LEV = 6 THEN XBAR_GRADE5
                        WHEN LEV = 7 THEN XBAR_GRADE6
                        WHEN LEV = 8 THEN XBAR_GRADE7
                        WHEN LEV = 9 THEN 999
                    END AS GRADE
              FROM (
                    SELECT A.XBAR
                         , B.XBAR_AVG
                         , B.STDV
                         , CASE WHEN A.XBAR = B.XBAR_GRADE0 THEN 1 
                         <![CDATA[
                                WHEN A.XBAR > B.XBAR_GRADE0 AND A.XBAR <= B.XBAR_GRADE1 THEN 2
                                WHEN A.XBAR > B.XBAR_GRADE1 AND A.XBAR <= B.XBAR_GRADE2 THEN 3
                                WHEN A.XBAR > B.XBAR_GRADE2 AND A.XBAR <= B.XBAR_GRADE3 THEN 4
                                WHEN A.XBAR > B.XBAR_GRADE3 AND A.XBAR <= B.XBAR_GRADE4 THEN 5
                                WHEN A.XBAR > B.XBAR_GRADE4 AND A.XBAR <= B.XBAR_GRADE5 THEN 6
                                WHEN A.XBAR > B.XBAR_GRADE5 AND A.XBAR <= B.XBAR_GRADE6 THEN 7
                                WHEN A.XBAR > B.XBAR_GRADE6 AND A.XBAR <= B.XBAR_GRADE7 THEN 8
                                WHEN A.XBAR > B.XBAR_GRADE7 THEN 9
                            END AS LEV
                            ]]>
                         , B.XBAR_GRADE0
                         , B.XBAR_GRADE1
                         , B.XBAR_GRADE2
                         , B.XBAR_GRADE3
                         , B.XBAR_GRADE4
                         , B.XBAR_GRADE5
                         , B.XBAR_GRADE6
                         , B.XBAR_GRADE7
                      FROM REL_TAB A
                         , CPK_TAB B
                   ) 
            )
    GROUP BY XBAR_AVG, STDV, LEV, GRADE
    ORDER BY XBAR_AVG, STDV, LEV
	</select>
</mapper>