<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thirautech.mom.purchase.stock.itemStockMoveHist">
	<select id="get_itemStockMoveHist_list" resultType="camelMap" parameterType="java.util.HashMap">
<!-- 		SELECT A.* -->
<!-- 			, (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (#{divisionCd, jdbcType=VARCHAR} -->
<!-- 		                                             , #{companyCd, jdbcType=VARCHAR} -->
<!-- 		                                             , 'Y_N' -->
<!-- 		                                             , A.CANCEL_FLAG) -->
<!-- 		         FROM DUAL) AS CANCEL_FLAG_NAME -->
<!-- 		    , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (#{divisionCd, jdbcType=VARCHAR} -->
<!-- 		                                             , #{companyCd, jdbcType=VARCHAR} -->
<!-- 		                                             , 'IO_CATEGORY' -->
<!-- 		                                             , A.IO_CATEGORY) -->
<!-- 		         FROM DUAL) AS IO_CATEGORY_NAME   -->
<!-- 	      FROM ( SELECT A.ITEM_ID -->
<!-- 			     , B.ITEM_NAME -->
<!-- 			     , B.SPECIFICATION -->
<!-- 			     , A.QTY -->
<!-- 			     , (NVL(C.QTY,0) * -1) AS CANCEL_QTY -->
<!-- 			     , A.PREV_LOCATION_CD AS FROM_LOCATION_CD -->
<!-- 			     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (A.DIVISION_CD, A.COMPANY_CD, A.PREV_LOCATION_CD) FROM DUAL) AS FROM_LOCATION_NAME -->
<!-- 			     , A.LOCATION_CD AS TO_LOCATION_CD -->
<!-- 			     , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (A.DIVISION_CD, A.COMPANY_CD, A.LOCATION_CD) FROM DUAL) AS TO_LOCATION_NAME -->
<!-- 			     , A.UPDATE_BY -->
<!-- 			     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME (A.DIVISION_CD, A.COMPANY_CD, A.UPDATE_BY) FROM DUAL) AS USER_NAME -->
<!-- 			     , TO_CHAR(A.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE -->
<!-- 			     , A.DESCRIPTION -->
<!-- 			     , TO_CHAR(A.IO_TIME, 'YYYY-MM-DD') AS IO_TIME -->
<!-- 			     , TO_CHAR(C.IO_TIME, 'YYYY-MM-DD') AS CANCEL_IO_TIME -->
<!-- 			     , B.ITEM_TYPE -->
<!-- 			     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME( B.DIVISION_CD, B.COMPANY_CD, 'ITEM_TYPE', B.ITEM_TYPE ) FROM DUAL ) AS ITEM_TYPE_NAME -->
<!-- 			     , A.PREV_STOCK_INOUT_ID AS FROM_INOUT_ID -->
<!-- 	             , A.ITEM_STOCK_INOUT_ID AS TO_INOUT_ID -->
<!-- 	             , A.IO_CATEGORY -->
<!-- 		         , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (A.DIVISION_CD, A.COMPANY_CD, 'IO_CATEGORY', A.IO_CATEGORY) FROM DUAL) AS IO_CATEGORY_NAME -->
<!-- 		         , (SELECT MOM_COMMON_PKG.FN_GET_CURRENT_STOCK(A.DIVISION_CD, A.COMPANY_CD, A.ITEM_ID, A.LOCATION_CD) FROM DUAL) AS TO_LOCATION_QTY -->
<!-- 		         , DECODE(C.ITEM_STOCK_INOUT_ID, NULL, 'N', 'Y' ) AS CANCEL_FLAG -->
<!-- 		         , C.ITEM_STOCK_INOUT_ID -->
<!-- 		         , A.ITEM_INPUT_ID -->
<!-- 			  FROM MOM_ITEM_STOCK_INOUT A -->
<!-- 			     , MOM_ITEM_DEFINITION B -->
<!-- 			     , (SELECT * FROM MOM_ITEM_STOCK_INOUT  -->
<!-- 			      <![CDATA[ WHERE QTY < 0 ]]> -->
<!-- 			       ) C -->
<!-- 			     , MOM_PARAMETER P -->
<!-- 			 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} -->
<!-- 			   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR} -->
<!-- 			   AND A.DIVISION_CD = B.DIVISION_CD(+) -->
<!-- 			   AND A.COMPANY_CD = B.COMPANY_CD(+) -->
<!-- 			   AND A.ITEM_ID = B.ITEM_ID(+) -->
<!-- 			   AND A.DIVISION_CD = C.DIVISION_CD(+) -->
<!-- 	           AND A.COMPANY_CD = C.COMPANY_CD(+) -->
<!-- 	           AND A.ITEM_STOCK_INOUT_ID = C.PREV_STOCK_INOUT_ID(+) -->
<!-- 			   AND A.PREV_STOCK_INOUT_ID IS NOT NULL -->
<!-- 			   AND A.DIVISION_CD = P.DIVISION_CD -->
<!--                AND A.COMPANY_CD = P.COMPANY_CD -->
<!-- 			  <if test="fromDate != null and fromDate != ''"> -->
<!-- 			   AND A.IO_TIME BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd')  -->
<!-- 			  </if> -->
<!-- 			  <if test = 'stockType =="MAT"'> -->
<!-- 			   AND A.PREV_LOCATION_CD IN (SELECT FACILITY_CD FROM MOM_FACILITY -->
<!-- 			                              WHERE DIVISION_CD = A.DIVISION_CD -->
<!-- 			                              AND COMPANY_CD = A.COMPANY_CD -->
<!-- 			                              AND NVL(USE_YN, 'Y') = 'Y' -->
<!-- 			                              AND FACILITY_TYPE IN('FAC200')) -->
<!-- 			   AND A.LOCATION_CD IN (SELECT FACILITY_CD FROM MOM_FACILITY -->
<!-- 	                                 WHERE DIVISION_CD = A.DIVISION_CD -->
<!-- 	                                 AND COMPANY_CD = A.COMPANY_CD -->
<!-- 	                                 AND NVL(USE_YN, 'Y') = 'Y' -->
<!-- 	                                 AND FACILITY_TYPE IN('FAC300', 'FAC400')) -->
<!-- 			  </if> -->
<!-- 			  <if test = 'stockType =="WO"'> -->
<!-- 			   AND A.PREV_LOCATION_CD IN ( SELECT FACILITY_CD FROM MOM_FACILITY -->
<!--                                            WHERE DIVISION_CD = A.DIVISION_CD -->
<!--                                            AND COMPANY_CD = A.COMPANY_CD -->
<!--                                            AND NVL(USE_YN, 'Y') = 'Y' -->
<!--                                            AND FACILITY_TYPE IN('FAC300', 'FAC500')) -->
<!--                AND A.LOCATION_CD IN (SELECT FACILITY_CD FROM MOM_FACILITY -->
<!--                                      WHERE DIVISION_CD = A.DIVISION_CD -->
<!--                                      AND COMPANY_CD = A.COMPANY_CD -->
<!--                                      AND NVL(USE_YN, 'Y') = 'Y' -->
<!--                                      AND FACILITY_TYPE IN('FAC300', 'FAC500')) -->
<!-- 			  </if> -->
<!-- 	          <if test = 'stockType =="SO"'> -->
<!-- 	           AND A.PREV_LOCATION_CD IN ( SELECT FACILITY_CD FROM MOM_FACILITY -->
<!-- 	                                       WHERE DIVISION_CD = A.DIVISION_CD -->
<!-- 	                                       AND COMPANY_CD = A.COMPANY_CD -->
<!-- 	                                       AND NVL(USE_YN, 'Y') = 'Y' -->
<!-- 	                                       AND FACILITY_TYPE IN('FAC300')) -->
<!-- 	           AND A.LOCATION_CD IN (SELECT FACILITY_CD FROM MOM_FACILITY -->
<!-- 	                                 WHERE DIVISION_CD = A.DIVISION_CD -->
<!-- 	                                 AND COMPANY_CD = A.COMPANY_CD -->
<!-- 	                                 AND NVL(USE_YN, 'Y') = 'Y' -->
<!-- 	                                 AND FACILITY_TYPE IN('FAC400')) -->
<!-- 	          </if> -->
<!-- 			  <if test="itemName != null and itemName != ''"> -->
<!-- 			   AND (UPPER(A.item_id) LIKE UPPER('%' || #{itemName, jdbcType=VARCHAR} || '%') -->
<!-- 			    OR UPPER(B.item_name) LIKE UPPER('%' || #{itemName, jdbcType=VARCHAR} || '%') -->
<!-- 			    OR UPPER(B.SPECIFICATION) LIKE UPPER('%' || #{itemName, jdbcType=VARCHAR} || '%')) -->
<!-- 			  </if> -->
<!-- 			  <if test="locationName != null and locationName != ''"> -->
<!-- 			   AND A.LOCATION_CD = #{locationName, jdbcType=VARCHAR} -->
<!-- 			  </if> -->
<!-- 			  <if test="type != null and type != ''"> -->
<!-- 			   AND A.IO_TYPE = #{type, jdbcType=VARCHAR} -->
<!-- 			  </if> -->
<!-- 			  <if test="itemType != null and itemType != ''"> -->
<!-- 			   AND B.ITEM_TYPE =  #{itemType, jdbcType=VARCHAR} -->
<!-- 			  </if> -->
<!-- 			 ORDER BY A.UPDATE_DATE DESC) A -->
		
		  SELECT A.*
		       , (NVL (C.QTY, 0) * -1) AS CANCEL_QTY
		       , TO_CHAR(C.IO_TIME, 'YYYY-MM-DD') AS CANCEL_IO_TIME
		       , DECODE (C.ITEM_STOCK_INOUT_ID, '', 'N', 'Y') AS CANCEL_FLAG
		       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (
		                    C.DIVISION_CD
		                  , C.COMPANY_CD
		                  , 'Y_N'
		                  , DECODE (C.ITEM_STOCK_INOUT_ID, '', 'N', 'Y'))
		            FROM DUAL)
		            AS CANCEL_FLAG_NAME
		    FROM (SELECT A.DIVISION_CD
		               , A.COMPANY_CD
		               , A.IO_TYPE
		               , A.IO_CATEGORY
		               , A.ITEM_INPUT_ID
		               , A.ITEM_ID
		               , B.ITEM_NAME
		               , B.SPECIFICATION
		               , A.VENDOR_CD
		               , A.QTY
		               , A.PREV_LOCATION_CD AS FROM_LOCATION_CD
		               , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (A.DIVISION_CD
										                            , A.COMPANY_CD
										                            , A.PREV_LOCATION_CD)
		                    FROM DUAL)
		                    AS FROM_LOCATION_NAME
		               , A.LOCATION_CD AS TO_LOCATION_CD
		               , (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (A.DIVISION_CD
		                                                            , A.COMPANY_CD
		                                                            , A.LOCATION_CD)
		                    FROM DUAL)
		                    AS TO_LOCATION_NAME
		               , A.UPDATE_BY
		               , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME (A.DIVISION_CD
		                                                        , A.COMPANY_CD
		                                                        , A.UPDATE_BY)
		                    FROM DUAL)
		                    AS USER_NAME
		               , TO_CHAR(A.IO_TIME, 'YYYY-MM-DD') AS IO_TIME
		               , A.DESCRIPTION
		               , A.UPDATE_DATE
		               , B.ITEM_TYPE
		               , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (B.DIVISION_CD
		                                                        , B.COMPANY_CD
		                                                        , 'ITEM_TYPE'
		                                                        , B.ITEM_TYPE)
		                    FROM DUAL)
		                    AS ITEM_TYPE_NAME
		               , A.PREV_STOCK_INOUT_ID AS FROM_INOUT_ID
		               , A.ITEM_STOCK_INOUT_ID AS TO_INOUT_ID
		               , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (A.DIVISION_CD
		                                                        , A.COMPANY_CD
		                                                        , 'IO_CATEGORY'
		                                                        , A.IO_CATEGORY)
		                    FROM DUAL)
		                    AS IO_CATEGORY_NAME
		               , (SELECT MOM_COMMON_PKG.FN_GET_CURRENT_STOCK (A.DIVISION_CD
		                                                            , A.COMPANY_CD
		                                                            , A.ITEM_ID
		                                                            , A.LOCATION_CD)
		                    FROM DUAL)
		                    AS TO_LOCATION_QTY 
		               , A.CUSTOMER_PO_ID                              
		            FROM MOM_ITEM_STOCK_INOUT A, MOM_ITEM_DEFINITION B
		           WHERE A.DIVISION_CD = B.DIVISION_CD
	                 AND A.COMPANY_CD = B.COMPANY_CD
	                 AND A.ITEM_ID = B.ITEM_ID
	                 AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	                 AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
	                 AND A.IO_TIME BETWEEN TO_DATE(#{fromDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') 
	                                   AND TO_DATE(#{toDate, jdbcType=VARCHAR}, 'yyyy-mm-dd') + 23.9997/24
	                <if test="itemName != null and itemName != ''">
				     AND (A.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%'
				        OR UPPER(B.ITEM_NAME) LIKE '%' || TRIM(UPPER(#{itemName, jdbcType=VARCHAR})) || '%')
				    </if>
				    <if test="fromLocation != null and fromLocation != ''">
				     AND A.PREV_LOCATION_CD = #{fromLocation, jdbcType=VARCHAR}
				    </if>
				    <if test="toLocation != null and toLocation != ''">
				     AND A.LOCATION_CD = #{toLocation, jdbcType=VARCHAR}
				    </if>
				    <if test="type != null and type != ''">
				     AND A.IO_CATEGORY = #{type, jdbcType=VARCHAR}
				    </if>
				    <if test="itemType != null and itemType != ''">
				     AND B.ITEM_TYPE =  #{itemType, jdbcType=VARCHAR}
				    </if>
				     AND A.IO_TYPE = 'I'
	                <!-- 자재이동 -->
	                <if test = "stockType =='MAT'">
	                 AND A.IO_CATEGORY IN
	                        (SELECT MC.CODE_ID
	                           FROM MOM_CODE MC
	                          WHERE MC.DIVISION_CD = A.DIVISION_CD
                                AND MC.COMPANY_CD = A.COMPANY_CD
                                AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
                                AND MC.USE_YN = 'Y'
                                AND MC.ATTRIBUTE7 = 'Y')
	                </if>
	                <!-- 공정이동 -->
	                <if test = "stockType =='WO'">
	                 AND A.IO_CATEGORY IN
	                            (SELECT MC.CODE_ID
	                               FROM MOM_CODE MC
	                              WHERE MC.DIVISION_CD = A.DIVISION_CD
                                    AND MC.COMPANY_CD = A.COMPANY_CD
                                    AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
                                    AND MC.USE_YN = 'Y'
                                    AND MC.ATTRIBUTE8 = 'Y') 
	                </if>
	                <!-- 제품이동 -->
	                <if test = "stockType =='SO'">
	                 AND A.IO_CATEGORY IN
	                        (SELECT MC.CODE_ID
	                           FROM MOM_CODE MC
	                          WHERE MC.DIVISION_CD = A.DIVISION_CD
                                AND MC.COMPANY_CD = A.COMPANY_CD
                                AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
                                AND MC.USE_YN = 'Y'
                                AND MC.ATTRIBUTE11 = 'Y')
	                </if>
	                <!-- 자재반납 -->
                    <if test = "stockType =='MRTN'">
                     AND A.IO_CATEGORY IN
                            (SELECT MC.CODE_ID
                               FROM MOM_CODE MC
                              WHERE MC.DIVISION_CD = A.DIVISION_CD
                                AND MC.COMPANY_CD = A.COMPANY_CD
                                AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
                                AND MC.USE_YN = 'Y'
                                AND MC.ATTRIBUTE1 = 'Y')
                    </if>
	                ) A
		       , MOM_ITEM_STOCK_INOUT C
		   WHERE A.DIVISION_CD = C.DIVISION_CD(+)
	         AND A.COMPANY_CD = C.COMPANY_CD(+)
	         AND A.TO_INOUT_ID = C.PREV_STOCK_INOUT_ID(+)
		ORDER BY A.UPDATE_DATE DESC, A.TO_INOUT_ID DESC 
	</select>
	
	<select id="get_itemStockMoveHistPrint_list" resultType="camelMap" parameterType="java.util.HashMap">
	  WITH TEMP1 AS (
		SELECT A.ROW_COUNT
			 , TO_CHAR(A.IO_TIME, 'YYYY-MM-DD') AS 출고일자
		     , TO_CHAR(A.IO_TIME, 'YYYY-MM-DD') AS 출고일자하단
		     , A.ITEM_INPUT_ID AS 출고번호
		     , A.USER_ID
		     , CASE WHEN A.VENDOR_CD IS NOT NULL
		            THEN
		              (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME (A.DIVISION_CD
		                                                       , A.COMPANY_CD
		                                                       , A.VENDOR_CD)
		                 FROM DUAL)
		            ELSE
		              (SELECT MOM_COMMON_PKG.FN_GET_FACILITY_NAME (A.DIVISION_CD
		                                                         , A.COMPANY_CD
		                                                         , A.LOCATION_CD)
		                 FROM DUAL)
		        END AS 거래선
		       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (A.DIVISION_CD
		                                                , A.COMPANY_CD
		                                                , 'DEPT_CD'
		                                                , A.DEPT_CD)
		            FROM DUAL) AS 소속
		       , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME (A.DIVISION_CD
		                                                , A.COMPANY_CD
		                                                , A.USER_ID)
		            FROM DUAL) AS 성명
		       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.DIVISION_CD
		       										   , A.COMPANY_CD
		       										   , 'IO_CATEGORY'
		       										   , A.IO_CATEGORY) 
		       		FROM DUAL) AS 출고구분
		       , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME (A.DIVISION_CD
		                                                , A.COMPANY_CD
		                                                , 'ITEM_TYPE'
		                                                , A.ITEM_TYPE)
		            FROM DUAL) AS 종류
		       , '*' || A.ITEM_INPUT_ID || '*' AS 바코드
		       , A.ITEM_ID || '/' || A.ITEM_NAME AS PLIST_ITEM
		       , TO_CHAR(A.QTY) AS PLIST_QTY
		       , '' AS PLIST_UNIT_PRICE
		       , '' AS PLIST_DESCRIPTION
			   , (SELECT MOM_COMMON_PKG.FN_GET_VENDOR_NAME (A.DIVISION_CD
			   											  , A.COMPANY_CD
			   											  , A.DIVISION_CD)
			   		FROM DUAL) AS COMPANY_NAME
		       , A.ITEM_STOCK_INOUT_ID
		       , A.DIVISION_CD
               , A.COMPANY_CD
               , A.ITEM_INPUT_ID
               , A.UPDATE_DATE
		    FROM (SELECT COUNT(*) AS ROW_COUNT
		    		   , A.COMPANY_CD
		               , A.DIVISION_CD
		               , A.IO_CATEGORY
		               , A.IO_TIME
		               , A.ITEM_INPUT_ID AS ITEM_INPUT_ID
		               , A.UPDATE_BY AS USER_ID
		               , MIN (A.UPDATE_DATE) AS UPDATE_DATE
		               , MIN (A.VENDOR_CD) AS VENDOR_CD
		               , MIN (A.LOCATION_CD) AS LOCATION_CD
		               , (SELECT TU.DEPT_CD
		                    FROM TU_USER TU
		                   WHERE TU.DIVISION_CD = A.DIVISION_CD
                             AND TU.COMPANY_CD = A.COMPANY_CD
                             AND TU.EMP_NO = A.UPDATE_BY) AS DEPT_CD
		               , A.ITEM_ID
		               , MIN (B.ITEM_TYPE) AS ITEM_TYPE
		               , MIN (B.ITEM_NAME) AS ITEM_NAME
		               , SUM (A.QTY) AS QTY
		               , A.ITEM_STOCK_INOUT_ID
		              FROM MOM_ITEM_STOCK_INOUT A, MOM_ITEM_DEFINITION B
		             WHERE     A.DIVISION_CD = B.DIVISION_CD
		                   AND A.COMPANY_CD = B.COMPANY_CD
		                   AND A.ITEM_ID = B.ITEM_ID
		                   AND A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
		                   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
		                   AND A.IO_TYPE = 'I'
						   AND A.ITEM_INPUT_ID IN (${itemInputIds})
		                   AND NOT EXISTS
                              (SELECT '*'
                                 FROM MOM_ITEM_STOCK_INOUT C
                                WHERE C.DIVISION_CD = A.DIVISION_CD
                                  AND C.COMPANY_CD = A.COMPANY_CD
                                  AND C.IO_TYPE = A.IO_TYPE
                                  AND C.PREV_STOCK_INOUT_ID = A.ITEM_STOCK_INOUT_ID)
			              <if test = "stockType =='MAT'">
			               AND A.IO_CATEGORY IN
			                        (SELECT MC.CODE_ID
			                           FROM MOM_CODE MC
			                          WHERE MC.DIVISION_CD = A.DIVISION_CD
		                                AND MC.COMPANY_CD = A.COMPANY_CD
		                                AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
		                                AND MC.USE_YN = 'Y'
		                                AND MC.ATTRIBUTE7 = 'Y')
			              </if>
			              <if test = "stockType =='WO'">
			               AND A.IO_CATEGORY IN
		                            (SELECT MC.CODE_ID
		                               FROM MOM_CODE MC
		                              WHERE MC.DIVISION_CD = A.DIVISION_CD
	                                    AND MC.COMPANY_CD = A.COMPANY_CD
	                                    AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
	                                    AND MC.USE_YN = 'Y'
	                                    AND MC.ATTRIBUTE8 = 'Y') 
			              </if>
			              <if test = "stockType =='SO'">
			               AND A.IO_CATEGORY IN
			                        (SELECT MC.CODE_ID
			                           FROM MOM_CODE MC
			                          WHERE MC.DIVISION_CD = A.DIVISION_CD
		                                AND MC.COMPANY_CD = A.COMPANY_CD
		                                AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
		                                AND MC.USE_YN = 'Y'
		                                AND MC.ATTRIBUTE11 = 'Y')
			              </if>
			              <if test = "stockType =='MRTN'">
	                       AND A.IO_CATEGORY IN
	                                (SELECT MC.CODE_ID
	                                   FROM MOM_CODE MC
	                                  WHERE MC.DIVISION_CD = A.DIVISION_CD
	                                    AND MC.COMPANY_CD = A.COMPANY_CD
	                                    AND MC.CODE_CLASS_ID = 'IO_CATEGORY'
	                                    AND MC.USE_YN = 'Y'
	                                    AND MC.ATTRIBUTE1 = 'Y')
	                      </if>
		          GROUP BY A.DIVISION_CD
		                 , A.COMPANY_CD
		                 , A.IO_CATEGORY
		                 , A.IO_TIME
		                 , A.ITEM_INPUT_ID
		                 , A.UPDATE_BY
		                 , A.ITEM_ID
		                 , A.ITEM_STOCK_INOUT_ID) A
		)
	SELECT A.*
	     , CASE WHEN MOD(PLIST_CELLROW, LIST_ALLCOUNT) = 1 THEN (CEIL(PLIST_CELLROW / LIST_ALLCOUNT)) || '/' || (CEIL(GROUP_COUNT / LIST_ALLCOUNT)) 
      		    ELSE '' END AS PLIST_PAGING
	  FROM (SELECT A.*, ROW_NUMBER() OVER(PARTITION BY A.ITEM_INPUT_ID ORDER BY A.UPDATE_DATE DESC, A.ITEM_STOCK_INOUT_ID DESC) PLIST_CELLROW
	  			 , COUNT(*) OVER(PARTITION BY A.ITEM_INPUT_ID) AS GROUP_COUNT
	  			 , (SELECT LIST_ALLCOUNT
			          FROM MOM_EXCEL
			         WHERE DIVISION_CD = A.DIVISION_CD
			           AND COMPANY_CD = A.COMPANY_CD
			           AND EXCEL_ID = #{excelId, jdbcType=VARCHAR}) AS LIST_ALLCOUNT
	          FROM TEMP1 A
	             ) A
	</select>
	
	<select id="get_itemStockMoveHistPrintCount_list" resultType="camelMap" parameterType="java.util.HashMap">
<!-- 		SELECT COUNT(*) AS ROW_COUNT -->
<!-- 		  FROM MOM_ITEM_STOCK_INOUT A -->
<!-- 		 WHERE A.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR} -->
<!-- 		   AND A.COMPANY_CD = #{companyCd, jdbcType=VARCHAR} -->
<!-- 		   AND A.ITEM_INPUT_ID IN (${itemInputIds}) -->
<!-- 		   AND NOT EXISTS -->
<!--                   (SELECT '*' -->
<!--                      FROM MOM_ITEM_STOCK_INOUT C -->
<!--                     WHERE C.DIVISION_CD = A.DIVISION_CD -->
<!--                       AND C.COMPANY_CD = A.COMPANY_CD -->
<!--                       AND C.IO_TYPE = 'I' -->
<!--                       AND C.PREV_STOCK_INOUT_ID = A.ITEM_STOCK_INOUT_ID) -->
<!--           <if test ="stockType =='MAT'"> -->
<!--            AND A.IO_CATEGORY IN -->
<!--                     (SELECT MC.CODE_ID -->
<!--                        FROM MOM_CODE MC -->
<!--                       WHERE MC.DIVISION_CD = A.DIVISION_CD -->
<!--                            AND MC.COMPANY_CD = A.COMPANY_CD -->
<!--                            AND MC.CODE_CLASS_ID = 'IO_CATEGORY' -->
<!--                            AND MC.USE_YN = 'Y' -->
<!--                            AND MC.ATTRIBUTE7 = 'Y') -->
<!--           </if> -->
<!--           <if test ="stockType =='WO'"> -->
<!--            AND A.IO_CATEGORY IN -->
<!--                        (SELECT MC.CODE_ID -->
<!--                           FROM MOM_CODE MC -->
<!--                          WHERE MC.DIVISION_CD = A.DIVISION_CD -->
<!--                               AND MC.COMPANY_CD = A.COMPANY_CD -->
<!--                               AND MC.CODE_CLASS_ID = 'IO_CATEGORY' -->
<!--                               AND MC.USE_YN = 'Y' -->
<!--                               AND MC.ATTRIBUTE8 = 'Y')  -->
<!--           </if> -->
<!--           <if test = "stockType =='SO'"> -->
<!--            AND A.IO_CATEGORY IN -->
<!--                     (SELECT MC.CODE_ID -->
<!--                        FROM MOM_CODE MC -->
<!--                       WHERE MC.DIVISION_CD = A.DIVISION_CD -->
<!--                            AND MC.COMPANY_CD = A.COMPANY_CD -->
<!--                            AND MC.CODE_CLASS_ID = 'IO_CATEGORY' -->
<!--                            AND MC.USE_YN = 'Y' -->
<!--                            AND MC.ATTRIBUTE11 = 'Y') -->
<!--           </if>   -->
	</select>
    
    <insert id="create_itemStockMoveCancelProc" statementType="CALLABLE" parameterType="java.util.HashMap">
    {
        CALL P_ITEM_STOCK_MOVE_C (
             #{p_err_code, mode=OUT, jdbcType=VARCHAR}
           , #{p_err_msg, mode=OUT, jdbcType=VARCHAR}
           , #{divisionCd, mode=IN, jdbcType=VARCHAR}
           , #{companyCd, mode=IN, jdbcType=VARCHAR}
           , #{fromInoutId, mode=IN, jdbcType=VARCHAR}
           , #{toInoutId, mode=IN, jdbcType=VARCHAR}
           , #{cancelIoTime, mode=IN, jdbcType=VARCHAR}
           , #{createBy, mode=IN, jdbcType=VARCHAR}
        )
    }
    </insert>
</mapper>